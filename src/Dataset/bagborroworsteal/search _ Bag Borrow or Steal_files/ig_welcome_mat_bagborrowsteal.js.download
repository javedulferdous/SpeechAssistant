

// iGlobal Welcome Mat Script
// Authored by iGlobal Stores (www.iglobalstores.com)
// Copyright iGlobal Stores 2014

//
// Store specific settings
//

// Replace with your STORE ID
var ig_storeId = 670;
// Replace with your domain
var ig_cookieDomain = window.location.hostname;// If you prefer, you can put your domain here, like so "yourdomain.com";
// All countries, including the US
var ig_countries = {"AF":"Afghanistan","AL":"Albania","DZ":"Algeria","AS":"American Samoa","AD":"Andorra","AO":"Angola","AI":"Anguilla","AG":"Antigua","AR":"Argentina","AM":"Armenia","AW":"Aruba","AU":"Australia","AT":"Austria","AZ":"Azerbaijan","BS":"Bahamas","BH":"Bahrain","BD":"Bangladesh","BB":"Barbados","BY":"Belarus","BE":"Belgium","BZ":"Belize","BJ":"Benin","BM":"Bermuda","BT":"Bhutan","BO":"Bolivia","BQ":"Bonaire, St. Eustatius & Saba","BA":"Bosnia & Herzegovina","BW":"Botswana","BR":"Brazil","BN":"Brunei","BG":"Bulgaria","BF":"Burkina Faso","BI":"Burundi","KH":"Cambodia","CM":"Cameroon","CA":"Canada","IC":"Canary Islands","CV":"Cape Verde","KY":"Cayman Islands","CF":"Central African Republic","TD":"Chad","CL":"Chile","CN":"China - People's Republic of","CO":"Colombia","KM":"Comoros","CG":"Congo","CK":"Cook Islands","CR":"Costa Rica","HR":"Croatia","CW":"Cura√ßao","CY":"Cyprus","CZ":"Czech Republic","DK":"Denmark","DJ":"Djibouti","DM":"Dominica","DO":"Dominican Republic","EC":"Ecuador","EG":"Egypt","SV":"El Salvador","GQ":"Equatorial Guinea","ER":"Eritrea","EE":"Estonia","ET":"Ethiopia","FK":"Falkland Islands","FO":"Faroe Islands (Denmark)","FJ":"Fiji","FI":"Finland","FR":"France","GF":"French Guiana","GA":"Gabon","GM":"Gambia","GE":"Georgia","DE":"Germany","GH":"Ghana","GI":"Gibraltar","GR":"Greece","GL":"Greenland (Denmark)","GD":"Grenada","GP":"Guadeloupe","GU":"Guam","GT":"Guatemala","GG":"Guernsey","GN":"Guinea","GW":"Guinea-Bissau","GY":"Guyana","HT":"Haiti","HN":"Honduras","HK":"Hong Kong","HU":"Hungary","IS":"Iceland","IN":"India","ID":"Indonesia","IQ":"Iraq","IE":"Ireland - Republic Of","IL":"Israel","IT":"Italy","CI":"Ivory Coast","JM":"Jamaica","JP":"Japan","JE":"Jersey","JO":"Jordan","KZ":"Kazakhstan","KE":"Kenya","KI":"Kiribati","KR":"Korea, Republic of (South Korea)","KW":"Kuwait","KG":"Kyrgyzstan","LA":"Laos","LV":"Latvia","LB":"Lebanon","LS":"Lesotho","LR":"Liberia","LI":"Liechtenstein","LT":"Lithuania","LU":"Luxembourg","MO":"Macau","MK":"Macedonia","MG":"Madagascar","MW":"Malawi","MY":"Malaysia","MV":"Maldives","ML":"Mali","MT":"Malta","MH":"Marshall Islands","MQ":"Martinique","MR":"Mauritania","MU":"Mauritius","YT":"Mayotte","MX":"Mexico","FM":"Micronesia - Federated States of","MD":"Moldova","MC":"Monaco","MN":"Mongolia","ME":"Montenegro","MS":"Montserrat","MA":"Morocco","MZ":"Mozambique","MM":"Myanmar","NA":"Namibia","NR":"Nauru, Republic of","NP":"Nepal","NL":"Netherlands (Holland)","NV":"Nevis","NC":"New Caledonia","NZ":"New Zealand","NI":"Nicaragua","NE":"Niger","NG":"Nigeria","NU":"Niue Island","NF":"Norfolk Island","MP":"Northern Mariana Islands","NO":"Norway","OM":"Oman","PK":"Pakistan","PW":"Palau","PA":"Panama","PG":"Papua New Guinea","PY":"Paraguay","PE":"Peru","PH":"Philippines","PL":"Poland","PT":"Portugal","PR":"Puerto Rico","QA":"Qatar","RE":"Reunion","RO":"Romania","RU":"Russia","RW":"Rwanda","SM":"San Marino","ST":"Sao Tome & Principe","SA":"Saudi Arabia","SN":"Senegal","RS":"Serbia & Montenegro","SC":"Seychelles","SL":"Sierra Leone","SG":"Singapore","SK":"Slovakia","SI":"Slovenia","SB":"Solomon Islands","ZA":"South Africa","SS":"South Sudan","ES":"Spain","LK":"Sri Lanka","BL":"St. Barthelemy","EU":"St. Eustatius","KN":"St. Kitts and Nevis","LC":"St. Lucia","MF":"St. Maarten","VC":"St. Vincent","SD":"Sudan","SR":"Suriname","SZ":"Swaziland","SE":"Sweden","CH":"Switzerland","PF":"Tahiti","TW":"Taiwan","TJ":"Tajikistan","TZ":"Tanzania","TH":"Thailand","TL":"Timor-Leste","TG":"Togo","TO":"Tonga","TT":"Trinidad and Tobago","TN":"Tunisia","TR":"Turkey","TM":"Turkmenistan","TC":"Turks and Caicos Islands","TV":"Tuvalu","UG":"Uganda","UA":"Ukraine","AE":"United Arab Emirates","GB":"United Kingdom","US":"United States","UY":"Uruguay","UZ":"Uzbekistan","VU":"Vanuatu","VE":"Venezuela","VN":"Vietnam","VG":"Virgin Islands (British)","VI":"Virgin Islands (U.S.)","WS":"Western Samoa","YE":"Yemen","ZM":"Zambia","ZW":"Zimbabwe"};
// List of country codes that are not considered international, default US, that the splash won't be shown to automatically
var ig_domesticCountryCodes = ['US'];
// List of country codes you don't ship to
var ig_noShipCountryCodes = ['AF','BY','IQ','LB','MP','NF','SD']// Logo URL, transparent background
var ig_logoUrl = "https://checkout.iglobalstores.com/images/bagborroworsteel.png";

//
// Set internal JQuery Variable
// Can set to existing $ on page, or can include Jquery here, and set igJq to jquery-no-conflict
//
igJq = jQuery; //Sets internal jquery variable to the existing $ on the page.

//
// Append <div id="igFlag"></div> to specific element on page
// Please edit the area that you'd like it appended to, ie., igJq("element.class")
//
igJq(document).ready(function(){
    igJq('body').append('<div id="igSplashElement" style="display:none;">' +
      '<img src="https://d1vyngmisxigjx.cloudfront.net/images/close-square.png" alt="Close" class="closeButton close" />' +
      '<div class="igModalHeader">' +
        '<div class="logoWrapper">' +
          '<img class="modalLogo" src="'+ig_logoUrl+'" alt="" />' +
        '</div><!--/.logoWrapper -->' +
        '<div class="messageWrapper">' +
          '<p class="headerZero">Thanks for visiting us from</p>' +
          '<img class="headerFlag" src="https://d1vyngmisxigjx.cloudfront.net/images/flags/96x64/US.png" alt="Flag of United States" >' +
          '<div class="countryDropDownWrapper">' +
            '<select id="countrySelect" class=".coreUISelect" aria-label="Select Country" onchange="ig_countrySelected();">' +
              '<option value="" disabled>Select your country</option>' +
            '</select>' +
          '</div><!--/.countryDropDownWrapper -->' +
          '<p class="countryP" style="font-stretch: expanded;font-size: 12px;">Not in  <span class="js-igCountry">United States</span>? Please select your country above.</p>' +
        '</div><!--/.messageWrapper -->' +
      '</div><!--/.igModalHeader -->' +
      '<div class="igModalBody">' +
        '<ul class="featureList js-igNoShip" style="display:none;">' +
          '<li class="igFeatureHeader">We are sorry. We do not ship to your country at this time!</li>' +
        '</ul>' +
        '<ul class="featureList js-igDomestic" style="display:none;">' +
          '<li class="igFeatureHeader">Welcome to our website!</li>' +
        '</ul>' +
        '<ul class="featureList js-igInternational" style="display:none;">' +
          '<li class="igFeatureHeader">We offer the following services to shoppers in <span class="js-igCountry"></span></li>' +
          '<li><img src="https://d1vyngmisxigjx.cloudfront.net/images/payment-methods-icon.png" alt="Multiple Payment Methods"> Multiple payment methods available</li>' +
          '<li><img src="https://d1vyngmisxigjx.cloudfront.net/images/prepay-duty-tax-icon.png" alt="Prepay Duties and Taxes"> Option to prepay duties and taxes</li>' +
          '<li><img src="https://d1vyngmisxigjx.cloudfront.net/images/shipping-icon.png" alt="Shipping Options"> Multiple shipping options available</li>' +
        '</ul>' +
        '<div class="igWelcomeCTAButton">' +
          '<button class="close">Start Shopping</button>' +
        '</div><!--/.igWelcomeCTAButton -->' +
      '</div><!--/.igModalBody -->' +
      '<div class="igModalFooter"></div>' +
    '</div>');
});

//
// END Store specific settings
//

///////////////////////////////////////////////////////////////////////////////

//
// Begin jquery jsonp plugin
//
/*
 * jQuery JSONP Core Plugin 2.4.0 (2012-08-21)
 *
 * https://github.com/jaubourg/jquery-jsonp
 *
 * Copyright (c) 2012 Julian Aubourg
 *
 * This document is licensed as free software under the terms of the
 * MIT License: http://www.opensource.org/licenses/mit-license.php
 */
( function( igJq ) {

    // ###################### UTILITIES ##

    // Noop
    function noop() {
    }

    // Generic callback
    function genericCallback( data ) {
        lastValue = [ data ];
    }

    // Call if defined
    function callIfDefined( method , object , parameters ) {
        return method && method.apply( object.context || object , parameters );
    }

    // Give joining character given url
    function qMarkOrAmp( url ) {
        return /\?/ .test( url ) ? "&" : "?";
    }

    var // String constants (for better minification)
        STR_ASYNC = "async",
        STR_CHARSET = "charset",
        STR_EMPTY = "",
        STR_ERROR = "error",
        STR_INSERT_BEFORE = "insertBefore",
        STR_JQUERY_JSONP = "_jqjsp",
        STR_ON = "on",
        STR_ON_CLICK = STR_ON + "click",
        STR_ON_ERROR = STR_ON + STR_ERROR,
        STR_ON_LOAD = STR_ON + "load",
        STR_ON_READY_STATE_CHANGE = STR_ON + "readystatechange",
        STR_READY_STATE = "readyState",
        STR_REMOVE_CHILD = "removeChild",
        STR_SCRIPT_TAG = "<script>",
        STR_SUCCESS = "success",
        STR_TIMEOUT = "timeout",

    // Window
        win = window,
    // Deferred
        Deferred = igJq.Deferred,
    // Head element
        head = igJq( "head" )[ 0 ] || document.documentElement,
    // Page cache
        pageCache = {},
    // Counter
        count = 0,
    // Last returned value
        lastValue,

    // ###################### DEFAULT OPTIONS ##
        xOptionsDefaults = {
            //beforeSend: undefined,
            //cache: false,
            callback: STR_JQUERY_JSONP,
            //callbackParameter: undefined,
            //charset: undefined,
            //complete: undefined,
            //context: undefined,
            //data: "",
            //dataFilter: undefined,
            //error: undefined,
            //pageCache: false,
            //success: undefined,
            //timeout: 0,
            //traditional: false,
            url: location.href
        },

    // opera demands sniffing :/
        opera = win.opera,

    // IE < 10
        oldIE = !!igJq( "<div>" ).html( "<!--[if IE]><i><![endif]-->" ).find("i").length;

    // ###################### MAIN FUNCTION ##
    function jsonp( xOptions ) {

        // Build data with default
        xOptions = igJq.extend( {} , xOptionsDefaults , xOptions );

        // References to xOptions members (for better minification)
        var successCallback = xOptions.success,
            errorCallback = xOptions.error,
            completeCallback = xOptions.complete,
            dataFilter = xOptions.dataFilter,
            callbackParameter = xOptions.callbackParameter,
            successCallbackName = xOptions.callback,
            cacheFlag = xOptions.cache,
            pageCacheFlag = xOptions.pageCache,
            charset = xOptions.charset,
            url = xOptions.url,
            data = xOptions.data,
            timeout = xOptions.timeout,
            pageCached,

        // Abort/done flag
            done = 0,

        // Life-cycle functions
            cleanUp = noop,

        // Support vars
            supportOnload,
            supportOnreadystatechange,

        // Request execution vars
            firstChild,
            script,
            scriptAfter,
            timeoutTimer;

        // If we have Deferreds:
        // - substitute callbacks
        // - promote xOptions to a promise
        Deferred && Deferred(function( defer ) {
            defer.done( successCallback ).fail( errorCallback );
            successCallback = defer.resolve;
            errorCallback = defer.reject;
        }).promise( xOptions );

        // Create the abort method
        xOptions.abort = function() {
            !( done++ ) && cleanUp();
        };

        // Call beforeSend if provided (early abort if false returned)
        if ( callIfDefined( xOptions.beforeSend , xOptions , [ xOptions ] ) === !1 || done ) {
            return xOptions;
        }

        // Control entries
        url = url || STR_EMPTY;
        data = data ? ( (typeof data) == "string" ? data : igJq.param( data , xOptions.traditional ) ) : STR_EMPTY;

        // Build final url
        url += data ? ( qMarkOrAmp( url ) + data ) : STR_EMPTY;

        // Add callback parameter if provided as option
        callbackParameter && ( url += qMarkOrAmp( url ) + encodeURIComponent( callbackParameter ) + "=?" );

        // Add anticache parameter if needed
        !cacheFlag && !pageCacheFlag && ( url += qMarkOrAmp( url ) + "_" + ( new Date() ).getTime() + "=" );

        // Replace last ? by callback parameter
        url = url.replace( /=\?(&|$)/ , "=" + successCallbackName + "$1" );

        // Success notifier
        function notifySuccess( json ) {

            if ( !( done++ ) ) {

                cleanUp();
                // Pagecache if needed
                pageCacheFlag && ( pageCache [ url ] = { s: [ json ] } );
                // Apply the data filter if provided
                dataFilter && ( json = dataFilter.apply( xOptions , [ json ] ) );
                // Call success then complete
                callIfDefined( successCallback , xOptions , [ json , STR_SUCCESS, xOptions ] );
                callIfDefined( completeCallback , xOptions , [ xOptions , STR_SUCCESS ] );

            }
        }

        // Error notifier
        function notifyError( type ) {

            if ( !( done++ ) ) {

                // Clean up
                cleanUp();
                // If pure error (not timeout), cache if needed
                pageCacheFlag && type != STR_TIMEOUT && ( pageCache[ url ] = type );
                // Call error then complete
                callIfDefined( errorCallback , xOptions , [ xOptions , type ] );
                callIfDefined( completeCallback , xOptions , [ xOptions , type ] );

            }
        }

        // Check page cache
        if ( pageCacheFlag && ( pageCached = pageCache[ url ] ) ) {

            pageCached.s ? notifySuccess( pageCached.s[ 0 ] ) : notifyError( pageCached );

        } else {

            // Install the generic callback
            // (BEWARE: global namespace pollution ahoy)
            win[ successCallbackName ] = genericCallback;

            // Create the script tag
            script = igJq( STR_SCRIPT_TAG )[ 0 ];
            script.id = STR_JQUERY_JSONP + count++;

            // Set charset if provided
            if ( charset ) {
                script[ STR_CHARSET ] = charset;
            }

            opera && opera.version() < 11.60 ?
                // onerror is not supported: do not set as async and assume in-order execution.
                // Add a trailing script to emulate the event
                ( ( scriptAfter = igJq( STR_SCRIPT_TAG )[ 0 ] ).text = "document.getElementById('" + script.id + "')." + STR_ON_ERROR + "()" )
                :
                // onerror is supported: set the script as async to avoid requests blocking each others
                ( script[ STR_ASYNC ] = STR_ASYNC )

            ;

            // Internet Explorer: event/htmlFor trick
            if ( oldIE ) {
                script.htmlFor = script.id;
                script.event = STR_ON_CLICK;
            }

            // Attached event handlers
            script[ STR_ON_LOAD ] = script[ STR_ON_ERROR ] = script[ STR_ON_READY_STATE_CHANGE ] = function ( result ) {

                // Test readyState if it exists
                if ( !script[ STR_READY_STATE ] || !/i/.test( script[ STR_READY_STATE ] ) ) {

                    try {

                        script[ STR_ON_CLICK ] && script[ STR_ON_CLICK ]();

                    } catch( _ ) {}

                    result = lastValue;
                    lastValue = 0;
                    result ? notifySuccess( result[ 0 ] ) : notifyError( STR_ERROR );

                }
            };

            // Set source
            script.src = url;

            // Re-declare cleanUp function
            cleanUp = function( i ) {
                timeoutTimer && clearTimeout( timeoutTimer );
                script[ STR_ON_READY_STATE_CHANGE ] = script[ STR_ON_LOAD ] = script[ STR_ON_ERROR ] = null;
                head[ STR_REMOVE_CHILD ]( script );
                scriptAfter && head[ STR_REMOVE_CHILD ]( scriptAfter );
            };

            // Append main script
            head[ STR_INSERT_BEFORE ]( script , ( firstChild = head.firstChild ) );

            // Append trailing script if needed
            scriptAfter && head[ STR_INSERT_BEFORE ]( scriptAfter , firstChild );

            // If a timeout is needed, install it
            timeoutTimer = timeout > 0 && setTimeout( function() {
                notifyError( STR_TIMEOUT );
            } , timeout );

        }

        return xOptions;
    }

    // ###################### SETUP FUNCTION ##
    jsonp.setup = function( xOptions ) {
        igJq.extend( xOptionsDefaults , xOptions );
    };

    // ###################### INSTALL in jQuery ##
    igJq.jsonp = jsonp;

} )( igJq );
//
// End jquery jsonp plugin
//

//
// Begin embedded easyModal.js
//
/**
 * easyModal.js v1.1.0
 * A minimal jQuery modal that works with your CSS.
 * Author: Flavius Matis - http://flaviusmatis.github.com/
 * URL: https://github.com/flaviusmatis/easyModal.js
 */

 ! function(a, b) {
     var c = function(a, b, c) {
         var d;
         return function() {
             function g() {
                 c || a.apply(e, f), d = null
             }
             var e = this,
                 f = arguments;
             d ? clearTimeout(d) : c && a.apply(e, f), d = setTimeout(g, b || 100)
         }
     };
     jQuery.fn[b] = function(a) {
         return a ? this.bind("resize", c(a)) : this.trigger(b)
     }
 }(jQuery, "smartModalResize"),
 function(a) {
     "use strict";
     var b = {
         init: function(b) {
             var c = {
                 top: "auto",
                 left: "auto",
                 autoOpen: !1,
                 overlayOpacity: .5,
                 overlayColor: "#000",
                 overlayClose: !0,
                 overlayParent: "body",
                 closeOnEscape: !0,
                 closeButtonClass: ".close",
                 transitionIn: "",
                 transitionOut: "",
                 onOpen: !1,
                 onClose: !1,
                 zIndex: function() {
                     return function(a) {
                         return a === -(1 / 0) ? 0 : a + 1
                     }(Math.max.apply(Math, a.makeArray(a("*").map(function() {
                         return a(this).css("z-index")
                     }).filter(function() {
                         return a.isNumeric(this)
                     }).map(function() {
                         return parseInt(this, 10)
                     }))))
                 },
                 updateZIndexOnOpen: !0,
                 hasVariableWidth: !1
             };
             return b = a.extend(c, b), this.each(function() {
                 var c = b,
                     d = a('<div class="lean-overlay"></div>'),
                     e = a(this);
                 d.css({
                     display: "none",
                     position: "fixed",
                     "z-index": c.updateZIndexOnOpen ? 0 : c.zIndex(),
                     top: 0,
                     left: 0,
                     height: "100%",
                     width: "100%",
                     background: c.overlayColor,
                     opacity: c.overlayOpacity,
                     overflow: "auto"
                 }).appendTo(c.overlayParent), e.css({
                     display: "none",
                     "z-index": c.updateZIndexOnOpen ? 0 : c.zIndex() + 1,
                 }), e.bind("openModal", function() {
                     var a = c.updateZIndexOnOpen ? c.zIndex() : parseInt(d.css("z-index"), 10),
                         b = a + 1;
                     "" !== c.transitionIn && "" !== c.transitionOut && e.removeClass(c.transitionOut).addClass(c.transitionIn), e.css({
                         display: "block",
                         "z-index": b
                     }), d.css({
                         "z-index": a,
                         display: "block"
                     }), c.onOpen && "function" == typeof c.onOpen && c.onOpen(e[0])
                 }), e.bind("closeModal", function() {
                     "" !== c.transitionIn && "" !== c.transitionOut ? (e.removeClass(c.transitionIn).addClass(c.transitionOut), e.one("webkitAnimationEnd mozAnimationEnd MSAnimationEnd oanimationend animationend", function() {
                         e.css("display", "none"), d.css("display", "none")
                     })) : (e.css("display", "none"), d.css("display", "none")), c.onClose && "function" == typeof c.onClose && c.onClose(e[0])
                 }), d.click(function() {
                     c.overlayClose && e.trigger("closeModal")
                 }), a(document).keydown(function(a) {
                     c.closeOnEscape && 27 === a.keyCode && e.trigger("closeModal")
                 }), a(window).smartModalResize(function() {

                 }), e.on("click", c.closeButtonClass, function(a) {
                     e.trigger("closeModal"), a.preventDefault()
                 }), c.autoOpen && e.trigger("openModal")
             })
         }
     };
     a.fn.easyModal = function(c) {
         return b[c] ? b[c].apply(this, Array.prototype.slice.call(arguments, 1)) : "object" != typeof c && c ? void a.error("Method " + c + " does not exist on jQuery.easyModal") : b.init.apply(this, arguments)
     }
 }(jQuery);
//
// End embedded easyModal.js
//


//
// Begin embedded jquery cookie plugin, for readying and writing cookies easily
//
!function(a){if("function"==typeof define&&define.amd)define(a);else if("object"==typeof exports)module.exports=a();else{var b=window.Cookies,c=window.Cookies=a();c.noConflict=function(){return window.Cookies=b,c}}}(function(){function a(){for(var a=0,b={};a<arguments.length;a++){var c=arguments[a];for(var d in c)b[d]=c[d]}return b}function b(c){function d(b,e,f){var g;if(arguments.length>1){if(f=a({path:"/"},d.defaults,f),"number"==typeof f.expires){var h=new Date;h.setMilliseconds(h.getMilliseconds()+864e5*f.expires),f.expires=h}try{g=JSON.stringify(e),/^[\{\[]/.test(g)&&(e=g)}catch(i){}return e=c.write?c.write(e,b):encodeURIComponent(String(e)).replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g,decodeURIComponent),b=encodeURIComponent(String(b)),b=b.replace(/%(23|24|26|2B|5E|60|7C)/g,decodeURIComponent),b=b.replace(/[\(\)]/g,escape),document.cookie=[b,"=",e,f.expires&&"; expires="+f.expires.toUTCString(),f.path&&"; path="+f.path,f.domain&&"; domain="+f.domain,f.secure?"; secure":""].join("")}b||(g={});for(var j=document.cookie?document.cookie.split("; "):[],k=/(%[0-9A-Z]{2})+/g,l=0;l<j.length;l++){var m=j[l].split("="),n=m[0].replace(k,decodeURIComponent),o=m.slice(1).join("=");'"'===o.charAt(0)&&(o=o.slice(1,-1));try{if(o=c.read?c.read(o,n):c(o,n)||o.replace(k,decodeURIComponent),this.json)try{o=JSON.parse(o)}catch(i){}if(b===n){g=o;break}b||(g[n]=o)}catch(i){}}return g}return d.get=d.set=d,d.getJSON=function(){return d.apply({json:!0},[].slice.call(arguments))},d.defaults={},d.remove=function(b,c){d(b,"",a(c,{expires:-1}))},d.withConverter=b,d}return b(function(){})});
//
// End embedded jquery cookie plugin, for readying and writing cookies easily
//


//
// Begin iGlobal Stores Splash code
//

function ig_getParameterByName(name) {
  name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
  var regex = new RegExp("[\\?&]" + name + "=([^&#]*)"),
    results = regex.exec(location.search);
  return results == null ? "" : decodeURIComponent(results[1].replace(/\+/g, " "));
}

function ig_loadCountries() {
  for (var countryCode in ig_countries) {
    var selected = (countryCode === ig_country) ? 'selected="selected" ' : '';
    igJq('#countrySelect').append('<option ' + selected + 'value="' + countryCode + '">' + ig_countries[countryCode] + '</option>');
  }
}

function ig_countrySelected() {
  var countryCode = igJq("select#countrySelect").val();
  ig_setCountry(ig_validateCountryCode(countryCode));
  ig_alertIceOfCountryChange();
}

function ig_showTheSplash() {

  //init easyModal.js modal, after modal content was placed on the page (line above)

  //Fire the modal!
  igJq("#igSplashElement").trigger('openModal');

  //Set cookie for Splash shown
  if (ig_validateCountryCode(Cookies.get("igCountry"))) { // Only set the splashShown cookie, if there is a valid countryCookie
    Cookies.set('igSplash', 'igSplash', {expires: 7, path: '/', domain: ig_cookieDomain});
  }
}

function ig_setCountry(country) {
  ig_country = country;
  if (ig_country) {
    //Set country cookie
    Cookies.set('igCountry', ig_country, {expires: 365, path: '/', domain: ig_cookieDomain});
    // set the flag icon
    igJq('.headerFlag, .igWelcomeFlagHeader')
      .attr('src', 'https://d1vyngmisxigjx.cloudfront.net/images/flags/96x64/' + ((ig_country) ? ig_country.toUpperCase() : 'US') + '.png')
      .attr('alt', 'Flag of ' + ig_countries[ig_country]);
    // update splash text
    igJq('.js-igCountry').html(ig_countries[ig_country]);
    igJq('.featureList').hide();
    if (ig_isNoShipCountry()) {
      igJq('.featureList.js-igNoShip').show();
    } else if (ig_isDomesticCountry()) {
      igJq('.featureList.js-igDomestic').show();
    } else {
      igJq('.featureList.js-igInternational').show();
    }
  }
}

function ig_alertIceOfCountryChange() {
  try {
    ig_ice_countryChanged(); // let the ICE script know that the country has changed, if there is an ICE script
  } catch (err) {
    //do nothing
  }
}

function ig_validateCountryCode(countryCode) {
  //Return the country code if valid, return null if not valid
  var countryDisplayName = ig_countries[countryCode];
  if (typeof countryDisplayName !== 'undefined' && countryDisplayName) {
    return countryCode;
  } else {
    return null;
  }
}

function ig_isNoShipCountry() {
  if (ig_countries[ig_country]) {
    return ig_country && igJq.inArray(ig_country, ig_noShipCountryCodes) >= 0;
  } else {
    return false;
  }
}

function ig_isDomesticCountry() {
  if (ig_countries[ig_country]) {
    return ig_country && igJq.inArray(ig_country, ig_domesticCountryCodes) >= 0;
  } else {
    return true;
  }
}

function ig_detectCountryCallback(countryCode) {
  ig_setCountry(ig_validateCountryCode(countryCode));
  ig_finishLoading();
}

function ig_detectCountryCallbackError() { // Error handling method for when the jsonp call to get the countryCode fails, if it will get called?
  console.log("Couldn't detect country");
  //if we couldn't detect country, default to US
  ig_country = 'US';
  ig_finishLoading();
}

function ig_detectCountry() {
  igJq.jsonp({
    url: 'https://iprecon.iglobalstores.com/iGlobalIp.js?p=igcCallback',
    callback: 'igcCallback',
    success: function (json, textStatus, xOptions) {
      ig_detectCountryCallback(json);
    },
    error: function () {
      ig_detectCountryCallbackError();
    }
  });
}

function ig_pingIglobal() {
  try { // Don't break if this doesn't work
    if (!ig_countryParam) {//Only ping iGlobal for real visitors, not url parameter testing
      igJq.ajax({//we do not need to trap errors like 503's, for this call
        dataType: "jsonp",
        url: 'https://iprecon.iglobalstores.com/ping.js?s=' + ig_store.store + '&c=' + ((ig_country) ? ig_country : '')
      });
    }
  } catch (err) {
    // do nothing
  }
}

function ig_finishLoading() {
  igJq('#membershipLinksBottom').prepend('<div id="igFlag"></div>');
  igJq("#igFlag").html('<img onclick="ig_showTheSplash();" src="https://d1vyngmisxigjx.cloudfront.net/images/flags/96x64/' + ((ig_country) ? ig_country.toUpperCase() : 'US') + '.png" class="igWelcomeFlagHeader" alt="Select your country." />');
  igJq("#igSplashElement").easyModal({
    onOpen: function(m){
      // set the flag icon
      igJq('.headerFlag, .igWelcomeFlagHeader')
        .attr('src', 'https://d1vyngmisxigjx.cloudfront.net/images/flags/96x64/' + ((ig_country) ? ig_country.toUpperCase() : 'US') + '.png')
        .attr('alt', 'Flag of ' + ig_countries[ig_country]);
      // update splash text
      igJq('.js-igCountry').html(ig_countries[ig_country]);
      igJq('.featureList').hide();
      if (ig_isNoShipCountry()) {
        igJq('.featureList.js-igNoShip').show();
      } else if (ig_isDomesticCountry()) {
        igJq('.featureList.js-igDomestic').show();
      } else {
        igJq('.featureList.js-igInternational').show();
      }
    },
    zIndex: function(){ return 99999}
  });

  ig_loadCountries();

  if (!ig_isDomesticCountry() && (!ig_splashCookie || !ig_country || ig_countryParam)) {
    igJq(ig_showTheSplash); //Schedule Showing the Splash
  }
  ig_alertIceOfCountryChange();
  ig_pingIglobal();
}

var ig_country, ig_countryCookie, ig_countryParam, ig_splashCookie = null;

igJq(document).ready(function(){
  ig_country = null;
  ig_countryCookie = ig_validateCountryCode(Cookies.get("igCountry"));
  ig_countryParam = ig_validateCountryCode(ig_getParameterByName("igCountry"));
  ig_splashCookie = Cookies.get("igSplash");

  //set country to URL parameter igCountry
  if (!ig_country && ig_countryParam) {
    ig_setCountry(ig_validateCountryCode(ig_countryParam));
  }

  //else set country to countryCookie
  if (!ig_country && ig_countryCookie) {
    ig_country = ig_countryCookie;
  }

  //else set country to countryIP from iGlobal's IP Recognition Service
  if (!ig_country) {
    ig_detectCountry();
  } else { // else go with whatever country we have, even no country
    ig_finishLoading();
  }
});
