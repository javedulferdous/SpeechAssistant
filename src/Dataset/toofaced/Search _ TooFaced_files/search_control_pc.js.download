/*
    Endeca control class for the search page endeca instance.
*/

var site = site || {};
var MantleSearch = MantleSearch || {};
site.endeca = site.endeca || {};
site.endeca.instances = site.endeca.instances || {};
site.endeca.instances.search = site.endeca.instances.search || {};

(function($, jQuery) {
  site.endeca.instances.search.control = site.endeca.generic.Class.create(site.endeca.control, {
    initialize: function(args) {
      this._super(args);

      if (jQuery.address) {
        var that = this;
        jQuery.address.bind('change', that, function(event) {
          that.search({ queryString: $H(event.parameters).toQueryString() });
        });

        // IE has issues with SWFAddress' initialize because of conflicts with iframes included on the page
        // The following will search unless it has already searched.
        window.setTimeout(function() {
          if (!that.hasSearched) {
            that.search({ queryString: $H(event.parameters).getQueryString() });
          }
        }, 100);
      } else {
        this.search();
      }
    },

    // eslint-disable-next-line complexity
    searchCompleted: function() {
      if (!this._super()) {
        return;
      }

      if (this.searchTerm) {
        if (this.results.recentsearches) {
          this.results.recentsearches.searchTerm = site.endeca.helpers.obj.first(this.queries).parsedSearchTerm();
          //this.results.recentsearches.displayResults();
        }

        this.results.products.resultData = this.catalogs.product.resultList;

        var filteredProductList = MantleSearch.filterProductList(this.results.products.resultData);
        this.results.products.resultData = filteredProductList;

        this.results.products.summaryResultData = this.meta.searchInfo;
        this.results.products.displayResults();
        this.results.products.show();

        if (this.results.products.resultData.length) {
          this.hasResults = true;
        } else {
          this.results.products.hide();
        }

        this.results.pagination.resultData = this.meta.pagination;
        this.results.pagination.displayResults();
        this.results.pagination.show();
        /*
        // Not using Endeca sorting in favor of frontend MPP sort
        this.results.sorting.resultData = this.meta.sorting;
        this.results.sorting.displayResults();
        this.results.sorting.show();
*/
        this.results.content.contentzones = this.configuration.contentzones;
        this.results.content.resultData = this.meta.supplementalContent;
        this.results.content.displayResults();

        if (!jQuery.isEmptyObject(this.results.content.resultData)) {
          this.meta.processSearchInfo({ totalContentRecords: this.results.content.totalResults });
          //this.results.content.show();
          if (this.results.content.hasSoloResults) {
            this.hasResults = true;
          }
        } else {
          this.results.content.hide();
        }

        if (this.meta.dimensions.breadcrumbs) {
          this.results.breadcrumbs.resultData = this.meta.dimensions.breadcrumbs;
          this.results.breadcrumbs.displayResults();
          this.results.breadcrumbs.show();
        } else {
          this.results.breadcrumbs.hide();
        }

        if (this.meta.dimensions.refinements) {
          this.results.refinements.resultData = this.meta.dimensions.refinements;
          this.results.refinements.displayResults();
          this.results.refinements.show();
        } else {
          this.results.refinements.hide();
        }

        jQuery(document).trigger('endeca.search.results.loaded', [ this ]);
      }

      if (!this.hasResults || (this.meta.searchInfo.didYouMean.length || this.meta.searchInfo.correctedTerms.length)) {
        this.results.summary.resultData = jQuery.extend(this.meta.searchInfo, { breadcrumbs: this.meta.dimensions.breadcrumbs });
        this.results.summary.hasResults = this.hasResults;
        this.results.summary.displayResult();
        this.results.summary.show();
      } else if (this.hasResults) {
        this.results.summary.resultData = jQuery.extend(this.meta.searchInfo, { breadcrumbs: this.meta.dimensions.breadcrumbs });
        this.results.summary.hasResults = this.hasResults;
        this.results.summary.displayResult();
        this.results.summary.show();
      }

      var that = this;
      jQuery('.search-again').bind('submit', that, that.searchAgain);

      this.displayResults();
      $('.js-product').each(function() {
        $(this).trigger('product.updateRoute', [$(this).find('.js-inv-status-list').attr('data-sku-base-id')]);
      });
    },

    searchAgain: function(event) {
      var that = event.data;
      var form = event.target;
      var within = jQuery(form).find('.js-end-within')[0] || { checked: false };
      var searchTerm = jQuery(form).find('.js-end-search-term')[0] || { value: '' };
      var queryString = jQuery(form).find('.js-end-query-string')[0] || { value: '' };

      if (within.checked) {
        searchTerm.value = that.meta.searchInfo.searchTerm + '+' + searchTerm.value;

        that.queries.product.setupDimensionSearch({ searchTerm: searchTerm.value });
        that.queries.product.setupSearch({ searchTerm: searchTerm.value });

        queryString.value = encodeURIComponent(that.queries.product.toQueryString());
      }

      if (searchTerm.value === '') {
        event.preventDefault();
      }
    }
  });

  jQuery(document).ready(function() {
    $(document).on('click', '.js-end-search-again', function() {
      if (jQuery(this).siblings('.js-end-search-term').val() === jQuery(this).siblings('.js-end-search-term').attr('data-value')) {
        jQuery(this).siblings('.js-end-search-term').val('');
      }
      jQuery(this).parent('form').submit();
    });
  });
})(jQuery, jQuery);
