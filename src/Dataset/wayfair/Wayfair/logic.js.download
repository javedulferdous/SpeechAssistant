// Reference to the creative's various properties and elements.
var creative = {};

var dynamicBuilder = {};

dynamicBuilder.data = [];

/**
 * Called on the window load event.
 */
function preInit () {

  if (Enabler.isInitialized()) {
    init();
  } else {
    Enabler.addEventListener(
          studio.events.StudioEvent.INIT,
          init
      );
  }
}

/**
 * Set up references to DOM elements.
 */
function setupDom () {
  creative.dom = {};
  creative.dom.mainContainer = document.querySelector('.dynamicAdvertContainer');
  creative.dom.data = {};
  creative.dom.data.url = dynamicContent.Carnival_US_DCO_Prospecting_Sheet1[0].Data_Url;
  creative.dom.exit = {};
  creative.dom.exit.url = dynamicContent.Carnival_US_DCO_Prospecting_Sheet1[0].Exit_Url.Url;
}

/**
 * The Enabler is now initialized and any extra modules have been loaded.
 */
function init () {
  setupDom();
  buildData();
  addListeners();
}

function buildData () {
  var xobj = new XMLHttpRequest();
  var url = creative.dom.data.url;
  xobj.overrideMimeType('application/json');
  xobj.open('GET', url, true);
  xobj.onreadystatechange = function () {
    if (xobj.readyState == 4 && xobj.status == '200') {
      var data = xobj.responseText;
      var parsedData = JSON.parse(data);
      var target = '.dynamicAdvertContainer';

      buildDOM(target, parsedData);
        // Polite loading
      if (Enabler.isVisible()) {
        show();
      } else {
        Enabler.addEventListener(studio.events.StudioEvent.VISIBLE, show);
      }
    }
  };
  xobj.send(null);
}

function addListeners() {
  //creative.dom.mainContainer.addEventListener("click", exitClickHandler);
}

/**
 *  Shows the ad.
 */
function show () {
  creative.dom.mainContainer.style.display = 'block';
  startAnimation(0);
}

// ---------------------------------------------------------------------------------
// MAIN
// ---------------------------------------------------------------------------------

function exitClickHandler () {
  Enabler.exitOverride('DynamicExit', addSuffix(creative.dom.exit.url));
}

function addSuffix(url) { 
  var urlSuffix = Enabler.getParameter('exit_suffix'); 
  var _url = ''; 

  if (url) { 
    var symbol = (url.indexOf('?') > -1) ? '&': '?'; 
    if(urlSuffix) { 
      while (urlSuffix.charAt(0) == '?' || urlSuffix.charAt(0) == '&') { 
        urlSuffix = urlSuffix.substring(1); 
      } 
      if (urlSuffix.indexOf('?') > -1) { 
        urlSuffix = urlSuffix.replace(/\?/g, '&'); 
      } 
    } 
    _url = url + symbol + urlSuffix; 
  } 
  return _url; 
}

/**
 *  Main onload handler
 */
window.addEventListener('load', preInit);
