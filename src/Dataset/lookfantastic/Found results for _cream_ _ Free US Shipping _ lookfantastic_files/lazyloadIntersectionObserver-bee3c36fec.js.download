"use strict";define(["$window"],function(e){var t;return function t(){var n={},a={mobile:{rootMargin:"1440px 0px"},desktop:{rootMargin:"1820px 0px"},threshold:.5,imageSelector:'[data-image-type="lazy-image"]'},r=0,i={},o=void 0,c=function e(){n=document.querySelectorAll(a.imageSelector),r=n.length,i.setRootMargin(),"IntersectionObserver"in window?(i.checkLocalCache(),i.initialiseObserver()):i.loadImagesImmediately(n)},s=function e(){o=new IntersectionObserver(i.onIntersection,a);for(var t=0;t<n.length;t++){var r=n[t];if("lazy-image--handled"===r.getAttribute("data-image-type"))continue;o.observe(r)}},l=function e(){var t=window.innerWidth||document.documentElement.clientWidth;a.rootMargin=t>600?a.desktop.rootMargin:a.mobile.rootMargin},d=function t(){var a=Array.prototype.slice.call(n);Promise.all(a.map(function(t){var n=t.getAttribute("data-src");return e.caches.match(n).then(function(e){e&&i.preloadImage(t)})}))},g=function e(t){return new Promise(function(e,n){var a=new Image;a.src=t,a.onload=e,a.onerror=n})},m=function e(t){var n=t.dataset.src,a=t.dataset.srcset;if(!n&&!a)return;if(n)return i.fetchImage(n).then(function(){i.applyImage(t,n)});if(a)return i.fetchImage(a).then(function(){i.applyImage(t,a)})},u=function e(t){for(var n=0;n<t.length;n++){var a=t[n];i.preloadImage(a)}},f=function e(){if(!o)return;o.disconnect()},h=function e(t){if(0===r)return i.disconnect(),void 0;for(var n=0;n<t.length;n++){var a=t[n];a.intersectionRatio>0&&(r--,o.unobserve(a.target),i.preloadImage(a.target))}},p=function e(t,n){t.setAttribute("data-image-type","lazy-image--handled"),t.dataset.src?t.src=n:t.srcset=n,t.classList.add("js-lazy-image--fade-in")};return i.init=c,i.initialiseObserver=s,i.setRootMargin=l,i.checkLocalCache=d,i.fetchImage=g,i.preloadImage=m,i.loadImagesImmediately=u,i.disconnect=f,i.onIntersection=h,i.applyImage=p,i}});
//# sourceMappingURL=lazyloadIntersectionObserver-bee3c36fec.js.map
