
var GTMFlight = { Param: { Origin: "", Destination: "", DepartureDate: "", ReturnDate: "", TripType: "", FlightClass: "", Airline: "", Stops: "0", NoPassenger: "0", NoAdults: "0", NoChildren: "0", NoSeniors: "0", NoInfantsInLap: "0", NoInfantsOnSeat: "0", UserId: "", Price: "", PageType: "", FlowType: "", PortalId: "0", PixelCulture: "", IP: "", AffiliateId: "", NoYouth: "0", NoKid: "0", ClientIP: "0", TripsDetails: "", PriceExpireDuration: "", Segments: "", BaseFare: "", Tax: "", DisplayCurrency: "", DisplayRatio: "", DispalySymbol: "", PreferredAirLine: "", IsDirectFlight: "", PriceExpiryDuration: "", FpSubAffiliate: "", TotalTax: "", AirProductDetails: "", EmailPromotionValue: "", CallFlag: "", duration1: "", duration2: "", CabinClass: "", OrgCity: "", OrgState: "", OrgCountry: "", OrgRegion: "", DesCity: "", DesState: "", DesCountry: "", DesRegion: "", fpprice: "", audienceid: "", campaignid: "", mktrefid: "", adgroupid: "", listingCheapeastFare: "", CallPhone: "", Variation: "", CampaignName: "", CohortName: "" }, Page: { HomePage: "Home", ListingPage: "Listing", FlightSearch: "Search", PaymentPage: "Payment", CrossSellPage: "CrossSell", ConfirmationPage: "Confirmation" }, AffiliateId: "", populateAirSearch: function () { try { dataLayer.push({ google_tag_params: { flight_originid: this.Param.Origin, flight_destid: this.Param.Destination, flight_startdate: this.Param.DepartureDate, flight_enddate: this.Param.ReturnDate, flight_pagetype: this.Param.PageType }, origin: this.Param.Origin, dest: this.Param.Destination, depdate: this.Param.DepartureDate, retdate: this.Param.ReturnDate, adults: this.Param.NoAdults, child: this.Param.NoChildren, seniors: this.Param.NoSeniors, infantslap: this.Param.NoInfantsInLap, infantsseat: this.Param.NoInfantsOnSeat, triptype: this.Param.TripType, class: this.Param.FlightClass, pixelculture: this.Param.PixelCulture, ip: this.Param.IP, affiliateid: this.Param.AffiliateId, kid: this.Param.NoKid, youth: this.Param.NoYouth, TripsDetails: this.Param.Trips, clientIP: this.Param.ClientIP, Segments: this.Param.Segments, isDirectFlight: this.Param.IsDirectFlight, PreferedAirline: this.Param.PreferredAirLine, fpSubAffiliate: this.Param.FpSubAffiliate, totalTax: this.Param.TotalTax, airProductDetails: this.Param.AirProductDetails, OrgCity: this.Param.OrgCity, OrgState: this.Param.OrgState, OrgCountry: this.Param.OrgCountry, OrgRegion: this.Param.OrgRegion, DesCity: this.Param.DesCity, DesState: this.Param.DesState, DesCountry: this.Param.DesCountry, DesRegion: this.Param.DesRegion, fpprice: this.Param.fpprice, audienceid: this.Param.audienceid, campaignid: this.Param.campaignid, mktrefid: this.Param.mktrefid, adgroupid: this.Param.adgroupid, listingCheapeastFare: this.Param.listingCheapeastFare, CallPhone: this.Param.CallPhone, Variation: this.Param.Variation, CampaignName: this.Param.CampaignName, CohortName: this.Param.CohortName }) } catch (a) { } }, populateAirBook: function () { try { dataLayer.push({ google_tag_params: { flight_originid: this.Param.Origin, flight_destid: this.Param.Destination, flight_startdate: this.Param.DepartureDate, flight_enddate: this.Param.ReturnDate, flight_pagetype: this.Param.PageType }, origin: this.Param.Origin, dest: this.Param.Destination, depdate: this.Param.DepartureDate, retdate: this.Param.ReturnDate, adults: this.Param.NoAdults, child: this.Param.NoChildren, seniors: this.Param.NoSeniors, kid: this.Param.NoKid, youth: this.Param.NoYouth, infantslap: this.Param.NoInfantsInLap, infantsseat: this.Param.NoInfantsOnSeat, triptype: this.Param.TripType, class: this.Param.FlightClass, userId: this.Param.UserId, numpass: this.Param.NoPassenger, stops: this.Param.Stops, price: this.Param.Price, airline: this.Param.Airline, pgident: this.Param.FlowType, pixelculture: this.Param.PixelCulture, ip: this.Param.IP, affiliateid: this.Param.AffiliateId, TripsDetails: this.Param.TripsDetails, clientIP: this.Param.ClientIP, priceExpireDuration: this.Param.PriceExpireDuration, Segments: this.Param.Segments, basePrice: this.Param.BaseFare, tax: this.Param.Tax, displayCurrency: this.Param.DisplayCurrency, displayRatio: this.Param.DisplayRatio, displaySymbol: this.Param.DispalySymbol, isDirectFlight: this.Param.IsDirectFlight, PreferedAirline: this.Param.PreferredAirLine, priceExpiryDuration: this.Param.PriceExpiryDuration, fpSubAffiliate: this.Param.FpSubAffiliate, totalTax: this.Param.TotalTax, airProductDetails: this.Param.AirProductDetails, EmailPromotionValue: this.Param.EmailPromotionValue, duration1: this.Param.duration1, duration2: this.Param.duration2, CallFlag: this.Param.CallFlag, CabinClass: this.Param.CabinClass, OrgCity: this.Param.OrgCity, OrgState: this.Param.OrgState, OrgCountry: this.Param.OrgCountry, OrgRegion: this.Param.OrgRegion, DesCity: this.Param.DesCity, DesState: this.Param.DesState, DesCountry: this.Param.DesCountry, DesRegion: this.Param.DesRegion, CallPhone: this.Param.CallPhone, Variation: this.Param.Variation, CampaignName: this.Param.CampaignName, CohortName: this.Param.CohortName }) } catch (a) { } } }, GTMHotel = { Param: { Location: "", LocationFullName: "", CheckIn: "", CheckOut: "", TripType: "", NoPassenger: "0", NoAdults: "0", NoChildren: "0", NoSeniors: "0", NoInfantsInLap: "0", NoInfantsOnSeat: "0", UserId: "", Price: "", PageType: "", FlowType: "", PortalId: "0", ServerName: "", HotelRating: "0", HotelName: "", NoRooms: "0", LocationID: "", preferredHotel: "", RoomsDetails: "0", ClientIP: "", PropertyCode: "", EngineId: "", SelectedHotelRating: "0", FPHotelId: "0", HotelId: "", RoomType: "", Address: "", TARating: "", OriginalNightlyRateHotel: "", AverageNightlyRateHotel: "", Tax: "0", DisplayCurrency: "", DisplayRatio: "", DispalySymbol: "", AverageSelectedRoomRate: "", OriginalSelectedRoomRate: "", ServiceFee: "", Discount: "", FirstName: "", LastName: "", MiddleName: "", PriceExpireDuration: "", DOB: "", FpSubAffiliate: "", AffiliateId: "", Latitude: "", Longitude: "", RoomName: "", RoomCode: "", NumberOfNights: "", IsTravelProtectionAdded: "", TotalRooms: "", LocationName: "" }, Page: { HomePage: "Home", ListingPage: "Listing", HotelSearch: "Search", PaymentPage: "Payment", CrossSellPage: "CrossSell", ConfirmationPage: "Confirmation" }, AffiliateId: "", populateHotelSearch: function () { try { dataLayer = [{ dest: this.Param.Location, checkindate: this.Param.CheckIn, checkoutdate: this.Param.CheckOut, hotelrating: this.Param.HotelRating, hotelname: this.Param.HotelName, adults: this.Param.NoAdults, child: this.Param.NoChildren, numofrooms: this.Param.NoRooms, userid: this.Param.UserId, ip: this.Param.ServerName, locationID: this.Param.LocationID, roomDetails: this.Param.RoomsDetails, preferredHotel: this.Param.PreferredHotel, clientIP: this.Param.ClientIP, fpSubAffiliate: this.Param.FpSubAffiliate, affiliateid: this.Param.AffiliateId, hotelLocationFullName: this.Param.LocationFullName, locationName: this.Param.LocationName }] } catch (a) { alert(a) } }, populateHotelBook: function () { try { dataLayer = [{ dest: this.Param.Location, checkindate: this.Param.CheckIn, checkoutdate: this.Param.CheckOut, hotelrating: this.Param.HotelRating, hotelname: this.Param.HotelName, adults: this.Param.NoAdults, child: this.Param.NoChildren, numofrooms: this.Param.TotalRooms, userid: this.Param.UserId, ip: this.Param.ServerName, locationID: this.Param.LocationID, roomDetails: this.Param.RoomsDetails, preferredHotel: this.Param.PreferredHotel, clientIP: this.Param.ClientIP, propertyCode: this.Param.PropertyCode, engineId: this.Param.EngineId, selectedHotelRating: this.Param.SelectedHotelRating, FPHotelId: this.Param.FPHotelId, HotelId: this.Param.HotelId, room_Type: this.Param.RoomType, SelectedHotelAddress: this.Param.Address, TARating: this.Param.TARating, original_Nightly_RateHotel: this.Param.OriginalNightlyRateHotel, average_Nightly_RateHotel: this.Param.AverageNightlyRateHotel, tax: this.Param.Tax, displayCurrency: this.Param.DisplayCurrency, displayRatio: this.Param.DisplayRatio, displaySymbol: this.Param.DispalySymbol, averageSelectedRoomRate: this.Param.AverageSelectedRoomRate, originalSelectedRoomRate: this.Param.OriginalSelectedRoomRate, hotel_ServiceFee: this.Param.ServiceFee, discount: this.Param.Discount, firstName: this.Param.FirstName, lastName: this.Param.LastName, middleName: this.Param.MiddleName, priceExpireDuration: this.Param.PriceExpireDuration, DOB: this.Param.DOB, fpSubAffiliate: this.Param.FpSubAffiliate, longitude: this.Param.Longitude, latitude: this.Param.Latitude, roomCode: this.Param.RoomCode, roomName: this.Param.RoomName, affiliateid: this.Param.AffiliateId, NoOfNights: this.Param.NumberOfNights, isTravelProtection: this.Param.IsTravelProtectionAdded, hotelLocationFullName: this.Param.LocationFullName, locationName: this.Param.LocationName }] } catch (a) { alert(a) } }, callGTM: function (a) { callGTMContainer(a) } }, GTMCar = { Param: { PickupLocation: "", PickupDate: "", DropOffDate: "", UserId: "", Price: "0", PageType: "", FlowType: "Car", PortalId: "0", IP: "", CarType: "", CarType1: "", CarType2: "", CarType3: "", RentalCompany: "" }, Page: { HomePage: "Home", ListingPage: "Listing", CarSearch: "Search", PaymentPage: "Payment", CrossSellPage: "CrossSell", ConfirmationPage: "Confirmation" }, AffiliateId: "", populateCarSearch: function () { try { dataLayer = [{ pgtype: this.Page.CarSearch, pgident: this.Param.FlowType, cartype: this.Param.CarType, cartype1: this.Param.CarType1, cartype2: this.Param.CarType2, cartype3: this.Param.CarType3, dest: this.Param.PickupLocation, depdate: this.Param.PickupDate, retdate: this.Param.DropOffDate, rentalco: this.Param.RentalCompany, userid: this.Param.UserId }] } catch (a) { } }, populateCarBook: function () { try { dataLayer = [{ pgtype: this.Param.PageType, pgident: this.Param.FlowType, dest: this.Param.PickupLocation, depdate: this.Param.PickupDate, retdate: this.Param.DropOffDate, rentalco: this.Param.RentalCompany, cartype: this.Param.CarType, adults: "0", userid: this.Param.UserId }] } catch (a) { } }, callGTM: function (a) { callGTMContainer(a) } }, GTMPackage = { Param: { TypeOfPackage: "", Origin: "", Destination: "", DepartureDate: "", ReturnDate: "", NoPassenger: "0", NoAdults: "0", NoChildren: "0", NoSeniors: "0", NoInfantsInLap: "0", NoInfantsOnSeat: "0", NoRooms: "0", HotelRating: "0", HotelName: "", FlightClass: "", Airline: "", CarType: "", CarTransmisson: "", RentalCompany: "", TripType: "", Stops: "0", UserId: "", Price: "", PageType: "", PortalId: "0", IP: "" }, populateVacation: function () { try { dataLayer = [{ typeOfPackage: this.Param.TypeOfPackage, origin: this.Param.Origin, dest: this.Param.Destination, depDate: this.Param.DepartureDate, retDate: this.Param.ReturnDate, adults: this.Param.NoAdults, child: this.Param.NoChildren, senior: this.Param.NoSeniors, numofrooms: this.Param.NoRooms, class: this.Param.FlightClass, hotelRating: this.Param.HotelRating, hotelName: this.Param.HotelName, infantsseat: this.Param.NoInfantsOnSeat, infantslap: this.Param.NoInfantsInLap, triptype: this.Param.TripType, airline: this.Param.Airline, carType: this.Param.CarType, carTransmisson: this.Param.CarTransmisson, rentalco: this.Param.RentalCompany }] } catch (a) { } }, callGTM: function (a) { callGTMContainer(a) } }, GTMXSell = { Param: { Guid: "", PageName: "", SessionId: "", TransactionId: "", FlowType: "0", Origin: "", Destination: "", TripType: "0", DepartureDate: "", Return: "", Airline: "", Cabin: "0", FlightClass: "", HotelName: "", HotelLocation: "", HotelPropertyCode: "", HotelRating: "", VacationPackageType: "0", CheckInDate: "", CheckOutDate: "", NumOfRooms: "0", PickUpLocation: "", DropOffLocation: "", CarCompanyName: "", CarTypeCode: "", PickUpDateTime: "", DropOffDateTime: "", NumberOfAdult: "0", NumberOfSeniors: "0", NumberOfChild: "0", NumberOfInfant: "0", NumberOfPax: "0", CouponCode: "", AffiliateId: "", AffiliateTrackingBaseCode: "", IsInsuranceIncluded: !1, TotalPrice: "0", TotalProfit: "0", Courrency: "", UserId: "", PortalId: "0", IP: "", PixelCulture: "", USDTotalPrice: "0", TotalBasePrice: "0", USDTotalBasePrice: "0", TotalInsurancePrice: "0", USDTotalInsurancePrice: "0", USDTotalProfit: "0", TotalProfitAfterDiscount: "0", USDTotalProfitAfterDiscount: "0", FCLId: "", FPHotelId: "0", HotelId: "", ClientIP: "0", Segments: "", FpSubAffiliate: "", RoomsDetails: "", LocationID: "", MCOPrice: "", PaidSeatServiceFee: "", BaggageServiceFee: "", PaidSeatMarkupServiceFee: "", BaggageMarkupServiceFee: "", TotalInsuranceMarkUp: "", AffiliateClickID: "", EstimatedMCORevenueAU: "", TotalTax: "", AirProductDetails: "", TripsDetails: "" }, Page: { PaymentPage: "CrossSell", ConfirmationPage: "Confirmation" }, populateXSell: function () { try { dataLayer.push({ guid: this.Param.Guid, pagename: this.Param.PageName, sessionid: this.Param.SessionId, transactionid: this.Param.TransactionId, flowtype: this.Param.FlowType, origin: this.Param.Origin, dest: this.Param.Destination, triptype: this.Param.TripType, depdate: this.Param.DepartureDate, retdate: this.Param.ReturnDate, airline: this.Param.Airline, cabin: this.Param.Cabin, flightclass: this.Param.FlightClass, hotelname: this.Param.HotelName, location: this.Param.HotelLocation, hotelpropertycode: this.Param.HotelPropertyCode, hotelrating: this.Param.HotelRating, typeOfPackage: this.Param.VacationPackageType, checkindate: this.Param.CheckInDate, checkoutdate: this.Param.CheckOutDate, numofrooms: this.Param.NumOfRooms, pickuplocation: this.Param.PickUpLocation, dropofflocation: this.Param.DropOffLocation, carcompanyname: this.Param.CarCompanyName, cartype: this.Param.CarTypeCode, pickupdatetime: this.Param.PickUpDateTime, dropoffdatetime: this.Param.DropOffDateTime, adults: this.Param.NumberOfAdult, seniors: this.Param.NumberOfSeniors, child: this.Param.NumberOfChild, infants: this.Param.NumberOfInfant, numofpax: this.Param.NumberOfPax, couponcode: this.Param.CouponCode, affiliateid: this.Param.AffiliateId, affiliatetrackingbasecode: this.Param.AffiliateTrackingBaseCode, isinsuranceincluded: this.Param.IsInsuranceIncluded, courrency: this.Param.Courrency, userid: this.Param.UserId, portalid: this.Param.PortalId, ip: this.Param.IP, pixelculture: this.Param.PixelCulture, totalprice: this.Param.TotalPrice, usdtotalprice: this.Param.USDTotalPrice, totalbaseprice: this.Param.TotalBasePrice, usdtotalbaseprice: this.Param.USDTotalBasePrice, totalinsuranceprice: this.Param.TotalInsurancePrice, usdtotalinsuranceprice: this.Param.USDTotalInsurancePrice, totalprofit: this.Param.TotalProfit, usdtotalprofit: this.Param.USDTotalProfit, totalprofitafterdiscount: this.Param.TotalProfitAfterDiscount, usdtotalprofitafterdiscount: this.Param.USDTotalProfitAfterDiscount, currency: this.Param.Currency, fclid: this.Param.FCLId, hotelid: this.Param.HotelId, clientIP: this.Param.ClientIP, Segments: this.Param.Segments, fpSubAffiliate: this.Param.FpSubAffiliate, FPHotelId: this.Param.FPHotelId, HotelId: this.Param.HotelId, locationID: this.Param.LocationID, roomDetails: this.Param.RoomsDetails, MCOprice: this.Param.MCOPrice, paidSeatServiceFee: this.Param.PaidSeatServiceFee, baggageServiceFee: this.Param.BaggageServiceFee, paidSeatMarkupServiceFee: this.Param.PaidSeatMarkupServiceFee, baggageMarkupServiceFee: this.Param.BaggageMarkupServiceFee, totalInsuranceMarkUp: this.Param.TotalInsuranceMarkUp, affiliateClickID: this.Param.AffiliateClickID, estimatedMCORevenueAU: this.Param.EstimatedMCORevenueAU, totalTax: this.Param.TotalTax, airProductDetails: this.Param.AirProductDetails, tripsdetails: this.Param.TripsDetails }) } catch (a) { } } }, gaEventTracking = { Param: { Event: "", EventCategory: "", EventAction: "", EventLabel: "", EventValue: "", EventNonInt: "", PageViewURL: "" }, eventAction: function (a, t, e, i, r, o) { this.Param.Event = a, this.Param.EventCategory = t, this.Param.EventAction = e, this.Param.EventLabel = i, this.Param.EventValue = r, this.Param.EventNonInt = o }, pushEvent: function () { try { dataLayer.push({ event: this.Param.Event, eventCategory: this.Param.EventCategory, eventAction: this.Param.EventAction, eventLabel: this.Param.EventLabel, eventValue: this.Param.EventValue, eventNonInt: this.Param.EventNonInt }) } catch (a) { } }, gaTrackPageView: function (a, t) { this.Param.Event = a, this.Param.PageViewURL = t }, pushPageViewEvent: function () { try { dataLayer.push({ event: this.Param.Event, pageurl: this.Param.PageViewURL }) } catch (a) { } } }, GTMContainer = { pushDataLayer: function (a, t) { try { dataLayer.push({ keyparam: a, valparam: t }) } catch (a) { } }, callGTMContainer: function (a) { try { !function (a, t, e, i, r) { a[i] = a[i] || [], a[i].push({ "gtm.start": (new Date).getTime(), event: "gtm.js" }); var o = t.getElementsByTagName(e)[0], s = t.createElement(e); s.async = !0, s.src = "//www.googletagmanager.com/gtm.js?id=" + r, o.parentNode.insertBefore(s, o) }(window, document, "script", "dataLayer", a) } catch (a) { } } }, AdSalesAirlineCodes = [{ ID: 4456988, Code: "AM" }, { ID: 4457018, Code: "AB" }, { ID: 4457006, Code: "AC" }, { ID: 4451017, Code: "UX" }, { ID: 4450750, Code: "NZ" }, { ID: 4451002, Code: "NH" }, { ID: 4457012, Code: "OS" }, { ID: 4451005, Code: "O6" }, { ID: 4456718, Code: "AV" }, { ID: 4450987, Code: "SN" }, { ID: 4451011, Code: "MU" }, { ID: 4456745, Code: "CZ" }, { ID: 4451020, Code: "DE2" }, { ID: 4457027, Code: "CM" }, { ID: 4456754, Code: "EK" }, { ID: 4456721, Code: "EY" }, { ID: 4456724, Code: "PC" }, { ID: 4450981, Code: "HX" }, { ID: 4450984, Code: "9W" }, { ID: 4448827, Code: "LA" }, { ID: 4450990, Code: "LH" }, { ID: 4456742, Code: "P9" }, { ID: 4450996, Code: "QR" }, { ID: 4457030, Code: "AT" }, { ID: 4456733, Code: "SA" }, { ID: 4456730, Code: "SK" }, { ID: 4450993, Code: "LX" }, { ID: 4456757, Code: "MT" }, { ID: 4456736, Code: "TK" }, { ID: 4456739, Code: "PS" }, { ID: 4457033, Code: "WS" }, { ID: 4457024, Code: "SE" }];