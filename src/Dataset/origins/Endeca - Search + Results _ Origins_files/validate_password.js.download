var site = site || {};
(function($) {
  Drupal.behaviors.passwordTooltipIndicatorV1 = {

    attach: function(context) {
      this.context = context;
      this.initPwdValidationTooltip();
    },

    validatePwdRules: function(evt) {
      var $input = $(this);
      var value = this.value;
      var $rulesItems = evt.data.find('ul.js-password-field__rules > li');
      var rules = {
        'contains_lower_case_chars': /[a-z]/,
        'contains_uppercase_chars': /[A-Z]/,
        'contains_numbers': /[0-9]/,
        'minimum_length': /.{8,}/
      };
      evt.data.removeClass('hidden');
      // mark the input field if it has any value
      $input.toggleClass('hasValue', this.value);
      // iterate all the rules and validate them
      $.each($rulesItems, function(i, elm) {
        var valid;
        var ruleName = $(elm).data('rule');
        if (rules[ruleName]) {
          valid = new RegExp(rules[ruleName]).test(value);
          $(elm).toggleClass('pass', valid);
        }
      });
    },

    initPwdValidationTooltip: function() {
      var isMobile = $.cookie('client.isMobile') === '1' ? true : false;
      var $pwdContainer = $('.js-password-field', this.context);
      var $pwdInfo = $('.js-password-field__info', $pwdContainer);
      var $pwdField = $('input[type="text"],input[type="password"]', $pwdContainer);

      var password_tooltip = Drupal.settings.common.password_tooltip || 0;
      if (isMobile && !password_tooltip) {
        $pwdInfo.removeClass('hidden');
      }
      $pwdField.on('input focus', $pwdInfo, this.validatePwdRules);
      $pwdField.on('blur', function() {
        $pwdInfo.addClass('hidden');
        if (isMobile && !password_tooltip) {
          $pwdInfo.removeClass('hidden');
        }
      });
    }
  };
})(jQuery);
