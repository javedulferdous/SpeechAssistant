!function () { function setC1pcCookie(a) { var d = new Date(); d.setTime(d.getTime() + (2 * 365 * 24 * 60 * 60 * 1000)); var b = 'expires=' + d.toUTCString(); document.cookie = clinchCid + '_1pc=' + a + ';' + b + ';path=/' } function EverCookie() { var j = {}; var k = ['simpleCookie', 'localStore', 'sessionStorage', 'globalStorage', 'png', 'openDatabase']; if (k.includes('png')) { document.createElement("canvas").getContext && (typeof j.pngData === "undefined" || j.pngData === "") } var l = { simpleCookie: { isAvailable: function () { return true }, get: function (a, b) { try { var c = document.cookie.split(';'); for (var i = 0; i < c.length; i++) { var d = c[i].split('='); if (a === (d[0] + '').trim()) { j.simpleCookieData = unescape(d[1]) } else { j.simpleCookieData = "" } } initC1pcTentatively(b) } catch (e) { } }, set: function (a, b) { try { var d = new Date(); d.setTime(d.getTime() + (2 * 365 * 24 * 60 * 60 * 1000)); var c = 'expires=' + d.toUTCString(); document.cookie = a + '=' + b + ';' + c + ';path=/' } catch (e) { } } }, localStore: { isAvailable: function () { try { if (window.localStorage && window.localStorage.getItem && typeof window.localStorage.getItem === "function") { return true } return false } catch (e) { }; return false }, get: function (a, b) { try { j.localStorageData = window.localStorage.getItem(a); initC1pcTentatively(b) } catch (e) { } }, set: function (a, b) { try { window.localStorage.setItem(a, b) } catch (e) { } } }, sessionStorage: { isAvailable: function () { try { if (window.sessionStorage && window.sessionStorage.getItem && typeof window.sessionStorage.getItem === "function") { return true } return false } catch (e) { }; return false }, get: function (a, b) { try { j.sessionsStorageData = window.sessionStorage.getItem(a); initC1pcTentatively(b) } catch (e) { } }, set: function (a, b) { try { window.sessionStorage && window.sessionStorage.setItem(a, b) } catch (e) { } } }, globalStorage: { isAvailable: function () { try { if (window.globalStorage) { return true } return false } catch (e) { }; return false }, get: function (a, b) { var c = getHost(); try { j.globalStorageData = window.globalStorage[c][a]; initC1pcTentatively(b) } catch (e) { } }, set: function (a, b) { var c = getHost(); try { window.globalStorage[c][a] = b } catch (e) { } } }, png: { isAvailable: function () { return false; try { var a = document.createElement("canvas"); if (typeof a.getContext === "function") { return true } return false } catch (e) { }; return false }, get: function (b, c) { var d = document.createElement("canvas"), img, ctx, origvalue; d.style.visibility = "hidden"; d.style.position = "absolute"; d.width = 200; d.height = 1; if (d && d.getContext) { img = new Image(); img.style.visibility = "hidden"; img.style.position = "absolute"; j.pngData = undefined; ctx = d.getContext("2d"); origvalue = getFromStr(q.pngCookieName, document.cookie); document.cookie = q.pngCookieName + "=; expires=Mon, 20 Sep 2010 00:00:00 UTC; path=/; domain=" + q.domain; img.onload = function () { document.cookie = q.pngCookieName + "=" + origvalue + "; expires=Tue, 31 Dec 2030 00:00:00 UTC; path=/; domain=" + q.domain; j.pngData = ""; ctx.drawImage(img, 0, 0); var a = ctx.getImageData(0, 0, 200, 1), pix = a.data, i, n; for (i = 0, n = pix.length; i < n; i += 4) { if (pix[i] === 0) { break } j.pngData += String.fromCharCode(pix[i]); if (pix[i + 1] === 0) { break } j.pngData += String.fromCharCode(pix[i + 1]); if (pix[i + 2] === 0) { break } j.pngData += String.fromCharCode(pix[i + 2]) } initC1pcTentatively(c) }; img.onerror = function () { j.pngData = ""; initC1pcTentatively(c) }; img.src = q.baseurl + q.phpuri + q.pngPath + "?name=" + b + "&cookie=" + q.pngCookieName; img.crossOrigin = 'Anonymous' } }, set: function (a, b) { var c = document.createElement("canvas"), img; c.style.visibility = "hidden"; c.style.position = "absolute"; c.width = 200; c.height = 1; if (c && c.getContext) { img = new Image(); img.style.visibility = "hidden"; img.style.position = "absolute"; document.cookie = q.pngCookieName + "=" + b + "; path=/; domain=" + q.domain; img.src = q.baseurl + q.phpuri + q.pngPath + "?name=" + a + "&cookie=" + q.pngCookieName; img.crossOrigin = 'Anonymous' } } }, openDatabase: { isAvailable: function () { try { if (typeof window.openDatabase === 'function') { return true } return false } catch (e) { }; return false }, get: function (f, g) { try { var h = window.openDatabase("sqlite_db_forall", "", "dojrdi", 1024 * 1024); h.transaction(function (e) { e.executeSql("CREATE TABLE IF NOT EXISTS cache(" + "id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, " + "name TEXT NOT NULL, " + "value TEXT NOT NULL, " + "UNIQUE (name)" + ")", [], function (c, d) { c.executeSql("SELECT value FROM cache WHERE name=?", [f], function (a, b) { if (b.rows.length >= 1) { j.openDatabaseData = b.rows.item(0).value } else { j.openDatabaseData = "" } initC1pcTentatively(g) }, function (a, b) { j.openDatabaseData = ""; initC1pcTentatively(g) }) }, function (a, b) { j.openDatabaseData = ""; initC1pcTentatively(g) }) }) } catch (e) { } }, set: function (d, f) { try { var g = window.openDatabase("sqlite_db_forall", "", "dojrdi", 1024 * 1024); g.transaction(function (c) { c.executeSql("CREATE TABLE IF NOT EXISTS cache(" + "id INTEGER NOT NULL PRIMARY KEY AUTOINCREMENT, " + "name TEXT NOT NULL, " + "value TEXT NOT NULL, " + "UNIQUE (name)" + ")", [], function (a, b) { }, function (a, b) { }); c.executeSql("INSERT OR REPLACE INTO cache(name, value) " + "VALUES(?, ?)", [d, f], function (a, b) { }, function (a, b) { }) }) } catch (e) { } } } }; this.initializeCookieMethods = function () { const indecesToRemove = []; for (var m in k) { if (l.hasOwnProperty(k[m])) { if (!l[k[m]].isAvailable()) { indecesToRemove.push(m) } } } if (indecesToRemove.length) { for (var i = indecesToRemove.length - 1; i >= 0; i--) { k.splice(indecesToRemove[i], 1) } } }; this.setC1pcCookieForAll = function (a) { var b = clinchCid + '_1pc'; for (var m in k) { if (l.hasOwnProperty(k[m])) { l[k[m]].set(b, a) } } }; this.getFirstCookie = function (a, b) { var c = a + '_1pc'; for (var m in k) { if (l.hasOwnProperty(k[m])) { l[k[m]].get(c, b) } } }; function selectingCandidates() { var a = j; var b = {}, item, bestCandidateForCookieValue, bestnum = 0; for (item in a) { if (a[item] && a[item].length === 36 && a[item] !== "null" && a[item] !== "undefined") { if (b[a[item]] === undefined) { b[a[item]] = 1 } else { b[a[item]] + 1 } } } for (item in b) { if (b[item] > bestnum) { bestnum = b[item]; bestCandidateForCookieValue = item } } this.setC1pcCookieForAll(bestCandidateForCookieValue); return bestCandidateForCookieValue }; function initC1pcTentatively(a) { if (Object.keys(j).length !== k.length) { return } c1pc = selectingCandidates.call(this); a(clinchCid) }; initC1pcTentatively = initC1pcTentatively.bind(this) } var o = new EverCookie(); function getHost() { return window.location.host.replace(/:\d+/, '') }; function createElem(a, b, c) { var d; if (b !== undefined && document.getElementById(b)) { d = document.getElementById(b) } else { d = document.createElement(a) } d.style.visibility = "hidden"; d.style.position = "absolute"; d.style.width = "0px"; d.style.height = "0px"; if (a === "iframe") { d.width = 0; d.height = 0 } if (b) { d.setAttribute("id", b) } if (c) { document.body.appendChild(d) } return d }; var p = "#_ec_rgb_link:visited{display:none;color:#FF0000;width:0;height:0}", style; try { created_style = 1; style = document.createElement("style"); if (style.styleSheet) { style.styleSheet.innerHTML = p } else if (style.innerHTML) { style.innerHTML = p } else { style.appendChild(document.createTextNode(p)) } } catch (e) { created_style = 0 } var q = { history: true, java: true, tests: 10, silverlight: true, lso: true, domain: '.' + window.location.host.replace(/:\d+/, ''), baseurl: '', asseturi: '/assets', phpuri: '/php', authPath: false, swfFileName: '/withbestwishes.swf', xapFileName: '/withbestwishes.xap', jnlpFileName: '/withbestwishes.jnlp', pngCookieName: 'withbestwishes_png', pngPath: '/withbestwishes_png.php', etagCookieName: 'withbestwishes_etag', etagPath: '/withbestwishes_etag.php', cacheCookieName: 'withbestwishes_cache', cachePath: '/withbestwishes_cache.php', hsts: false, hsts_domains: [], db: true, idb: true }; function getFromStr(a, b) { if (typeof b !== "string") { return } var d = a + "=", ca = b.split(/[;&]/), i, c; for (i = 0; i < ca.length; i++) { c = ca[i]; while (c.charAt(0) === " ") { c = c.substring(1, c.length) } if (c.indexOf(d) === 0) { return c.substring(d.length, c.length) } } }; o.initializeCookieMethods(); function generateUUID() { var d = new Date().getTime(); if (typeof performance !== 'undefined' && typeof performance.now === 'function') { d += performance.now() } return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) { var r = (d + Math.random() * 16) % 16 | 0; d = Math.floor(d / 16); return (c === 'x' ? r : (r & 0x3 | 0x8)).toString(16) }) }; function getQuerystringParams() { var a = {}; var b = document.createElement('a'); b.href = window.location.href; var c = b.search.substring(1); var d = c.split('&'); for (var i = 0; i < d.length; i++) { var e = d[i].split('='); a[e[0]] = decodeURIComponent(e[1]) } return a }; function initC1pc(a, b) { var c = getQuerystringParams()['forced_c1pc'], mergingIsNeeded = false; if (c1pc && c1pc.length !== 36) { c1pc = null } if (c && c.length !== 36) { c = null } if (c1pc && c && c !== c1pc) { var d = arguments; var e = new Image; e.src = '//trk.clinch.co/merge?&cid=' + b + '&sid1=' + c1pc + '&sid2=' + c; e.onload = e.onerror = a.bind(this); mergingIsNeeded = true } if (!c1pc || c) { c1pc = c || generateUUID(); o.setC1pcCookieForAll(c1pc) } !mergingIsNeeded && a.call(this); w = true } var s, clinchCid = '', c1pc; var t = ''; var u = "ecommerce"; var v = "3.1"; var w = false; var x = false; var y = []; var z; var A = 3000; const DELAYED_PAGE_VIEW = 'DelayedPageView'; var B = { 'ViewContent': "details", 'ViewCategory': "category", 'Search': "search", 'AddToWishlist': "addToWishlist", 'InitiateCheckout': "checkout", 'AddPaymentInfo': "checkout", 'Lead': "registration", 'CompleteRegistration': "registration", 'AddToCart': "addToCart", 'Purchase': "purchase", 'PageView': "pageView", [DELAYED_PAGE_VIEW]: "pageView", }; var C = { 'search_string': "term", 'content_category': "category", 'price': 'price', 'currency': "currency", 'value': "amount", 'checkin_date': "checkin", 'checkout_date': "checkout", 'city': "city", 'departing_departure_date': "depart", 'returning_departure_date': "return", 'origin_airport': "from", 'destination_airport': "to", 'travel_start': "depart", 'travel_end': "return", 'postal_code': 'postal_code', 'make': 'make', 'model': 'model', 'year': 'year', 'state_of_vehicle': 'state_of_vehicle', 'exterior_color': 'exterior_color', 'transmission': 'transmission', 'body_syle': 'body_style', 'fuel_type': 'fuel_type', 'drivetrain': 'drivetrain', 'preferred_price_range': 'preferred_price_range', }; function clqOperation(a, b, c) { try { var d = ""; var e = ""; var f = "trk.clinch.co"; var g = ""; var h = ""; var i = []; var j; if (c && Object.prototype.toString.call(c) === '[object Object]') { j = encodeURIComponent(JSON.stringify(c)) } if (a === 'track') { d = B[b]; if (!b || !d) { pullNextJob(); return null } if ('pageView' === d && b !== DELAYED_PAGE_VIEW) { var k = getQuerystringParams()['utm_source']; if (!j && !k) { pullNextJob(); return null } } if (d === "purchase" || d === "registration") { e = d; d = "conv" } } else if (a === "trackCustom" && b) { d = "Other"; e = b } else { pullNextJob(); return null } if (c != null) { if (c.subType) { e = c.subType } if (c.content_ids != null && c.content_ids.length > 0) { i = c.content_ids } else if (c.contents != null && c.contents.length > 0) { for (var l = 0; l < c.contents.length; ++l) { if (c.contents[l] != null && c.contents[l].id != null) { i.push(c.contents[l].id) } } } if (i.length > 0) { if (Array.isArray(i)) { g = i.join(',') } else { g = i } } h += "&ids=" + g; for (var m in C) { if (c[m] != null) { h += "&" + C[m] + "=" + c[m] } } } var n = document.createElement('iframe'); n["src"] = "//" + f + "/trk?" + "cid=" + clinchCid + (t ? ("&dsid=" + t) : '') + "&type=" + d + (e ? ("&stype=" + e) : "") + (h ? h : '') + (j ? ("&params=" + j) : '') + "&product=" + u + "&c1pc=" + c1pc + "&referrer=" + encodeURIComponent(window.location.href) + "&version=" + v + "&a=" + Date.now(); n["style"] = 'display: none;'; document.getElementsByTagName('body')[0].appendChild(n); if (z) { clearTimeout(z); z = null } n.onload = n.onerror = pullNextJob } catch (err) { console.log(err); pullNextJob() } }; function pullNextJob() { setTimeout(function () { s = y.shift(); if (s) { x = true; executeJob.apply(this, s) } else { x = false } }, 50) }; function executeJob(a) { if (a === 'init' && !w) { clinchCid = arguments[1]; if (arguments[2].length > 2) { t = arguments[2] } u = arguments[3] || u; if (!clinchCid) { console.error("CLINCH: CID not valid on init"); return } else { console.log("CLINCH: clq() init ver " + v) } o.getFirstCookie(clinchCid, initC1pc.bind(this, pullNextJob)); z = setTimeout(clqOperation.bind(this, 'track', 'DelayedPageView'), A) } else if (clinchCid) { clqOperation.apply(this, arguments) } }; window.clq.callMethod = function () { if (y.length || x) { y.push(arguments) } else { x = true; executeJob.apply(this, arguments) } }; while (s = window.clq.queue.shift()) { window.clq.apply(window.clq, s) } window.addEventListener('message', function (a) { if (a && a.origin && a.origin.indexOf('clinch.co') === -1) { return } if (clinchCid && a && a.data && a.data.update_c1pc) { c1pc = a.data.update_c1pc; o.setC1pcCookieForAll(a.data.update_c1pc) } }) }();