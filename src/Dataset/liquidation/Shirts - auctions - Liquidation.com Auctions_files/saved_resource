var AdvancedSearchObj;
if (!AdvancedSearchObj) {
    AdvancedSearchObj = {};
}
//following should get triggered only if endeca is switched on
AdvancedSearchObj.buildFromAdvanceSearchJSON = function(data,callback) {
    var d_item_condition = data.item_condition_code;
    var d_locations = data.location;
    var d_auction_type = data.auction_type_code;
    var d_lot_price = data.lot_price;
    var d_retail_price = data.retail_price;
    var d_shipping_terms = data.shipping_terms_code;
    var d_shipping_size_classification = data.size_classification_code;

    //fill up category,locations,condition and other drop downs from js file
    var srch_con = $('#new_search');
    var adv_srch_con = $('#newadvsearch');

    //fill up category,locations,condition and other drop downs from js file
    $.getJSON('/json/category_with_auctions.js',function(d_category){
        var categoryHTML = AdvancedSearchObj.createOptionString(d_category);
        //srch_con.find('select[name*=category1]').append(categoryHTML);
        adv_srch_con.find('select[name*=category1]').html(categoryHTML);
        if (typeof callback == "function") {
            callback();
        }
    });
    var str = "";
    if (typeof d_locations != "undefined") {
        str = AdvancedSearchObj.createOptionString(d_locations);
        srch_con.find('select[id*=location]').append(str);
        adv_srch_con.find('select[id*=location]').append(str);
    }

    if (typeof d_item_condition != "undefined") {
        str = AdvancedSearchObj.createOptionString(d_item_condition);
        srch_con.find('select[id*=item_condition]').append(str);
        adv_srch_con.find('select[id*=condition]').html(str);
    }

    if (typeof d_auction_type != "undefined") {
        str = AdvancedSearchObj.createOptionString(d_auction_type);
        adv_srch_con.find('select[id*=type]').html(str);
    }

    if (typeof d_shipping_size_classification != "undefined") {
        str = AdvancedSearchObj.createOptionString(d_shipping_size_classification);
        adv_srch_con.find('select[id*=size]').html(str);
    }

    if (typeof d_shipping_terms != "undefined") {
        str = AdvancedSearchObj.createOptionString(d_shipping_terms);
        adv_srch_con.find('select[id*=shipping_terms]').append(str);
    }
    if (typeof d_retail_price != "undefined") {
        str = AdvancedSearchObj.createOptionString(d_retail_price);
        $('select#retailPriceRange', adv_srch_con).html(str);
    }
    if (typeof d_lot_price != "undefined") {
        str = AdvancedSearchObj.createOptionString(d_lot_price);
        $('select#lotPriceRange', adv_srch_con).html(str);
    }
};
AdvancedSearchObj.createOptionString = function(obj){
    var optionStr = '';
    for(var x in obj){
        optionStr+= '<option value="'+obj[x].id+'">'+obj[x].name+'</option>';
    }
    return optionStr;
};

AdvancedSearchObj.triggerSearch = function (context,dimension_id,query,selected){
    var form = $(context).parents('form');
    if(selected==1)
        form.find('input:hidden[name=dim_rmv]').val(dimension_id);
	else 
		form.find('input:hidden[name=dim_rmv]').attr('disabled','disabled');
    form.find('input:hidden[name=query]').val(query);
    form.trigger('submit');
};
AdvancedSearchObj.validateAdvSearch = function(form){
	if(form.searchparam_words && form.searchparam_words.value == "-- Search --")
		form.searchparam_words.value= "";
    if(form.searchparam_username_seller && form.searchparam_username_seller.value == "-- Name --")
        form.searchparam_username_seller.value = "";
    if(form.searchparam_auction_id && form.searchparam_auction_id.value == "-- Number --")
        form.searchparam_auction_id.value = "";
    if(form.searchparam_words.value!=""){
    	form.searchparam_words.value = form.searchparam_words.value;
    }
//    $("#new_advSearch").trigger('submit');
    return true;	
};
AdvancedSearchObj.validateSearch  = function(form){
    var url = form.action+"?cmd=keyword";
    var value = '';
    if(form.searchparam_words.value=="-- Search --")
        form.searchparam_words.value="";
    if(isBlank(form.searchparam_words.value) && isBlank(getSelectField(form.searchparam_dimension[1])) && isBlank(getSelectField(form.searchparam_dimension[0])) && isBlank(getSelectField(form.searchparam_category1)))
        return false;
    url += (!isBlank(form.searchparam_words.value)) ? '&searchparam_words=' + form.searchparam_words.value : '';
    url += (!isBlank(value = getSelectField(form.searchparam_dimension[1]))) ? '&searchparam_dimension=' + value : '';
    url += (!isBlank(value = getSelectField(form.searchparam_dimension[0]))) ? '&searchparam_dimension=' + value : '';
    url += (!isBlank(value = getSelectField(form.searchparam_category1))) ? '&searchparam_category1=' + value : '';
    url += (!isBlank(form.flag.value)) ?'&flag=' + form.flag.value : '';
    window.location = url;
    return false;
};
AdvancedSearchObj.handleLeftNavigationLabels = function(){
    $('ul.leftNavMenu li label a').bind('click',function(){
        $(this).parents('table').find('input:checkbox').trigger('click');
        return false;
    }).css({'text-decoration':'none'});
};
AdvancedSearchObj.setSavedSearchParams = function(srchform){
	if($('#search_name').val() != "") {
			var dataObj = {};
		var flag= false;
		if($('#srch_auction_title',srchform).is(':checked')) $('#srch_words',srchform).attr('name','auction_title');
		var x = $('#srch_words',srchform).val();
		if(document.agentform.words_mode.value=='Exact' && x != "") {
			$('#srch_words',srchform).val('\"'+x+'\"');
			$('#srch_words_mode',srchform).val('All');
		}
		$(srchform).find('.to-submit').each(function(){
			var c = $(this);
			if(c.val()){
				flag = true;
				if(dataObj[c.attr('name')]){
					dataObj[c.attr('name')] = dataObj[c.attr('name')]+ "," + c.val().toString();
				}else {
					dataObj[c.attr('name')] = c.val().toString();
				}
			}
		});
		if(flag){
			$.getJSON("/api/v1/auction_search//endeca_record_search",dataObj,function(data){
				if(data.meta.query) {
					$('#query_string',srchform).val(data.meta.query);
					$('#endeca_search_params',srchform).val(JSON.stringify(data.result.saved_search_query));
					document.agentform.submit();
				} else {
					$('#errorMsg').show().find('li:first').show().next().hide();
					window.location.href+="#errorMsg";
				}            
			});		
		}
	} else {
		$('#search_name').focus();
		$('#errorMsg').show().find('li:last').show().prev().hide();
		window.location.href+="#errorMsg";
	}
	
    return false;
};
AdvancedSearchObj.checkClosedAuctionCount = function () {
	var tC = $('div.tableContainer');
	var closedAuctions = tC.find('div.closed-auction');
	var closed_count = closedAuctions.length;
	var chkbox = $('#closedToggle input:checkbox');
	if(closedAuctions.length == tC.find('div.tableContents').length){
		closedAuctions.show();
		chkbox.attr('checked',true).attr('disabled','true').parent().css({'opacity':0.5});
	} else if(closed_count!=0){		
		var prev_selection = $.cookie('show_closed');
		if(prev_selection && prev_selection =="true"){
			chkbox.attr('checked',true);
			closedAuctions.show();
		} else {
			chkbox.attr('checked',false);
			closedAuctions.hide();
		}
	} else{
		chkbox.attr('checked',false).attr('disabled','true').parent().hide();
	}
	if(!chkbox.is(':disabled')){
		chkbox.bind('click',function(){
			if($(this).is(':checked')){
				closedAuctions.show();
				$.cookie('show_closed',true);
			} else {
				$.cookie('show_closed',false);
				closedAuctions.hide();
			}
		});
	}
};
AdvancedSearchObj.changeUrl = function(url){
    if (url) window.location.href = url;
};
AdvancedSearchObj.initialize = function (callback) {
    $.getJSON("/json/custom_advanced_dim_minified.js",function(data){
        $(document).ready(function(){

			// LC-617 Work around an apparent Chrome bug where "selected" attribute is set, but the DOM does not consider the option selected.
			$("#searchResultSortFilter, #searchResultShowFilter").each( function (i, select) {
				select = $(select);
				if (! select.val()) {
					var option = select.find("option[selected]");
					if (option.val()) select.val(option.val());
				}
			});

			$('#new_advSearch').attr('action',_LSI_NORMAL_URL+'/auction/search');
            //in case of endeca being switched on, rebuild category dropdown to single select - REVERTED
            //AdvancedSearchObj.rebuildCategoryDropDown();
            //build some dropdown drom advanced search json for endeca
            AdvancedSearchObj.buildFromAdvanceSearchJSON(data,callback);
            //change values of location dropdown options to integrate with endeca
            //AdvancedSearchObj.resetLocationOptionValues();
            //handling the left navigation links
            AdvancedSearchObj.handleLeftNavigationLabels();
			AdvancedSearchObj.checkClosedAuctionCount();            
        });
    });
};
var carouselObj = {};
var layoutData;
var collectionsData;
var bannerData;
var loadDefault=false;
var searchCollections="";

function storeCarousel(carousel){
    carouselObj[carousel.list.attr("id")] = carousel;
}

function getLayoutData() {
    var args = getLayoutData.arguments;
    if(arrayContains(args,"index")){ //load data from different inc files for home page and other static pages and auction search pages.
        $.getJSON( "/json/buyer_ux/index.js", function(data) {
            getLayoutDataHtml(args, data);
        });
    }else if(arrayContains(args,"static")){
        $.getJSON( "/json/buyer_ux/layout.js", function(data) {
            getLayoutDataHtml(args, data);
        });
    }else {
        if(searchCollections!=""  && searchCollections!=null){
            getSearchDataHtml(args, searchCollections);
        }
    }
}

function getSearchDataHtml(args, data){ //for search pages .
    layoutData = data;
    var loggedIn = username ? "loggedIn" : "notLoggedIn";
    //	var layoutEl = document.getElementsByTagName('layout'); //$('layout').each() not working in IE8, so using the traditional way of getting elements.
    //for(var i=0;i<layoutEl.length;i++){
    //	if(layoutData[layoutEl[i].id]){
    //         var layout = layoutData[layoutEl[i].id][loggedIn]; //for other pages
    //	}else{
    var layout = layoutData[loggedIn]; //for search page.
    //	}
    collectionsData = layout.collections;
    if(layout){
        if(args.length == 1){
            if(arrayContains(args,"index")){
                loadSearchCollections(layout,collectionsData);
                loadDefault = true;
            }
        }else if(args.length > 0){
            if(arrayContains(args,"collections")){
                loadSearchCollections(layout,collectionsData);
            }
            if(arrayContains(args,"default")){
                loadDefault = true;
            }
        } else {
            loadSearchCollections(layout,collectionsData);
            loadDefault = true;
        }

    }
//}
}

function getLayoutDataHtml(args, data){
    layoutData = data.layouts;
    collectionsData = data.collections;
    bannerData = data.banners;
    var loggedIn = username ? "loggedIn" : "notLoggedIn";
    var layoutEl = document.getElementsByTagName('layout'); //$('layout').each() not working in IE8, so using the traditional way of getting elements.
    var layout;
    for(var i=0;i<layoutEl.length;i++){
        if(arrayContains(args,"index")){
            layout = layoutData[loggedIn]; //for home page.
        }else{
            if(layoutData[layoutEl[i].id]){
                layout = layoutData[layoutEl[i].id][loggedIn]; //for other pages
            }
        }
        if(layout){
            if(args.length == 1){
                if(arrayContains(args,"index")){
                    loadCollections(layout,collectionsData);
                    loadBanners(layout,bannerData);
                    loadDefault = true;
                }
            }else if(args.length > 0){
                // not everything will be loaded. Only the selected ones must be loaded.
                if(arrayContains(args,"collections")){
                    loadCollections(layout,collectionsData);
                }
                if(arrayContains(args,"banners")){
                    loadBanners(layout,bannerData);
                }
                if(arrayContains(args,"default")){
                    loadDefault = true;
                }
            } else {
                loadCollections(layout,collectionsData);
                loadBanners(layout,bannerData);
                loadDefault = true;
            }

        }
    }
}

function loadSearchCollections(layout,data){
    var isApiCall = false;
    var noFeatured = false;
    var noTabbed = [];
    var now = new Date();
    loadCollectionsHtml(data);
    function loadCollectionsHtml(data){
        var featured_args={};
        collectionsData = data;
        featured_args.collection={};
        featured_args.layout = layout.collections.featured;
        if(featured_args.layout && featured_args.layout!=null && featured_args.layout!=""){
            var featuredTmpl = new EJS({
                url: "/shared/bu/js/template/Featured_category.js"
            });
            var featured_content = featuredTmpl.render(featured_args);
            $('div#top_carousel').append(featured_content);
            if(layout.collections.featured.personalizationFlag == 1){
                if(username){      //change the title to recommended auctions if its personalized collection and user is logged in.
                    $('#'+layout.collections.featured.label+'Featured').find('span').html("Recommended Auctions");
                }
                var url="";
                if(typeof layout.collections.featured =="object"){
                    url = layout.collections.featured.collection_master.uri;
                }else if(typeof layout.collections.featured =="string"){
                    url = layout.collections.featured;
                }
                Invoker.callCollectionAPI(url,'',function(data,collName){
                    isApiCall = true;
                    if(!data.error){
                        featured_args.collection = (data.result[0].auctions && data.result[0].auctions.length>0)?data:layout.collections.featured.auctions;
                        if(featured_args.collection){
                            loadCarousel("Featured",layout.collections.featured.carousel,featured_args.collection.auctions);
                        }else{
                            noFeatured = true;
                            if(loadDefault){
                                loadDefaultCarousel(noFeatured,noTabbed);
                            }
                            $('div#top_carousel').html("");
                            $('#'+featured_args.layout+"FeaturedCarousel").remove();
                            $('#'+featured_args.layout+"Featured").remove();
                        }
                    }else{
                        noFeatured = true;
                        if(loadDefault){
                            loadDefaultCarousel(noFeatured,noTabbed);
                        }
                        $('div#top_carousel').html("");
                        $('#'+featured_args.layout+"FeaturedCarousel").remove();
                        $('#'+featured_args.layout+"Featured").remove();
                    }
                });
            }else{
                if(typeof layout.collections.featured == "object"){
                    featured_args.collection = layout.collections.featured.auctions;
                    if(featured_args.collection){
                        loadCarousel("Featured",layout.collections.featured.label,featured_args.collection);
                    }else{
                        noFeatured = true;
                        $('div#top_carousel').html("");
                        $('#'+featured_args.layout.label+"FeaturedCarousel").remove();
                        $('#'+featured_args.layout.label+"Featured").remove();
                    }
                }else if(typeof layout.collections.featured == "string" ){
                    Invoker.callCollectionAPI(layout.collections.featured,'',function(data,collName){
                        isApiCall = true;
                        if(!data.error){
                            featured_args.collection = data;
                            if(featured_args.collection){
                                loadCarousel("Featured",layout.collections.featured.label,featured_args.collection.auctions);
                            }else{
                                noFeatured = true;
                                if(loadDefault){
                                    loadDefaultCarousel(noFeatured,noTabbed);
                                }
                                $('div#top_carousel').html("");
                                $('#'+featured_args.layout.label+"FeaturedCarousel").remove();
                                $('#'+featured_args.layout.label+"Featured").remove();
                            }
                        }else{
                            noFeatured = true;
                            if(loadDefault){
                                loadDefaultCarousel(noFeatured,noTabbed);
                            }
                            $('div#top_carousel').html("");
                            $('#'+featured_args.layout.label+"FeaturedCarousel").remove();
                            $('#'+featured_args.layout.label+"Featured").remove();
                        }
                    });

                }
            }
        }else{
            noFeatured = true;
            $('div#top_carousel').html("");
        }
    }
}

function loadCollections(layout,data){
    var isApiCall = false;
    var noFeatured = false;
    var noTabbed = [];
    //  var now = new Date();
    loadCollectionsHtml(data);
    function loadCollectionsHtml(data){
        var featured_args={};
        collectionsData = data;
        featured_args.collection={};
        featured_args.layout = layout.collections.featured.carousel;
        if(featured_args.layout && featured_args.layout!=null && featured_args.layout!=""){
            var featuredTmpl = new EJS({
                url: "/shared/bu/js/template/Featured.js?v=1"
            });
            var featured_content = featuredTmpl.render(featured_args);
            $('div#top_carousel').append(featured_content);
            if(collectionsData[layout.collections.featured.carousel]){
                if(layout.collections.featured.personalizationFlag == 1){
                    if(username){      //change the title to recommended auctions if its personalized collection and user is logged in.
                        $('#'+layout.collections.featured.carousel+'Featured').find('span').html("Recommended Auctions");
                    }
                    var url="/api/v1/collection_master//recommended";
                    Invoker.callCollectionAPI(url,'',function(data,collName){
                        isApiCall = true;
                        if(!data.error){
                            featured_args.collection = data.result && data.result.length ? data.result : undefined;
                            if(featured_args.collection){
                                loadCarousel("Featured",layout.collections.featured.carousel,featured_args.collection);
                            }else{
                                noFeatured = true;
                                if(loadDefault){
                                    loadDefaultCarousel(noFeatured,noTabbed);
                                }
                                $('div#top_carousel').html("");
                                $('#'+featured_args.layout+"FeaturedCarousel").remove();
                                $('#'+featured_args.layout+"Featured").remove();
                            }
                        }else{
                            noFeatured = true;
                            if(loadDefault){
                                loadDefaultCarousel(noFeatured,noTabbed);
                            }
                            $('div#top_carousel').html("");
                            $('#'+featured_args.layout+"FeaturedCarousel").remove();
                            $('#'+featured_args.layout+"Featured").remove();
                        }
                    });
                }else{
                    if(typeof collectionsData[layout.collections.featured.carousel] == "object"){
                        $('#'+layout.collections.featured.carousel+'Featured').find('span').html(collectionsData[layout.collections.featured.carousel].title);
                        featured_args.collection = collectionsData[layout.collections.featured.carousel];
                        if(featured_args.collection){
                            loadCarousel("Featured",layout.collections.featured.carousel,featured_args.collection.auctions);
                        }else{
                            noFeatured = true;
                            $('div#top_carousel').html("");
                            $('#'+featured_args.layout+"FeaturedCarousel").remove();
                            $('#'+featured_args.layout+"Featured").remove();
                        }
                    }else if(typeof collectionsData[layout.collections.featured.carousel] == "string" ){
                        Invoker.callCollectionAPI(collectionsData[layout.collections.featured.carousel],'',function(data,collName){
                            isApiCall = true;
                            if(!data.error){
                                featured_args.collection = data;
                                if(featured_args.collection){
                                    $('#'+layout.collections.featured.carousel+'Featured').find('span').html(featured_args.collection.title);
                                    loadCarousel("Featured",layout.collections.featured.carousel,featured_args.collection.auctions);
                                }else{
                                    noFeatured = true;
                                    if(loadDefault){
                                        loadDefaultCarousel(noFeatured,noTabbed);
                                    }
                                    $('div#top_carousel').html("");
                                    $('#'+featured_args.layout+"FeaturedCarousel").remove();
                                    $('#'+featured_args.layout+"Featured").remove();
                                }
                            }else{
                                noFeatured = true;
                                if(loadDefault){
                                    loadDefaultCarousel(noFeatured,noTabbed);
                                }
                                $('div#top_carousel').html("");
                                $('#'+featured_args.layout+"FeaturedCarousel").remove();
                                $('#'+featured_args.layout+"Featured").remove();
                            }
                        });

                    }
                }
            }else{
                noFeatured = true;
                $('div#top_carousel').html("");
                $('#'+featured_args.layout+"FeaturedCarousel").remove();
                $('#'+featured_args.layout+"Featured").remove();
            }
        }else{
            noFeatured = true;
            $('div#top_carousel').html("");
        }
        if(layout.collections.carousel && layout.collections.carousel.length>0){
            var carouselTmpl = new EJS({
                url: "/shared/bu/js/template/Carousel.js"
            });
            var tabCarousel_args={};
            tabCarousel_args.layout=[];
            for ( var i=0; i<layout.collections.carousel.length; i++ ) {
                if(layout.collections.carousel[i] && layout.collections.carousel[i]!=null&&layout.collections.carousel[i] !=""){
                    tabCarousel_args.layout.push(layout.collections.carousel[i]);
                }
            }
            if(tabCarousel_args.layout.length>0){
                var carousel_content = carouselTmpl.render(tabCarousel_args);
                $('div#tabbedCarousel').html(carousel_content);
                adjusttabs();
            }
            $('div.tabNavMiddle').bind("click",function(e){
                processClick(e);
            });
            var tabbedAuctionData = {};
            var loadedTabs = [];
            for ( var i=0; i<tabCarousel_args.layout.length; i++ ) {
                // Case: When there is only 1 carousel, construct single header tab
                if(tabCarousel_args.layout.length == 1){
                    var hCarousel = $('#'+tabCarousel_args.layout[0]+"Tabbed");
                    hCarousel.removeClass("tab selected").addClass("tabbedHeader");
                    hCarousel.find(".tabNavLeft").remove();
                    hCarousel.find(".tabNavRight").remove();
                    hCarousel.find(".tabNavMiddle").removeClass("tabNavMiddle").removeClass("middle").addClass("tabBG rightContainerWidth").attr("style", "").html($("<span></span>").html(collectionsData[tabCarousel_args.layout[i]].title));
                }
                // Case: typeof Object
                if(collectionsData[tabCarousel_args.layout[i]] && typeof collectionsData[tabCarousel_args.layout[i]] == "object"){
                    if(collectionsData[tabCarousel_args.layout[i]].auctions && collectionsData[tabCarousel_args.layout[i]].auctions.length > 0){
                        $('#'+tabCarousel_args.layout[i]+'TabbedBody').css({
                            'display':'block'
                        });
                        $('#'+tabCarousel_args.layout[i]+'Tabbed').find('.tabNavMiddle').html(collectionsData[tabCarousel_args.layout[i]].title);
                        adjusttabs();
                        if($('div#tabbedCarousel div.carouselBG').children().index($('#'+tabCarousel_args.layout[i]+'TabbedBody')) == 0){
                           loadCarousel("Tabbed",tabCarousel_args.layout[i],collectionsData[tabCarousel_args.layout[i]].auctions);
                           loadedTabs.push(tabCarousel_args.layout[i]);
                        }
                        tabbedAuctionData[tabCarousel_args.layout[i]] = collectionsData[tabCarousel_args.layout[i]].auctions;
                        /*loadCarousel("Tabbed",tabCarousel_args.layout[i],collectionsData[tabCarousel_args.layout[i]].auctions);*/
                        $('#'+tabCarousel_args.layout[i]+'TabbedBody').css({
                            'display':'none'
                        });
                        if(!arrayContains(loadedTabs,tabCarousel_args.layout[i])){
                            checkCloseTime(tabCarousel_args.layout[i],tabbedAuctionData[tabCarousel_args.layout[i]]);
                        }
                        $('div.tabNavMiddle').bind("click",function(e){
                            processClick(e);
                            var id = $(e.target).parent().attr('id');
                            id = id.substring(0,id.length-6);
                            if(!arrayContains(loadedTabs,id))loadCarousel("Tabbed",id,tabbedAuctionData[id],"",true);
                            loadedTabs.push(id);
                        });
                    }else{
                        noTabbed.push("true");
                        $('#'+tabCarousel_args.layout[i]+"TabbedCarousel").remove();
                        $('#'+tabCarousel_args.layout[i]+"Tabbed").remove();
                        $('#'+tabCarousel_args.layout[i]+"TabbedBody").remove();
                        removeCarouselBg();
                        adjusttabs();
                    }
                } else if(collectionsData[tabCarousel_args.layout[i]] && typeof collectionsData[tabCarousel_args.layout[i]] == "string"){ // Case: typeof String. Make API call
                    Invoker.callCollectionAPI(collectionsData[tabCarousel_args.layout[i]],
                        tabCarousel_args.layout[i],
                        function(data,collName){
                            isApiCall = true;
                            if(!data.error){
                                if(data.result[0].auctions && data.result[0].auctions.length > 0){
                                    $('#'+collName+'TabbedBody').css({
                                        'display':'block'
                                    });
                                    $('#'+collName+'Tabbed').find('.tabNavMiddle').html(data.result[0].title);
                                    adjusttabs();
                                    if($('div#tabbedCarousel div.carouselBG').children().index($('#'+collName+'TabbedBody')) == 0){
                                        loadCarousel("Tabbed",collName,data.result[0].auctions);
                                        loadedTabs.push(collName);
                                    }
                                    tabbedAuctionData[collName] = data.result[0].auctions;
                                    //$('#'+collName+'TabbedBody').css({'display':'none'});
                                    /*loadCarousel("Tabbed",collName,data.result[0].auctions);*/
                                    firstBodySelect();
                                    firstTabSelect();
                                    if(!arrayContains(loadedTabs,collName)){
                                        checkCloseTime(collName, data.result[0].auctions);
                                    }
                                    
                                    $('div.tabNavMiddle').bind("click",function(e){
                                        processClick(e);
                                        var id = $(e.target).parent().attr('id');
                                        id = id.substring(0,id.length-6);
                                        if(!arrayContains(loadedTabs,id))loadCarousel("Tabbed",id,tabbedAuctionData[id],"",true);
                                        loadedTabs.push(id);
                                    });
                                }else{
                                    noTabbed.push("true");
                                    if(loadDefault){
                                        loadDefaultCarousel(noFeatured,noTabbed);
                                    }
                                    $('#'+collName+"TabbedCarousel").remove();
                                    $('#'+collName+"Tabbed").remove();
                                    $('#'+collName+"TabbedBody").remove();
                                    removeCarouselBg();
                                    adjusttabs();
                                    firstBodySelect();
                                    firstTabSelect();

                                }
                            }else{
                                noTabbed.push("true");
                                if(loadDefault){
                                    loadDefaultCarousel(noFeatured,noTabbed);
                                }
                                $('#'+collName+"TabbedCarousel").remove();
                                $('#'+collName+"Tabbed").remove();
                                $('#'+collName+"TabbedBody").remove();
                                removeCarouselBg();
                                adjusttabs();
                                firstBodySelect();
                                firstTabSelect();
                            }

                        });
                }else{
                    noTabbed.push("true");
                    $('#'+tabCarousel_args.layout[i]+"TabbedCarousel").remove();
                    $('#'+tabCarousel_args.layout[i]+"Tabbed").remove();
                    $('#'+tabCarousel_args.layout[i]+"TabbedBody").remove();
                    removeCarouselBg();
                    adjusttabs();
                }

            }
            firstBodySelect();
            firstTabSelect();
        } else{
            noTabbed = true;
        }
        if(loadDefault){
            loadDefaultCarousel(noFeatured,noTabbed);
        }
    }
}

function firstTabSelect(){
    $('div.tabContainer div.tab:eq(0)').addClass("selected");
}

function firstBodySelect(){
    $('div#tabbedCarousel div.carouselBG').children().each(function(){
        if($('div#tabbedCarousel div.carouselBG').children().index($(this)) == 0){
            $(this).css({
                "display":"block"
            });
        }else{
            $(this).css({
                "display":"none"
            });
        }
    });
}


function loadBanners(layout,data){
    // if(typeof d_banner != "undefined"){
    //	bannerData = d_banner;
    //	loadBannerHtml(layout, bannerData)
    //} else {
    //$.getJSON( "/json/buyer_ux/banner.js", function(data) {
    //	bannerData = data;
    loadBannerHtml(layout, data);
//});
//}
}

function loadBannerHtml(layout, bannerData){
    if(layout.banners["Top Body Width"] && bannerData[layout.banners["Top Body Width"]]){
        $('div.TopBodyWidth').empty().append(bannerData[layout.banners["Top Body Width"]].content);
        $('div.TopBodyWidth').css({
            'display':'block'
        });
    }
    if(layout.banners["Top Full Width"] && bannerData[layout.banners["Top Full Width"]]){
        $('div.TopFullWidth').empty().append(bannerData[layout.banners["Top Full Width"]].content);
        $('div.TopFullWidth').css({
            'display':'block'
        });
    }
    if(layout.banners["Bottom Body Width"] && bannerData[layout.banners["Bottom Body Width"]]){
        $('div.BottomBodyWidth').empty().append(bannerData[layout.banners["Bottom Body Width"]].content);
        $('div.BottomBodyWidth').css({
            'display':'block'
        });
    }
    if(layout.banners["Bottom Full Width"] && bannerData[layout.banners["Bottom Full Width"]]){
        $('div.BottomFullWidth').empty().append(bannerData[layout.banners["Bottom Full Width"]].content);
        $('div.BottomFullWidth').css({
            'display':'block'
        });
    }
    if(layout.banners["Side"] && bannerData[layout.banners["Side"]]){
        $('div.Side').empty().append(bannerData[layout.banners["Side"]].content);
        $('div.Side').css({
            'display':'block'
        });
    }
}

function loadDefaultCarousel(noFeatured,noTabbed){
    var noTabbedCarousel = false;
    if(typeof noTabbed == "object"){
        for(var i=0;i<noTabbed.length;i++){
            if(noTabbed[i] == "true"){
                noTabbedCarousel = true;
            }else{
                noTabbedCarousel = false;
            }
        }
    }else{
        noTabbedCarousel = noTabbed;
    }
    if(noFeatured && noTabbedCarousel){
        var default1_args  ={};
        var default2_args  ={};
        if(collectionsData['default1']){
            default1_args.layout = {
                "label":"default1",
                "title":""
            };
            var default1Tmpl = new EJS({
                url: "/shared/bu/js/template/Featured.js?v=1"
            });
            var default1_content = default1Tmpl.render(default1_args);
            setTimeout(function(){
                $('div#top_carousel').append(default1_content);
                if(typeof collectionsData['default1'] == "object") {
                    $('#default1Featured').find('span').html(collectionsData['default1'].title);
                    loadCarousel("Featured","default1",collectionsData['default1'].auctions);
                }else if(typeof collectionsData['default1'] == "string") {
                    var url =  collectionsData['default1'];
                    Invoker.callCollectionAPI(url,'',function(data,collName){
                        if(!data.error){
                            $('#default1Featured').find('span').html(data.result[0].title);
                            loadCarousel("Featured","default1",data.result[0].auctions);
                        }else{
                            $('div#top_carousel').html("");
                        }
                    });
                }
            },500);
        }
        if(collectionsData['default2']){
            default2_args.layout = {
                "label":"default2",
                "title":""
            };
            var default2Tmpl = new EJS({
                url: "/shared/bu/js/template/Featured.js?v=1"
            });
            var default2_content = default2Tmpl.render(default2_args);
            setTimeout(function(){
                $('div#tabbedCarousel').append(default2_content);
                if(typeof collectionsData['default2'] == "object") {
                    $('#default2Featured').find('span').html(collectionsData['default2'].title);
                    loadCarousel("Featured","default2",collectionsData['default2'].auctions);
                }else if(typeof collectionsData['default2'] == "string") {
                    var url =  collectionsData['default2'];
                    Invoker.callCollectionAPI(url,'',function(data,collName){
                        if(!data.error){
                            $('#default2Featured').find('span').html(data.result[0].title);
                            loadCarousel("Featured","default2",data.result[0].auctions);
                        }else{
                            $('div#top_carousel').html("");
                        }
                    });

                }
            },500);
        }
    }
}

function checkCloseTime(currentLayout,carousel_list){
   var now = currentESTTime();
   var carousel_open_list=[];
   if(carousel_list.length>0){
        for(var i=0;i<carousel_list.length;i++){
            var closeTime = carousel_list[i].close_time;
            var closeTimeDate = currentESTTime(closeTime*1000);
            if(closeTimeDate>now) {
                try{
                    carousel_open_list.push(carousel_list[i]);
                }catch(e){
                    carousel_open_list.push(carousel_list[i]);
                }
            }
        }
    }else{
        carousel_open_list = carousel_list;
    }
    if(carousel_open_list.length == 0){
        $('#'+currentLayout+"TabbedCarousel").remove();
        $('#'+currentLayout+"Tabbed").remove();
        $('#'+currentLayout+"TabbedBody").remove();
        removeCarouselBg();
        adjusttabs();
    }

}

function removeCarouselBg(){
     if ( $('div.tabContainer').children().size() == 0 ){
        $('div.tabContainer').remove();
     }
     if ( $('div#tabbedCarousel').find('div.carouselBG').children().size() == 0 ){
        $('div#tabbedCarousel').find('div.carouselBG').remove();
        $('div#tabbedCarousel').find('div.carouselBottomBG').remove();
    }else  if ( $('div#top_carousel').find('div.carouselBG').children().size() == 0 ){
        $('div#top_carousel').find('div.carouselBG').remove();
        $('div#top_carousel').find('div.carouselBottomBG').remove();
    }
}

function loadCarousel(carousel_type,container_id,carousel_list){
    var now = currentESTTime(); //get EST time
    var carousel_new_list=[];
    //No randomization from closing soon tab and display by closing soonest order
    if(container_id=="closingsoon"){
        // to sort based on close time
        var carousel_sorted_list = [];
        for(functionName in carousel_list) {
            carousel_sorted_list.push(carousel_list[functionName]);
        }
        carousel_sorted_list.sort(function (a, b) {
            time_a = new Date(a.close_time*1000).getTime();time_b = new Date(b.close_time*1000).getTime();return (time_a - time_b);
        });
        //carousel_sorted_list.sort(function (a, b) {return a.close_time > b.close_time });
        carousel_list = carousel_sorted_list;
    }

    //dont display if the closetime is less than now.
    if(carousel_list.length>0){
        for(var i=0;i<carousel_list.length;i++){
            var closeTime = carousel_list[i].close_time;
            var closeTimeDate = currentESTTime(closeTime*1000);
            if(closeTimeDate>now) {
                try{
                    carousel_list[i].close_time = formatTo12(closeTime);
                    carousel_new_list.push(carousel_list[i]);
                }catch(e){
                    carousel_new_list.push(carousel_list[i]);
                }
            }
        }
    }else{
        carousel_new_list = carousel_list;
    }
    if(carousel_new_list.length>0){

        //No randomization from closing soon tab and display by closing soonest order
        if(container_id!="closingsoon")
        {
            shuffle(carousel_new_list);
        }  //shuffle the carousel array everytime to display different auctions.

        var containerId = container_id+""+carousel_type+"Carousel";
        var carousel_instance = carouselObj[containerId];
        if(carousel_instance!=null){
            carousel_instance.reset();
        }
        $("#"+containerId).find("div.carouselLoading").remove();
        // if list has length more than 5 (ie 1 page here) then do a circular carousel or else no wrap
        if(carousel_new_list.length > 5){
            $("#"+containerId).jcarousel({
                //size:carousel_new_list.length,
                visible:5,
                scroll:5,
                wrap:'circular',
                initCallback: storeCarousel,
                itemVisibleInCallback: {
                    onBeforeAnimation: carousel_itemVisibleInCallback
                },
                itemVisibleOutCallback: {
                    onAfterAnimation: carousel_itemVisibleOutCallback
                }
            });
        }else {
            $("#"+containerId).jcarousel({
                size:carousel_new_list.length,
                visible:5,
                scroll:5,
                initCallback: storeCarousel,
                itemLoadCallback: {
                    onBeforeAnimation: function(carousel,state){
                        for (var i = carousel.first; i <= carousel.last; i++) {
                            // Check if the item already exists
                            if (!carousel.has(i)) {
                                // Add the item.
                                // added by chandra to implement heat map tracking. pass the position id
                                //carousel.add(i, getItemHTML(carousel_new_list[i-1],container_id, i-1));
								
								var item = carousel_new_list[i-1];
								 (function(item, auctionid, container_id, i){
								 $.get('/api/v1/auction_view/'+auctionid+'/lookup?_select=currency_code', function(data){
										var jsondata = JSON.parse(data);
										try{
											if(jsondata && jsondata.result && jsondata.result[0].currency_code){
												var currencyCode = jsondata.result[0].currency_code;
												carousel.add(i,getItemHTML(item,container_id, i-1, currencyCode));
											} else {
												carousel.add(i,getItemHTML(item,container_id, i-1));
											}	
										} catch(e){
											carousel.add(i,getItemHTML(item,container_id, i-1));
										}
									});	
									})(item, item.auction_id, container_id, i);
								
                            }
                        }
                    }
                }
            });
        }

    }else{
        $('#'+container_id+carousel_type+"Carousel").remove();
        $('#'+container_id+carousel_type).remove();
        $('#'+container_id+carousel_type+"Body").remove();
        if(carousel_type == "Featured"){
            $('div#top_carousel').find('div.carouselBG').remove();
            $('div#top_carousel').find('div.carouselBottomBG').remove();
        }
        firstBodySelect();
        firstTabSelect();
        adjusttabs();
        removeCarouselBg();
    }

    function carousel_itemVisibleInCallback(carousel, item, i, state, evt)
    {
        // The index() method calculates the index from a
        // given index who is out of the actual item range.
        var idx = carousel.index(i, carousel_new_list.length);
        // filter duplicate entries.
        if (!carousel.has(i)) {
            // pass the position id for heat map tracking.
			var item = carousel_new_list[idx - 1];
			carousel.add(i,getItemHTML(item,container_id, i-1, item.currency_code));
        }
    };

    function carousel_itemVisibleOutCallback(carousel, item, i, state, evt)
    {
        carousel.remove(i);
    };
}

var categoryData ;
var isCategory = false;
var isAdvanced = false;
var isAdvancedOpen = false;
$(document).ready(function() {
    var mainCategoryHTML = "";
    var leftNavMenuHTML = "";
    $.getJSON( "/json/category_with_auctions.js", function(data) {
        categoryData = data;
        for(var i=0;i<categoryData.length;i++){
            mainCategoryHTML +='<li class="item" id="'+categoryData[i].id+'"><a href="' + categoryData[i].url + '">'+categoryData[i].name+'</a></li>';
            leftNavMenuHTML +='<li class="item" id="'+categoryData[i].id+'"><a href="' + categoryData[i].url + '">'+categoryData[i].name+'</a></li>';
            if ( categoryData[i].subcategory.length > 0 ){
                leftNavMenuHTML += "<ul>";
            }
            for(var j=0; j<categoryData[i].subcategory.length; j++){
                leftNavMenuHTML += "<li class='subItem'><a href='" + categoryData[i].subcategory[j].url + "'>" + categoryData[i].subcategory[j].name + "</a></li>";
            }
            if ( categoryData[i].subcategory.length > 0 ){
                leftNavMenuHTML += "</ul>";
            }
        }
        if(typeof(str)!="undefined" && str == true){
            mainCategoryHTML +='<li class="item" id="all_categories"><a href="/allcategories.html">All Categories</a></li>';
        }else{
            mainCategoryHTML +='<li class="item" id="all_categories"><a href="/bu/allcategories.html">All Categories</a></li>';
        }
        $('div.categoryList').find('ul.list').html(mainCategoryHTML);

        //Display categories and subcategories for LCOM Direct homepage only!
        if ( document.location.href.indexOf('direct') > 0 &&
             document.location.href.match(/\.liquidation\.com(\/|\/index.html)?$/) != null) {
                $('.leftNavMenu').first().html(leftNavMenuHTML);
        }
        CategoryFunctions();
        allCatsFillFunction(data);
    });

    AdvancedSearchFunctions();
    Invoker.userIdentify(function(data){
        Invoker.updateSignIn(data);
    });
});

function CategoryFunctions() {

    function appendItems(type) {
        var subItems = [];
        for(var j=0;j<categoryData.length;j++){
            subItems[categoryData[j].id] = [];
            for(var k=0;k<categoryData[j].subcategory.length;k++){
                var subitemObj =  {
                    value:categoryData[j].subcategory[k].name,
                    link:categoryData[j].subcategory[k].url
                };
                subItems[categoryData[j].id].push(subitemObj);
            }
        }
        var content = "";
        for(var i = 0 ; i < subItems[type].length;i++) {
            content += "<div class='subItem'><a href='"+ subItems[type][i].link +"'>"+ subItems[type][i].value+"</a></div>";
        }
        $('div.subCategory div.subContainer').append(content);
    }

    function appendSubCategory() {
        var currentIndex = mainCat.length - mainCat.index(currentNode);
        currentNode.addClass("selected");
        if ($('div.subCategory').length != 0) {
            closeSubCategory();
        }
        $("div.subCatMenu").remove();
        $("div.categoryList").append("<div class='subCatMenu'><div class='whiteBlock'> </div><div class='subCategory'><div class='top'></div><div class='subContainer'></div><div class='subCategoryBottom'></div></div></div>");

        appendItems(currentNode.attr("id"));
        if($('div.subCategory div.subContainer').html() == ""){
            $("div.subCatMenu").remove();
        }
        var isIE6 = (typeof document.body.style.maxHeight == "undefined");
        //console.log($("#recommendedpage").length);
        if($("#recommendedpage").length > 0 && currentIndex > 9){
            currentIndex = currentIndex - 9;    //Adjusting Index value as it determines Position of subcategory. Refer: LC-8.
        }
        if(!isIE6) {
            $('div.subCatMenu').css('margin-top',-(currentIndex*25+5));
            $('div.subCategory').css({
                'height':$('div.subContainer').attr('offsetHeight')+10
            });
        }
        else {
            $('div.subCategory').css({
                'height':$('div.subContainer').attr('offsetHeight')+20
            });
            $('div.subCatMenu').css('margin-top',-(currentIndex*25 + 13));
        }
        $('div.subContainer').hover(function() {
            if (intervalId != null) {
                clearTimeout(intervalId);
                intervalId = null;
            }
        },closeSubCategory);
    }

    function closeSubCategory() {
        $("div.container ul.list li.selected").removeClass("selected");
        $('div.subCategory').remove();
        $('div.whiteBlock').remove();
    }

    $(document).bind("mouseover",function(e){ //hide the category list when mouseovered somewhere in the document except categoryListLink and categoryList container.
        var categoryContainer = $(e.target).parents('div.categoryList');
        var categoryListLink = $(e.target).parents('div.categoryListLink');
        if($(e.target).hasClass("categoryList") || $(e.target).hasClass("categoryListLink")){
            isCategory = true;
        }else if(categoryContainer.length == 0 && categoryListLink.length == 0){
            isCategory = false;
        }
    });

    setInterval(function(){

        if(isCategory){
            setTimeout(function(){
                var currentElement = $('div.categoryListLink');
                currentElement.addClass("categorySelected");
                $("div.categoryList").show();
            },300);
        }else if(isAdvancedOpen){
            setTimeout(function(){
                var currentElement = $("div.advancedSearchLink");
                if(isAdvancedOpen) {
                    showSearch(currentElement);
                }
            },300);
        }else{
            $("div.categoryListLink").removeClass("categorySelected");
            $("div.categoryList").hide();
            closeSubCategory();
            var currentElement = $("div.advancedSearchLink");
            hideSearch(currentElement);
        }
    },400);

    var currentNode =  null;
    var intervalId = null;
    var mainCat = $("div.container ul.list li.item");
    mainCat.hover(function() {
        if(intervalId == null) {
            currentNode = $(this);
            if(currentNode.attr("id")!="all_categories")
            {
                appendSubCategory();
            }
            else
            {
                currentNode.addClass("selected");
            }
            currentNode = null;
        } else {
            currentNode = $(this);
        }
    },function(){
        if(intervalId == null) {
            intervalId = setTimeout(function() {
                closeSubCategory();
                intervalId = null;
                if(currentNode != null) {
                    if(currentNode.attr("id")!="all_categories")
                    {
                        appendSubCategory();
                    }
                    else
                    {
                        currentNode.addClass("selected");
                    }
                    currentNode = null;
                }
            },50);
        }
    });
}

function showSearch(currentElement) {
    currentElement.addClass("shown");
    $("div.advancedSearch").show();
    $('div.advancedSearch .customselect-label').each(function() {
        $(this).autoEllipsis('',{
            'width':parseInt($(this).parent().css('width').split('px')[0]) -20
        });
    });
}

function hideSearch(currentElement) {
    isAdvanced = false;
    isAdvancedOpen = false;
    currentElement.removeClass("shown");
    $("div.advancedSearch").hide();
    $(document).unbind('keydown');
}

function AdvancedSearchFunctions() {
    $(document).bind("mouseover",function(e){ //hide the advancedSearch container when mouseovered somewhere in the document except advancedSearchLink and advancedSearch container.
        var advancedSearchContainer = $(e.target).parents('div.advancedSearch');
        var advancedSearchLink = $(e.target).parents('div.advancedSearchLink');
        var currentElement = $("div.advancedSearchLink");
        if($(e.target).hasClass("advancedSearch") || $(e.target).hasClass("advancedSearchLink")){
            isAdvancedOpen = true;
            $("div.advancedSearch form").find("div.customselect-label, input").bind("click",function(){
                // set advance true only if the user clicks or textfiels
                isAdvanced = true;
            });
            //showSearch(currentElement);
            $("div.saveSearchContainer").hide();
        } else if(advancedSearchContainer.length == 0 && advancedSearchLink.length == 0 && isAdvanced == false ){
            isAdvancedOpen = false;
            isAdvanced = false;
            hideSearch(currentElement);
        }

    });

    $('div.advancedSearch div.container div.closeContainer > *').bind('click',function() {
        isAdvanced = false;
        isAdvancedOpen = false;
        $('.advancedSearch').find('.customselect-container').hide();
        hideSearch($("div.advancedSearchLink"));
    });
}

function allCatsFillFunction(allCategoryData)
{
    var allCategoriesHTML;
    for (var i=0; i<allCategoryData.length; i++) {
        allCategoriesHTML='<div class="col-xs-12 col-sm-6 col-md-4 col-lg-3"><ul><label><a href="'+allCategoryData[i].url+'">'+allCategoryData[i].name+'</a></label>';
        for(var j=0;j<allCategoryData[i].subcategory.length;j++){
            allCategoriesHTML += '<li><a href="'+allCategoryData[i].subcategory[j].url+'">' + allCategoryData[i].subcategory[j].name+'</a></li>';
        }
        allCategoriesHTML+='</ul></div>';
        $('div#categorylist').append(allCategoriesHTML);
    }
    var maxheight = 0;
    $('div#categorylist ul').each(function () {
        maxheight = ($(this).height() > maxheight ? $(this).height() : maxheight);
    });
    $('div#categorylist ul').height(maxheight);
}

var global_user_id;
var images_path;
var currencySign = {
	'USD' : '$',
	'CAD' : 'C$'
};
(function(a){(jQuery.browser=jQuery.browser||{}).mobile=/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4))})(navigator.userAgent||navigator.vendor||window.opera);
function checkMobile(){
	return jQuery.browser.mobile;
}
function isSTR(){
	return (window.location.href.indexOf('direct') != -1);	
}
if(!isSTR() && typeof(AdvancedSearchObj) != "undefined"){
	AdvancedSearchObj.initialize(customSelectFunction);		
}

function formatToDay(openTime){
    var open_time = new Date(openTime*1000);
    var day = open_time.getDate();
    var month = open_time.getMonth()+1;
    month = month>9?month:"0"+month;
    var year = open_time.getFullYear();
    return month+"/"+day+"/"+year;
}

function getCookie(name) {
    //alert(1);
    var dc = document.cookie;
    //alert(dc);
    var prefix = name + "=";
    var begin = dc.indexOf("; " + prefix);
    if (begin == -1) {
        begin = dc.indexOf(prefix);
        if (begin != 0)
        {
            return null;
        }
    }
    else
    {
        begin += 2;
    }
    var end = document.cookie.indexOf(";", begin);
    if (end == -1)
    {
        end = dc.length;
    }

    return unescape(dc.substring(begin + prefix.length, end));
}

//used for carousel
function getItemHTML(item,layout_label,position,currencyCode)
{

    var itemTitle = item.title ;
    var tempDiv = $('<div id="tempDiv" style="visibility:hidden"></div>');
    $('body').append(tempDiv);
    tempDiv.html(itemTitle).autoEllipsisByWord('',{width:100,lines:3});
    itemTitle = tempDiv.html();
    tempDiv.remove();
    /*itemTitle = (itemTitle && itemTitle.length > 40 ) ? itemTitle.substring(0,40)+"..." : itemTitle ;
    // word break
    itemTitle = wbr(itemTitle, 14);*/
    var args={};
    var carouselStrTmpl = new EJS({
        url: "/shared/bu/js/template/Carousel_Structure.js"
    });
    var _LSIURL = window.location.protocol + '//' + window.location.host;
    args.url = _LSIURL+""+item.thumbnail_url;
    args.auctionId = item.auction_id;
    args.title = item.title;
    args.itemTitle = itemTitle;
    args.number_of_items_per_lot = item.number_of_items_per_lot;
    var current_bid = item.current_bid;
    if(current_bid) 
    {
        current_bid =current_bid.substring(0,(current_bid.indexOf(".") + 3));
    }
    else
    {
        current_bid="0.00";
    }
    
    args.current_bid = current_bid;
    args.auction_type_code = item.auction_type_code;
    args.close_time=item.close_time;
    args.layout_label = layout_label;
    args.position = position;
   	args.currency_symbol = "$";
	args.currency_code = "USD";
	if(currencyCode){
		args.currency_symbol = currencySign[currencyCode];
		args.currency_code = currencyCode;
	}
    if ( typeof(uk_flag) != "undefined" && uk_flag == true ) {
    	args.currency_symbol = "&pound;";
		args.currency_code = "UK";
    }
    /*var current_price;
    if(args.auction_type_code == "SLB"){
        current_price = "Sealed Bid";
    }else{
        current_price = args.current_bid;
    }
    var carousel_structure = "<li><div class='imageClass' style='background-image: url("+args.url+");'><a ceid="+args.layout_label+"-image-"+args.position+" href='/auction/view?id="+args.auctionId+"'><img style='border:1px solid #fff;cursor:pointer;' src='/shared/bu/images/imageframe.gif' src="+args.url+" /></a></div><br/><div class='ellipsis'><a  ceid="+args.layout_label+"-text-"+args.position+"  href='/auction/view?id="+args.auctionId+"'>"+args.itemTitle+"</a></div><div style='line-height: 18px;'>Quantity in Lot: "+args.number_of_items_per_lot+"</div><div>Lot Price: "+current_price+"</div>";
    if(args.auction_type_code=="closingsoon"){
        carousel_structure +="<div style='color:#F88B3A'>Closing:"+args.close_time+"</div></li>";
    }else{
        carousel_structure += "</li>";
    }*/
    var carousel_structure = carouselStrTmpl.render(args);
    return carousel_structure;
}

//used for auction view carousel
function getAuctionViewItemHTML(item,index)
{
    var args={};
    var carouselStrTmpl = new EJS({
        url: "/shared/bu/js/template/AuctionView_Carousel_Structure.js"
    });
    args.index=index;
    args.path=images_path;
    args.url = item.tinythumb_url;
    var carousel_structure = carouselStrTmpl.render(args);
    return carousel_structure;
}

//used for auction view lighbox generation
function getAuctionViewLightBoxHTML(item,display,index)
{
    var args={};
    var carouselStrTmpl = new EJS({
        url: "/shared/bu/js/template/AuctionView_LightBox_Structure.js"
    });
    args.largeImageUrl = item.largethumb_url;
    args.widgetImageUrl = item.image_url;
    args.display = display;
    args.path=images_path;
    args.index = index;
    var carousel_structure = carouselStrTmpl.render(args);
    return carousel_structure;
}

function getAuctionViewLightBoxTextHTML(item,display){
    var args={};
    var carouselStrTmpl = new EJS({
        url: "/shared/bu/js/template/AuctionView_LightBoxText_Structure.js"
    });
    args.widgetImageUrl =item.image_url;
    if(display == "block"){
        args.bgUrl = "url('/shared/bu/images/imageEnlargeIcon.gif')";
    }else{
        args.bgUrl = "none";
    }
    args.display = display;
    var carousel_structure = carouselStrTmpl.render(args);
    return carousel_structure;
}

function processClick(e){
    if (!e) {
        e = window.event;
    }
    var theTarget = e.target ? e.target : e.srcElement;
    var pNode = theTarget;
    var pClass = pNode.className;
    pClass = pClass.split(" ")[0];
    if(pClass=="tabNavMiddle"){
        var parentNode = $($(pNode).parent());
        var loggedIn = username ? "loggedIn" : "notLoggedIn";
        var layout = "";
        var layoutEl = document.getElementsByTagName('layout');  //$('layout').each() not working in IE8, so using the traditional way of getting elements.
        for(var i=0;i<layoutEl.length;i++){
            if(layoutData[layoutEl[i].id]){
                layout = layoutData[layoutEl[i].id][loggedIn];
            }else{
                layout = layoutData[loggedIn];
            }
        }
        if (parentNode.hasClass("selected")) {
            return false;
        } else if(layout.collections.carousel.length == 1){
            return false;
        }else {
            $('div.tabContainer div.selected').removeClass("selected");
            parentNode.addClass("selected");
            for(var i=0;i<layout.collections.carousel.length;i++){
                if(parentNode.attr("id") == layout.collections.carousel[i]+"Tabbed"){
                    $("#"+layout.collections.carousel[i]+'TabbedBody').css({
                        'display':'block'
                    });
                    if(carouselObj[layout.collections.carousel[i]+'TabbedCarousel'])
                    {
                        carouselObj[layout.collections.carousel[i]+'TabbedCarousel'].reset();
                    }
                }else{
                    $("#"+layout.collections.carousel[i]+'TabbedBody').css({
                        'display':'none'
                    });
                }
            }
        }

    }
}

String.prototype.splice = function( idx, rem, s ) {
    return (this.slice(0,idx) + s + this.slice(idx + Math.abs(rem)));
};


$(document).ready(function() {
if($.ui){
function loadWidgetComp(){
	try{
	$.widget( "custom.catcomplete", $.ui.autocomplete, {
	_renderMenu: function( ul, items ) {

		// BUX UI Project:  Search autocomplete is setting top to 0px (top of browser window) instead of under the textbox.
		// Attempt to manually set the autocomplete top to the textbox bottom.
		var textbox = this.element[0];
		var bottom = textbox.getBoundingClientRect().bottom + 'px';
		ul.css('top', bottom);

	  var that = this,
		currentCategory = "";
	  $.each( items, function( index, item ) {
		/*if ( item.category && item.category != currentCategory ) {
		  ul.append( "<li class='ui-autocomplete-category'>" + item.category + "</li>" );
		  currentCategory = item.category;
		}*/
		that._renderItem( ul, item );
	  });
	},_renderItem: function( ul, item) {
		var text = item.label.toLowerCase();
		var match = this.element.val().toLowerCase();
		text = text.indexOf(match) == -1 ? text : text.replace(match,'<b>'+match+'</b>');
		
		var originalText = item.label, st = text.indexOf('<b>'), ed =text.indexOf('</b>');
		originalText = originalText.splice(st, 0, '<b>');
		originalText = originalText.splice(ed, 0, '</b>');
		
				return $( "<li></li>" )
					.data( "ui-autocomplete-item", item )
					.append( $( "<a></a>" ).html( originalText ) )
					.appendTo( ul );
			}
		});
	} catch(e) {
		loadWidgetComp();
	}
}
loadWidgetComp();

	// BUX UI Project:  When jquery UI tries to draw the autocomplete box, it gets an error about curCSS missing, so define it.
	$.curCSS = function (element, attrib, val) {
	    $(element).css(attrib, val);
	};

	$("input[name='searchparam_words']").catcomplete({
        source: function( request, response ) {

			$.ajax({url: "/api/v1/auction_search//endeca_dimension_search",
				data : {words:request.term+"*"},
				dataType: "json",				
				success: function(data) {
					if(data.result.length){
						var typeAheads = [];
						var otherData = [];
						for(var i =0 ;i < data.result.length;i++){
							if(data.result[i].label.toLowerCase() == "typeahead"){
								otherData = otherData.concat(formatTypeAheadData(data.result[i].options,data.result[i].label,10));
							} 
						}	
						response(otherData);
					}else {
						response([]);
					}				
				},
				error : function(){
					console.log('something went wrong');
					response([]);
				}
			});			
		},
		minLength: 3,
		open:function(event,ui){
			$(event.target).attr('data-type','');
		},
		select:function(event,ui){
			$(event.target).attr('data-type',ui.item.category);
		}
    }).autocomplete('widget').bind('keydown',function(e){
		if(e.keyCode == 13){
			redirectSearch();
		} 
	});
}
	//commenting typeahead code
	/*$('#new_words').autocomplete({
        source: function( request, response ) {
			$.ajax({url: "/api/v1/auction_search//endeca_dimension_search",
				data : {words:request.term+"*"},
				dataType: "json",				
				success: function(data) {
					if(data.result.length){
						var typeAheads = [];
						var otherData = [];
						for(var i =0 ;i < data.result.length;i++){
							if(data.result[i].label != "TypeAhead"){
								otherData = otherData.concat(formatTypeAheadData(data.result[i].options,data.result[i].label,5));
							} else {
								typeAheads = formatTypeAheadData(data.result[i].options,"",10); 
							}
						}	
						x = typeAheads.concat(otherData)
						response(x);
					}else {
						response([]);
					}				
				},
				error : function(){
					console.log('something went wrong');
					response([]);
				}
			});			
		},
		minLength: 4
    });*/



    //Making changes for endeca
    if(!isSTR()){
        $('#old_search_con').remove();
        $('#new_search_con').show();
		if(checkMobile()){
			$('.header .topMenuContainer').prepend('<span class="bcktomobile" onclick="backtomobile()" >View Mobile Site</span>');	
		}
    } else {
        $('#new_search_con').remove();
    }
    $('.inputText').bind("focus",function(){
        if($(this).val() == $(this).attr("title")){
            $(this).val("");
            $(this).css({
                'color':'#333333'
            });
        }
    });
    $('.inputText').bind("blur",function(){
        if($(this).val() == $(this).attr("title") || $(this).val() == ""){
            $(this).val($(this).attr("title"));
            $(this).css({
                'color':'#999999'
            });
        }
    });
	
    if(isSTR()){
    	//get data from generic_json.js file
	     $.getJSON( "/json/generic_json.js", function(data) {
	        d_category = data.category;
	        d_locations = data.locations;
	        d_item_condition = data.item_condition ;
	        d_auction_type = data.auction_type;
	        d_shipping_size_classification = data.shipping_size_classification;
	        d_shipping_terms = data.shipping_terms;
	
	        var adv_srch_con = $('div.advancedSearch');
	        adv_srch_con.data('generic_data',data);
	        var srch_con = $('div.searchContent');
	
	
	    
	        //fill up category,locations,condition and other drop downs from js file
	        var categoryHTML = "";
	        var locationsHTML= "";
	        var locationsHTMLwoLA = "";
	        var conditionsHTML= "";
	        var auctionTypeHTML= "";
	        var shippingSizeClassHTML= "";
	        var shippingTermsHTML= "";
	    
	        if(typeof d_category != "undefined"){
	            for(var i=0;i<d_category.length;i++){
	                categoryHTML +='<option value="'+d_category[i].id+'">'+d_category[i].name+'</option>';
	            }
	            srch_con.find('select[name*=category1]').append(categoryHTML);
	            adv_srch_con.find('select[name*=category1]').html(categoryHTML);
	        }else {
	            $.getJSON( "/json/category.js", function(data) {
	                d_category = data;
	                for(var i=0;i<d_category.length;i++){
	                    categoryHTML +='<option value="'+d_category[i].id+'">'+d_category[i].name+'</option>';
	                }
	                srch_con.find('select[name*=category1]').append(categoryHTML);
	                adv_srch_con.find('select[name*=category1]').html(categoryHTML);
	            });
	        }
	
	        if(typeof d_locations != "undefined" ){
	            for(var i=0;i<d_locations.length;i++){
	                locationsHTML +='<option value="'+d_locations[i].id+'">'+d_locations[i].name+'</option>';
	            }
	            srch_con.find('select[name*=location]').append(locationsHTML);
	            adv_srch_con.find('select[name*=location]').append(locationsHTML);
	        }else {
	            $.getJSON( "/json/locations.js", function(data) {
	                d_locations = data;
	                for(var i=0;i<d_locations.length;i++){
	                    locationsHTML +='<option value="'+d_locations[i].id+'">'+d_locations[i].name+'</option>';
	                }
	                srch_con.find('select[name*=location]').append(locationsHTML);
	                adv_srch_con.find('select[name*=location]').append(locationsHTML);
	            });
	        }
	    
	        if(typeof d_item_condition != "undefined" ){
	            for(var i=0;i<d_item_condition.length;i++){
	                conditionsHTML +='<option value="'+d_item_condition[i].id+'">'+d_item_condition[i].name+'</option>';
	            }
	            srch_con.find('select[name*=item_condition]').append(conditionsHTML);
	            adv_srch_con.find('select[name*=condition]').html(conditionsHTML);
	        }else {
	            $.getJSON( "/json/item_condition.js", function(data) {
	                d_item_condition = data;
	                for(var i=0;i<d_item_condition.length;i++){
	                    conditionsHTML +='<option value="'+d_item_condition[i].id+'">'+d_item_condition[i].name+'</option>';
	                }
	                srch_con.find('select[name*=item_condition]').append(conditionsHTML);
	                adv_srch_con.find('select[name*=condition]').html(conditionsHTML);
	            });
	        }
	    
	        if(typeof d_auction_type != "undefined" ){
	            for(var i=0;i<d_auction_type.length;i++){
	                if(d_auction_type[i].id!="DUT")
	                {
	                    auctionTypeHTML +='<option value="'+d_auction_type[i].id+'">'+d_auction_type[i].name+'</option>';
	                }
	            }
	            adv_srch_con.find('select[name*=type]').html(auctionTypeHTML);
	        }else {
	            $.getJSON( "/json/auction_type.js", function(data) {
	                d_auction_type = data;
	                for(var i=0;i<d_auction_type.length;i++){
	                    if(d_auction_type[i].id!="DUT")
	                    {
	                        auctionTypeHTML +='<option value="'+d_auction_type[i].id+'">'+d_auction_type[i].name+'</option>';
	                    }
	                }
	                adv_srch_con.find('select[name*=type]').html(auctionTypeHTML);
	            });
	        }
	   
	        if(typeof d_shipping_size_classification != "undefined" ){
	            for(var i=0;i<d_shipping_size_classification.length;i++){
	                shippingSizeClassHTML +='<option value="'+d_shipping_size_classification[i].id+'">'+d_shipping_size_classification[i].name+'</option>';
	            }
	            adv_srch_con.find('select[name*=size]').html(shippingSizeClassHTML);
	        }else {
	            $.getJSON( "/json/shipping_size_classification.js", function(data) {
	                d_shipping_size_classification = data;
	                for(var i=0;i<d_shipping_size_classification.length;i++){
	                    shippingSizeClassHTML +='<option value="'+d_shipping_size_classification[i].id+'">'+d_shipping_size_classification[i].name+'</option>';
	                }
	                adv_srch_con.find('select[name*=size]').html(shippingSizeClassHTML);
	            });
	        }
	    
	        if(typeof d_shipping_terms != "undefined" ){
	            for(var i=0;i<d_shipping_terms.length;i++){
	                shippingTermsHTML +='<option value="'+d_shipping_terms[i].id+'">'+d_shipping_terms[i].name+'</option>';
	            }
	            adv_srch_con.find('select[name*=shipping_terms]').append(shippingTermsHTML);
	            
	        }else {
	            $.getJSON( "/json/shipping_terms.js", function(data) {
	                d_shipping_terms = data;
	                for(var i=0;i<d_shipping_terms.length;i++){
	                    shippingTermsHTML +='<option value="'+d_shipping_terms[i].id+'">'+d_shipping_terms[i].name+'</option>';
	                }
	                adv_srch_con.find('select[name*=shipping_terms]').append(shippingTermsHTML);
	                
	            });
	        }
             customSelectFunction();
	    });
    }
});

function backtomobile(){
	clearCookie('MOBILE');
	location.href = "http://"+location.hostname;
}
function clearCookie(name, domain, path){
    var domain = domain || document.domain;
	var today = new Date();
    var path = path || "/";
    document.cookie = name + "=1; expires=" +today.getTime()+ "; domain=" + domain + "; path=" + path;
};

// Remove watchlist to be used in auction view & success bid page
function removeWatchlist(el,auction_id){
    $("#watchlistIcon").before("<div class='watchListLoading'>Removing...</div>").remove();
    Invoker.RemoveFromWatchlist(auction_id,{}, function(data,o){
        if(data.error && data.error[0]){
            var error_text = data.error[0].error_text || (data.error[0].status_code == 403 ? 'Please log in to remove auction from watchlist' : 'Error removing auction from watchlist');
            $(".watchListLoading").before("<div class='itemAddedErrorWatchIcon'>"+error_text+"</div>").remove();
            setTimeout(function(){
                $('.itemAddedErrorWatchIcon').fadeOut("slow",function(){
                    if(isSTR()){
                        $('.itemAddedErrorWatchIcon').before("<a pagetype='STR' class='removeIcon' id='watchlistIcon' href='#' onclick='javascript:return removeWatchlist(this,"+auction_id+");'>Remove Listing</a>").remove();
                    }else{
                        $('.itemAddedErrorWatchIcon').before("<a class='removeIcon' id='watchlistIcon' href='#' onclick='javascript:return removeWatchlist(this,"+auction_id+");'><b>Remove Auction from Watchlist</b></a>").remove();                        
                    }
                });
            },2000);
        }else if(data.result){
            var u_id = getLoggedInUserId();

            /* GTM datalayer event  */
            window.dataLayer = window.dataLayer || [];
            dataLayer.push({ 'event': 'eventTracking', 'category': 'auction', 'action': 'stop watch', 'label': dataLayer[0].userID + '|' + auction_id });

            if(isSTR()){
                $(".watchListLoading").before("<a pagetype='STR' href='#' onclick='return addToWatchList(this,"+u_id+","+auction_id+");'>Add to My Watchlist</a>").remove();
            }else{
                $(".watchListLoading").before("<a class='watchIcon' id='watchlistIcon' href='#' onclick='return addToWatchList(this,"+u_id+","+auction_id+");'><b>Add to My Watchlist</b></a>").remove();
            }
        }
    });
    return false;
}




function addToWatchList(el,user_id,auction_id){
    var params={
        "user_id" : (user_id == null) ? dataLayer[0].userID : user_id,
        "auction_id" : auction_id
    };

    /* GTM datalayer event  */
    window.dataLayer = window.dataLayer || [];
    dataLayer.push({ 'event': 'eventTracking', 'category': 'auction', 'action': 'watch', 'label': dataLayer[0].userID + '|' + auction_id });

    $(el).before("<div class='watchListLoading'>Adding...</div>").remove();
    Invoker.addItemToWatchList(params,function(data){
        $('.watchListLoading').before(el).remove();
        if(!data.error){
            //$(el).before("<div class='itemAddedSuccessWatchIcon'>Auction added to <a href='/account/main?tab=WatchList#WatchListAnchor'>Watchlist</a></div>").remove();
            if($(el).attr("pagetype")=="STR"){
                $(el).before("<a pagetype='STR' class='removeIcon' id='watchlistIcon' href='#' onclick='javascript:return removeWatchlist(this,"+auction_id+");'>Remove Listing</a>").remove();
            }else{
                if(str)
                {
                    $(el).before("<a class='removeIcon' id='watchlistIcon' href='#' onclick='javascript:return removeWatchlist(this,"+auction_id+");'><b>Remove Listing from Watchlist</b></a>").remove();
                }
                else
                {
                    $(el).before("<a class='removeIcon' id='watchlistIcon' href='#' onclick='javascript:return removeWatchlist(this,"+auction_id+");'><b>Remove Auction from Watchlist</b></a>").remove();
                }
            }
        }else{
            if(data.error[0].status_code == "403"){
                if(isSTR()){
                    $(el).before("<a pagetype='STR' class='notLoggedinErrorIcon' href='javascript:void(0);'>Please Log In</a>").remove();
                }else{
                    $(el).before("<a class='notLoggedinErrorIcon' href='javascript:void(0);'><b>Please Log In to Add to Your Watchlist</b></a>").remove();
                }
				var url=location.pathname+location.search+"&isAddWatchlist=true";
				url += !isSTR() ? "&flag=new" : "";
                var element = $('.notLoggedinErrorIcon');
                window.location.href = "/login?page="+escape(url);
            }else if(data.error[0].status_code == "200"){
                if(isSTR()){
                    $(el).before("<a pagetype='STR' class='removeIcon' id='watchlistIcon' href='#' onclick='javascript:return removeWatchlist(this,"+auction_id+");'>Remove Listing</a>").remove();
                }else{
                    $(el).before("<a class='removeIcon' id='watchlistIcon' href='#' onclick='javascript:return removeWatchlist(this,"+auction_id+");'><b>Remove Auction from Watchlist</b></a>").remove();
				}
            //$(el).before("<div class='itemAddedErrorWatchIcon'>"+data.error[0].error_text+"</div>").remove();
            }else{
                if(isSTR()){
                    $(el).before("<div pagetype='STR' class='itemAddedErrorWatchIcon'>Error!!</div>").remove();
                }else{
                    $(el).before("<div class='itemAddedErrorWatchIcon'>Error, Please try again later</div>").remove();
                }
                setTimeout(function(){
                    $('.itemAddedErrorWatchIcon').fadeOut("slow",function(){
                        $('.itemAddedErrorWatchIcon').before(el).remove();
                    });
                },2000);
            }
        }
    });
    return false;
}

function listingAddtoWatchlist(el,user_id,auction_id,search_query,param){

    var params={
        "user_id":user_id ? user_id : global_user_id,   
        "auction_id":auction_id
    };
	if(!params.user_id) return true;
    var bgurl = $(el).css("background");
    $(el).removeAttr("href");
    Invoker.addItemToWatchList(params,function(data){
        if(!data.error){

            /* GTM datalayer event  */
            window.dataLayer = window.dataLayer || [];
            dataLayer.push({ 'event': 'eventTracking', 'category': 'auction', 'action': ' watch', 'label': dataLayer[0].userID + '|' + auction_id });

            el.innerHTML = '- Watchlist';
            $(el).next().find('label').html("Auction added to Watchlist");
            el.onclick=null;
            $(el).click(function(){
                window.location.href = "/account/main?tab=WatchList#WatchListAnchor";
            });
        }else{
            if(data.error[0].status_code == "403"){
                //  $(el).css({"background":"url('/shared/bu/images/saveSearch-error.gif') -3px 0px no-repeat"});
                if(param) {
                    var url=location.pathname+"?query="+search_query+"&auctionId="+auction_id+"&_page="+param.page+"&sort="+param.sort+"&ascending="+param.ascending+"&isAddWatchlist=true";
					url += !isSTR() ? "&flag=new" : "";
                }else{
                    var url = "/";
                }
                window.location.href = "/login?page="+escape(url);
            }else if(data.error[0].status_code == "200"){
				el.innerHTML = '- Watchlist';
                $(el).next().find('label').html(data.error[0].error_text);
                $(el).next().show();
                el.onclick=null;
                if($(el).next().attr('id')=="watch_tooltip")
                {
                    setTimeout(function(){
                        $(el).next().fadeOut("slow");
                    },2000);
                }
            }else{
                $(el).css({
                    "background":"url('/shared/bu/images/saveSearch-error.gif') 0px 0px no-repeat"
                });
                $(el).next().html(data.error[0].error_text);
                el.onclick=null;
                setTimeout(function(){
                    $(el).fadeOut("slow",function(){
                        $(el).css("background",bgurl);
                        $(el).show();
                        $(el).next().find('label').html("Add to Watchlist");
                      
                        el.onclick=listingAddtoWatchlist(el,global_user_id,auction_id,search_query,param);
                        el.href="/account/main?tab=WatchList&auctionId="+auction_id+"&addSubmit.x=1";
                    });
                },2000);
            }
        }
    });
    return false;

}

function arrayContains(arr,v){
    for (i=0; i<arr.length; i++){
        if (arr[i]==v) {
            return true;
        }
    }
    return false;
}

function shuffle(o){
    for(var j, x, i = o.length; i; j = parseInt(Math.random() * i), x = o[--i], o[i] = o[j], o[j] = x);
    return o;
}

function openWhatsThisPopup(url) {
    window.open (url, "WhatIsThisPopup",
        "width=450," +
        "height=625," +
        "channelmode=0," +
        "directories=0," +
        "location=0," +
        "menubar=0," +
        "resizable=0," +
        "scrollbars=1," +
        "status=0," +
        "titlebar=0," +
        "toolbar=0"
        );
}

function bidAmountValidate(obj,minimum_bid,id,auction_type){
    var val = $("input[type='text'][name='bidAmount']").val();
    val = val.replace(/,/,"");
    if(isNaN(val)){
        pushValue(null);
        $("div.bidAmountCheck").show();
        $(obj).prev().focus();
        return false;
    } else  {

	
        if(val<minimum_bid)
        {
            pushValue(null);
            $("div.bidAmountCheck").show();
            $(obj).prev().focus();
            return false;
        }
        else
        {
            pushValue(val);
            $("div.bidAmountCheck").hide();

            //GTM - dataLayer push bidding
            window.dataLayer = window.dataLayer || [];
            dataLayer.push({
                'event': 'eventTracking',
                'category': 'bid:' + auction_type,
                'action': 'bid submit',
                'label': dataLayer[0].userID + '|' + id + '|' + val
            });

            return true;
        }
    }
}

function pushValue(v){
    v?$("input[name='bidAmount']").val(v):$("input[name='bidAmount']").val("");
}

function getLoggedInUserId(){
    return getCookie("WWW_SESSION_ID_USER") ? getCookie("WWW_SESSION_ID_USER") : getCookie("WWW_SESSION_ID_DEV_USER");
}

function unixtimeIsToday (unixtime) {
	var date1 = new Date();
	var date2 = new Date(unixtime * 1000);
	return date1.toDateString() === date2.toDateString();
}

function formatTo12(closeTime){
    var close_time = new Date(closeTime*1000);
    var hours = close_time.getHours();
    var minutes = close_time.getMinutes();
    minutes = minutes + "";
    if (minutes.length == 1){
        minutes = "0" + minutes;
    }
    if(hours>=12){
        if((hours-12)==0){
            return hours+":"+minutes+" PM";
        }else if((hours-12)==12){
            return "12:"+minutes+" AM";
        }else{
            return (hours-12)+":"+minutes+" PM" ;
        }
    }else{
        return hours+":"+minutes+" AM"  ;
    }
}

/* introduce word break \S Match any character NOT whitespace */
function wbr(str, num) { 
    return str.replace(RegExp("(\\S{" + num + "})(\\S)", "g"), function(all,text,char){
        return text + "<wbr>" + char;
    });
}


function states_basedon_country(country_code,state_code){
    if(country_code == "US" || country_code == "CA")
    {
        Invoker.statesBasedOnCountry(country_code,function(msg){
            var insert_text;
            insert_text='<select class="form-control" name="state" id="dynamic_states" >';
            for(var i=0;i<msg.result.length;i++){
                for(var obj in msg.result[i]){
                    if(obj==state_code)
                    {
                        insert_text+='<option value="'+obj+'"  selected >'+msg.result[i][obj] +'</option>';
                    }
                    else
                    {
                        insert_text+='<option value="'+obj+'" >'+msg.result[i][obj] +'</option>';
                    }
                }
            }
            insert_text+='</select>';
            $('#dynamic_states').after(insert_text).remove();
				
        });
    }//end of CA and US
    else {
        //for non CA and US states
        if(state_code){
            $('#dynamic_states').after('<input class="inp-se-Style" id="dynamic_states" type="text" name="state" value="'+state_code +'"/>').remove();
        } else {
            $('#dynamic_states').after('<input class="inp-se-Style" id="dynamic_states"  type="text" name="state" />').remove();
        }
    }
}




function currentESTTime(t) {
    // create Date object for current location
    d = t?new Date(t):new Date();

    // convert to msec
    // add local time zone offset
    // get UTC time in msec
    var utc = d.getTime() + (d.getTimezoneOffset() * 60000);

    //offset of EST
    var offset = '-4';

    // create new Date object for different city
    // using supplied offset
    var nd = new Date(utc + (3600000*offset));

    // return time as a Date
    return new Date(nd);
}



function viewManifest(user_id,auction_id){
    var id=user_id ? user_id : global_user_id;
    if(id == ""||id == undefined){
        window.location = "/login?page=/";
    }else{
        window.open('/auction/view_csv?id='+auction_id+'','proxy','menubar=yes,width=800,height=600,scrollbars=yes,location=no');
    }
}

function escape2HTML(text) {
	var replacements = ["&amp;", "&#xa;","&quot;"];
	var replaceWith = ["&", "",'"'];
	for(i=0;i<replacements.length;i++){
		 text = text.replace(replacements[i], replaceWith[i]);
	}
	return text;
}

function formatTypeAheadData(options,cat,cnt){
	options = options.slice(0,cnt);
	var x = $.map( options, function( item ) {
		return {
			label: escape2HTML(item.name),
			value: escape2HTML(item.name),
			category : cat
		}
	});
	return x;
}

function customSelectFunction() {
    $('select.customselect').css('visibility','hidden').each(function() {
        var currentObject = $(this);
        var cID = currentObject.attr('id') != "" ? currentObject.attr('id') : '_cust_'+ $('div.customselect').length;
        var cW = currentObject.width() || currentObject.css('width');
        var cPL = currentObject.css('padding-left');
        var cPR = currentObject.css('padding-right');
        var cML = currentObject.css('margin-left');
        var cMR = currentObject.css('margin-right');        
        var cFloat = currentObject.css('float');
        var isMul = currentObject.attr('multiple');        
        var currentOptions = currentObject.find("option");
        var parentNode = currentObject.parent();
        var cWNoPx = cW.toString().replace(/px/,"");
        var cOffWid = parseInt(cWNoPx)+parseInt(cPL.split("px")[0])+parseInt(cPR.split("px")[0]);
        var bGP = (cOffWid - 18) + "px 1px";
        var currentText = "Select ";
        var cName = currentObject.attr("name");
        var cSName = currentObject.attr("sName") ? currentObject.attr("sName"): cName;
        var cPName = currentObject.attr('pName') || cName;
        if(isMul) { 
            currentText+= "up to "+ currentOptions.length + " " + cPName;
        }
        else { 
            currentText += "One "+ cSName;
        }
        currentObject.remove();
        parentNode.append("<div class='customselect'><div class='customselect-label'></div><div class='customselect-container'></div></div>");
        var container = $(parentNode).find('div.customselect');
        container.attr('name',cName).attr('pName',cPName).attr('sName',cSName);
        var lContainer = $(container.find('div.customselect-label'));
        lContainer.css({
            'background-position':bGP,
            'width':cOffWid
        }).hover(function(){
            $(this).addClass('customeHover');
        },function(){
            $(this).removeClass('customeHover');
        }).autoEllipsis(currentText,{'width':(cOffWid - 20)});
        if(cID != "") container.attr('id',cID);
        container.css({
            'width':cW,
            'padding-left':cPL,
            'padding-right':cPR,
            'margin-left':cML,
            'margin-right':cMR,
            'float':cFloat
        });
        if(!isMul){
            container.append("<input type='hidden' id='hidden_"+cID+"' name='"+cName+"' value=''>"); //hidden variable for single select to send as params in form submit
        }

        var mContainer = $(container.find('div.customselect-container'));
        var dropDownList = $('<div></div>');
        dropDownList.addClass('menu');
        var widthCalculator = $('<span></span>');
        var maxContainerWidth = 0;
        widthCalculator.attr("id","widthCalculator");
        $('body').append(widthCalculator);
        for (var x =0 ; x < currentOptions.length; x++) {
            var listOption = $('<div></div>');
            dropDownList.append(listOption);
            if($(currentOptions[x]).attr("selected")){ //set default value for hidden variables.
                $("#hidden_"+cID).val($(currentOptions[x]).val());
            }
            listOption.attr("id","option"+x).attr("index",x).attr("name", $(currentOptions[x]).val()).addClass('item');
            var inHTML = "";
            if(isMul){
                // for condition & auction type list box the param name sent condition_USED (REFUR etc..) & type_REG (FIX etc..)
                // hence the below condition
                if(cID=="condition" || cID=="type")
                {
                    inHTML = "<input class='inputClass' type='checkbox' name='"+cName+"_"+$(currentOptions[x]).val()+"' value='"+$(currentOptions[x]).val()+"' id='"+cID+"option"+x+"'><span class='spanClass'><label class='labelClass'>"+$(currentOptions[x]).html()+"</label></span>";
                }
                else 
                {
                    inHTML = "<input class='inputClass' type='checkbox' name='"+cName+"' value='"+$(currentOptions[x]).val()+"' id='"+cID+"option"+x+"'><span class='spanClass'><label class='labelClass'>"+$(currentOptions[x]).html()+"</label></span>";
                }
            } else {
                inHTML = "<span class='spanClass'><label class='labelClass'>"+$(currentOptions[x]).html()+"</label></span>";
            }
            widthCalculator.html(inHTML);
            listOption.html(inHTML);
            listOption.css({
                'background-color':'white'
            }).hover(function(){
                $(this).css({
                    'background-color':'#adc3e0'
                });
            },function(){
                $(this).css({
                    'background-color':'white'
                });
            });
            if(isMul){
                $(listOption.find('label')).attr('for',listOption.find('input:checkbox').attr('id'));
                $(listOption).find('input:checkbox').bind('click',{
                    con:container
                },function(event){
                    var con = event.data.con;
                    var sO = con.find('input:checkbox:checked').length;
                    if(sO == 0 ) {
                        con.find('div.customselect-label').autoEllipsis("Select up to " + con.find('div.item').length + " "+ con.attr('pName'),{
                            'width':con.attr('offsetWidth') - 20
                        });
                    } else if(sO == 1) {
                        con.find('div.customselect-label').html("1 "+con.attr('sName')+" selected");
                    } else {
                        con.find('div.customselect-label').html(sO+" "+con.attr('pName')+" selected").autoEllipsis(sO+" "+con.attr('pName')+" selected",{
                            'width':con.attr('offsetWidth') - 30
                        });
                    }
                });
            }
            else {
                $(listOption).bind('click', function(){
                    var cS = $(this);
                    var cP = cS.parents('div.customselect');
                    var sValue = cS.attr('name');
                    var sHTML =  cS.find('label').html();
                    $("#hidden_"+cP.attr("id")).val(sValue);
                    cP.attr('val',sValue).find('div.customselect-label').autoEllipsis(sHTML,{
                        'width':cP.attr('offsetWidth') - 20
                    });
                    cP.find('div.customselect-container').hide();
                });
            }
            if($(currentOptions[x]).attr('selected')) {
                if(isMul)
                {
                    listOption.find('input:checkbox').attr('checked','true');
                }
                else {
                    lContainer.autoEllipsis($(currentOptions[x]).html(),{
                        'width':cOffWid -20
                    });
                    container.val('attr',$(currentOptions[x]).val());
                }
            }
            if(maxContainerWidth < widthCalculator.attr('offsetWidth')) {
                maxContainerWidth = widthCalculator.attr('offsetWidth');
            }
        }
        widthCalculator.remove();
        maxContainerWidth = maxContainerWidth > cOffWid ? maxContainerWidth : cOffWid;
        mContainer.css({
            'width':(maxContainerWidth+20)+"px",
            'height':(dropDownList.attr('offsetHeight'))+"px"
        }).append(dropDownList);
        $('div.header').find('div#location').each(function(){
            $(this).find('div.menu').css({
                "height":"255px",
                "width":"150px",
                "overflow":"auto"
            }) ; //add overflow for location select alone.
            $(this).find('div.customselect-container').css({
                "width":"150px"
            });
        });
        $('div.advancedSearch').find('div#location').each(function(){
            $(this).find('div.menu').css({
                "height":"237px",
                "width":"195px",
                "overflow":"auto"
            }) ; //add overflow for location select alone.
            $(this).find('div.customselect-container').css({
                "width":"195px"
            });
        });
        $('div.header').find('div#item_condition').each(function(){
            $(this).find('div.menu').css({
                "width":"148px",
                "overflow":"auto"
            }) ; //add overflow for condition select alone.
            $(this).find('div.customselect-container').css({
                "width":"148px"
            });
        });
        $('div.advancedSearch').find('div#match').each(function(){
            //add overflow for match select alone.
            $(this).find('div.customselect-container').css({
                "width":"195px"
            });
        });
        $('div.advancedSearch').find('div#size').each(function(){
            $(this).find('div.customselect-container').css({
                "width":"177px"
            });
            $(this).find('div.deselectMiddle').css({
                "width":"167px"
            });
        });
        $('div.advancedSearch').find('div#condition').each(function(){
            $(this).find('div.customselect-container').css({
                "width":"177px"
            });
            $(this).find('div.deselectMiddle').css({
                "width":"167px"
            });
        });
        $('div.advancedSearch').find('div#type').each(function(){
            $(this).find('div.customselect-container').css({
                "width":"177px"
            });
            $(this).find('div.deselectMiddle').css({
                "width":"167px"
            });
        });
        $('div.advancedSearch').find('div#perPage').each(function(){
            $(this).find('div.customselect-container').css({
                "width":"171px"
            });
            $(this).find('div.deselectMiddle').css({
                "width":"171px"
            });
        });
        $('div.advancedSearch').find('div#sort').each(function(){
            $(this).find('div.customselect-container').css({
                "width":"187px"
            });
            $(this).find('div.deselectMiddle').css({
                "width":"187px"
            });
        });
		
        //deselect bar at the bottom of multiselect
        if(isMul){
            var deselectContWidth = mContainer.css('width');
            deselectContWidth = (deselectContWidth.substring(0,deselectContWidth.length-2));
            var deselectContainerHTML = "<div class='deselectContainer'><div class='deselectLeft'/><div class='deselectMiddle'  style='width:"+(deselectContWidth-10)+"px'><a class='leftLink'>Deselect all</a><span style='float: right;'><a class='rightLink'><div id='ddcbl_close'></div></a></span></div><div class='deselectRight'></div>";
            mContainer.append(deselectContainerHTML);
        }
        //hide the container when close link in deselect bar is clicked
        $('a.rightLink').bind("click",function(){
            $('div.customselect-container').hide();
        });
        //deselect all checkbox when deselect all link in deselect bar is clicked
        $('a.leftLink').bind("click",function(){
            $(this).parents('div.customselect-container').find('input:checkbox').each(function(){
                if(this.checked = true)
                {    
                    this.checked = false;
                }
            });
            var container = $(this).parents('div.customselect');
            container.find('div.customselect-label').autoEllipsis("Select up to " + container.find('div.item').length + " "+ container.attr('pName'),{
                'width':container.attr('offsetWidth') - 20
            });
        });
        lContainer.bind('click',{
            con:mContainer
        },clickOperation);
    });
    function clickOperation(event) {
        if (event.data.con.css('display') == 'none') {
            event.data.con.css('display','block');
            $(document).bind('click', {
                con:event.data.con
            }, function(event) {
                if (($(event.target).parents('div.customselect').length) == 0 || $(event.target).parents('div.customselect').attr('id') != event.data.con.parents('div.customselect').attr('id')) {
                    $(document).unbind('click',clickOperation);
                    event.data.con.hide();
                }
            });
        } else {
            event.data.con.css('display','none');
            $(document).unbind('click',clickOperation);            
        }
    }
}
// name - name of the cookie
// value - value of the cookie
// [days] - number of days before cookie expires
// [path] - path for which the cookie is valid (defaults to path of calling document)
// [domain] - domain for which the cookie is valid (defaults to domain of calling document)
// [secure] - Boolean value indicating if the cookie transmission requires a secure transmission
// * an argument defaults when it is assigned null as a placeholder
// * a null placeholder is not required for trailing omitted arguments
function setCookie(name, value, days, path, domain, secure) {
	if (days) {
		expires = new Date();
		expires.setTime(expires.getTime() + days * 86400000);
	}
	var curCookie = name + "=" + escape(value) +
		((expires) ? "; expires=" + expires.toGMTString() : "") +
		((path) ? "; path=" + path : "") +
		((domain) ? "; domain=" + domain : "") +
		((secure) ? "; secure" : "");
	document.cookie = curCookie;
}

// name - name of the desired cookie
// * return string containing value of specified cookie or null if cookie does not exist
function getCookie(name) {
  var dc = document.cookie;
  var prefix = name + "=";
  var begin = dc.indexOf("; " + prefix);
  if (begin == -1) {
    begin = dc.indexOf(prefix);
    if (begin != 0) return null;
  } else
    begin += 2;
  var end = document.cookie.indexOf(";", begin);
  if (end == -1)
    end = dc.length;
  return unescape(dc.substring(begin + prefix.length, end));
}

function getParam(name, s) {
	var params = '';
	name = '&' + name + '=';
	if(s)
		params = '&' + s;
	else
		params = '&' + window.location.search.substr(1);
	var start = params.indexOf(name);
	if (start != -1) {
		start += name.length;
		var end = params.indexOf('&',start);
		if (end == -1) end = params.length;
		return params.substring(start,end);
	} else {
		return null;
	}
}

function dynamic_code(server) {

	var tid = getParam('tid');
	var sourceid = getParam('sourceid');
	var cj_aid = getParam('AID');
	var cj_pid = getParam('PID');
	var cj_sid = getParam('SID');
	var cj_url = getParam('URL');
	var cookie_value = '';

	if (sourceid) {
		setCookie(
			'WWW_ORIGINAL_SOURCE',
			sourceid,
			30,
			'/',
			'.liquidation.com'
		);
	}

	if (tid) {

		setCookie(
			'WWW_TID',
			tid,
			1000,
			'/',
			'.liquidation.com'
		);

		document.write('<IMG SRC=/tid?tid=' + tid + '&url='
			+ document.location.hostname
			+ document.location.pathname
			+ document.location.search + '>');
	}

	if (cj_aid) {
		cookie_aid_value = cj_aid;
		cookie_pid_value = ((cj_pid) ? cj_pid : '');
		cookie_sid_value = ((cj_sid) ? cj_sid : '');
		
		setCookie(
			'WWW_CJAID',
			cookie_aid_value,
			30,
			'/',
			'.liquidation.com'
		);
		setCookie(
			'WWW_CJPID',
			cookie_pid_value,
			30,
			'/',
			'.liquidation.com'
		);
		setCookie(
			'WWW_CJSID',
			cookie_sid_value,
			30,
			'/',
			'.liquidation.com'
		);

		if (cj_url) {
			document.location = unescape(cj_url);
		}
	}

}

function write_banner(type) {

	var html    = banner_html_data[type];
	var weights = banner_weight_data[type];

	// make an array with the indexes of banner_weight_data where each value is there weight times
	// thus, if we select a random index from this matrix it has weight chance of being picked
	// even if we have 100 banner adds all with weights of 100 (the max) thats still only 10,000 at constant time O(10,000)
	// likely this # will be closer to 8 banner ads at weights < 10 each so thats constant time O(80) 
	var matrix = new Array();
	for (var i = 0; i < weights.length; i++) {
		var weight = weights[i];
		for (var j = 0; j <= weight; j++) {
			matrix[i+j] = i;
		}
	}

	var index = 0;
	var randomNumber = 0;

	randomNumber = randomvalue(0, matrix.length-1);
	if (randomNumber < 0) { randomNumber *= -1 }

	index = matrix[randomNumber];

	document.write(html[index]);

	return;
}

function randomvalue(low, high) { return Math.floor(Math.random() * (1 + high - low) + low); }
// -------------------------------------------------------------------------------------------------
// jQuery innerWrap function
// -------------------------------------------------------------------------------------------------
$.fn.innerWrap = function() {
	var a, args = arguments;
	return this.each(function() {
		if (!a) a = jQuery.clean(args, this.ownerDocument);
		var b = a[0].cloneNode(true),
		c = b;
		while (b.firstChild) b = b.firstChild;
		jQuery.each(this.childNodes,
		function(i, node) {
			b.appendChild(node);
		});
		jQuery(this)
		.empty()
		.append(c);
	});
};

$.fn.stripnbsp = function() {
	this.each(function() {
		$(this).html(
			$(this).html().replace('&nbsp;',' ')
		);
	});
	return $(this);
}

// -------------------------------------------------------------------------------------------------
// Old joinlist functions
// -------------------------------------------------------------------------------------------------
function master_unsubscribe_confirm( el ) {
	if ( el.checked ) {
		var conf = confirm( "Are you sure you no longer want to receive any mailings from [platform]?" );
		if ( conf ) {
			var chks = document.getElementsByTagName('input');
			for ( var i=0; i<chks.length; i++ ) {
				if ( chks[i].type == 'checkbox' ) {
					chks[i].checked = false;
				}
			}
			el.checked = true;
		} else {
			el.checked = false;
		}
	}
}

function toggle_region( el ) {
	if ( el.checked ) {
		document.getElementById('region').checked = true;
	}
}

function resend_link( form ){
	document.getElementById('resend_confirmation').value = 1;
	form.submit();
}

// -------------------------------------------------------------------------------------------------
// Old dispute resolution functions
// -------------------------------------------------------------------------------------------------
function createInputFileFields(field_area,field,size,quantity_field_name) {
	var count = document.getElementById(quantity_field_name).value;

	if(document.createElement) {
		for( var i=1; i<=count; i++ ) {
			var li = document.createElement("li");
			var input = document.createElement("input");
			input.name = field+i;
			input.id = field+i;
			input.type = "file";
			input.size = size;
			input.className = "btn btn-default";
			li.appendChild(input);
			document.getElementById(field_area).appendChild(li);
		}
	}
}

function addField(field_area,field,size,quantity_field_name) {
	var field_area = document.getElementById(field_area);
	var input_file = field_area.getElementsByTagName("input");
	var count = input_file.length;

	if(document.createElement) {
		var li = document.createElement("li");
		var input = document.createElement("input");
		input.name = field+(count+1);
		input.id = field+(count+1);
		input.type = "file";
		input.size = size;
		input.className = "btn btn-default";
		li.appendChild(input);
		document.getElementById("fuploads").appendChild(li);

	}
	document.getElementById(quantity_field_name).value = count+1;
}

// -------------------------------------------------------------------------------------------------
// Execute on page load
// -------------------------------------------------------------------------------------------------
$(document).ready(function(){

	// -------------------------------------------------------------------------------------------------
	// Add classes for CSS styling
	// -------------------------------------------------------------------------------------------------
	$(".bbut").innerWrap("<span></span>");
	$(".transstatus").stripnbsp();
	$(".bigbut").innerWrap("<span></span>");

	// -------------------------------------------------------------------------------------------------
	// Allow text link to submit form
	// -------------------------------------------------------------------------------------------------
	$("#submit_subscriptions").click(function() {
		$("#joinlist").submit();
	});
	$("#newlink_subscriptions").click(function() {
		resend_link(this.form);
	});

	// -------------------------------------------------------------------------------------------------
	// Add print link Javascript
	// -------------------------------------------------------------------------------------------------
	$(".print_this").click(function() {
		window.print();
	});

	// -------------------------------------------------------------------------------------------------
	// Dispute resulution functions
	// -------------------------------------------------------------------------------------------------
	if ($("#missing").not(":checked").length) {
		$("#missing_quantity_holder").css("display","none");
	}
	$("#missing").click(function() {
		if ($("#missing").is(":checked")) {
			$("#missing_quantity_holder").slideDown();
		} else {
			$("#missing_quantity_holder").slideUp();
		}
	});

	// -------------------------------------------------------------------------------------------------
	// Personal information functions
	// -------------------------------------------------------------------------------------------------
	if ($("#countryTypeUS").is(":checked")) {
		$("#stateCA").css("display","none");
		$("#stateGB").css("display","none");
		$("#stateOTHER").css("display","none");
	}
	if ($("#countryTypeCA").is(":checked")) {
		$("#stateUS").css("display","none");
		$("#stateGB").css("display","none");
		$("#stateOTHER").css("display","none");
	}
	if ($("#countryTypeGB").is(":checked")) {
		$("#stateUS").css("display","none");
		$("#stateCA").css("display","none");
		$("#stateOTHER").css("display","none");
	}
	if ($("#countryTypeOTHER").is(":checked")) {
		$("#stateUS").css("display","none");
		$("#stateGB").css("display","none");
		$("#stateCA").css("display","none");
		$("#stateReq").css("display","none");
	}
	$("#countryTypeUS").click(function() {
		if ($("#countryTypeUS").is(":checked")) {
			$("#stateUS").show();
			$("#stateCA").hide();
			$("#stateGB").hide();
			$("#stateOTHER").hide();
			$("#stateReq").show();
		}
	});
	$("#countryTypeGB").click(function() {
		if ($("#countryTypeGB").is(":checked")) {
			$("#stateUS").hide();
			$("#stateCA").hide();
			$("#stateGB").show();
			$("#stateOTHER").hide();
			$("#stateReq").show();
		}
	});
	$("#countryTypeCA").click(function() {
		if ($("#countryTypeCA").is(":checked")) {
			$("#stateUS").hide();
			$("#stateCA").show();
			$("#stateGB").hide();
			$("#stateOTHER").hide();
			$("#stateReq").show();
		}
	});
	$("#countryTypeOTHER").click(function() {
		if ($("#countryTypeOTHER").is(":checked")) {
			$("#stateUS").hide();
			$("#stateCA").hide();
			$("#stateGB").hide();
			$("#stateOTHER").show();
			$("#stateReq").hide();
		}
	});

	// -------------------------------------------------------------------------------------------------
	// BUX Opt-Out function
	// -------------------------------------------------------------------------------------------------
	$("#bux_optout").click(function() {
		var url = "/api/v1/access//revoke?group_id=8";
		$.ajax({
			type: "GET",
			url: url,
			cache: false,
			dataType: "json",
			success: function() {
				window.location = "/account/main";
			},
			error: function(XMLHttpRequest, textStatus, errorThrown) {
				callback({
					error : [{
						status_code:XMLHttpRequest.status,
						errorText: textStatus,
						xmlrequest:XMLHttpRequest,
						status:"false"
					} ]
				} );
			}
		});
	});

});


//---------------------------------------------------------------------------------------------------------
// The Code below is added to handle credit card link in my account /profile/cc.tmpl
//---------------------------------------------------------------------------------------------------------

function cardCancelCC(){
	$('form').each(function(){
		this.reset();
	});
	$("#cardListDiv").show();
	$("#cardFormDiv").hide();
	$("#errorMsg").html("").hide();
}

function addCreditCard(login_id){
	var str = $(".uniForm").serialize();
	$('#card_add_cc').attr('disabled',true);
	$('#card_cancel_add').attr('disabled',true);
	Invoker.createCreditCard(login_id,str,function(data){
		var err_str = '<h3>Missing or Invalid Information</h3>';
		err_str += '<ol>';
		if(data.error){
			$('form').each(function(){
				this.reset();
			});
			while(data.error.length){
				err_str+='<li>'+data.error.shift().error_text+'</li>';
			}
			err_str += '</ol>';
			$("#errorMsg").html(err_str).show();
			$('#card_add_cc').attr('disabled',false);
			$('#card_cancel_add').attr('disabled',false);
		} else {
			window.location.href="/account/main?tab=Profile&subtab=cc";
		}
	});
}

function viewCardFrom(login_id){
	$("#cardListDiv").hide();
	$("#cardFormDiv").show();

	var months_str='';
	for(i=1;i<=12;i++){
		months_str+='<option value="'+i+'">'+i+'</option>';
	}
	$('#card_exp_month').html(months_str);

	var currentTime = new Date()
	var currentYear=currentTime.getFullYear();
	var currentYearPlus10=currentYear+10;
	var year_str='';
	while(currentYear<=currentYearPlus10){
		year_str+='<option value="'+currentYear+'">'+currentYear+'</option>';
		currentYear++;
	}
	$('#card_exp_year').html(year_str);

	Invoker.allAddressOfUser(login_id,function(data){
		var address_html='';
		if(data.result){
			var addcount = 1;
			while(data.result.length){
				var address_value=data.result.shift();
				address_html+='<div class="creditCardAddressDiv"><table><tr><td style="vertical-align:text-top; width:25px;">';
				address_html+='<input class="radio" type="radio" value="'+address_value.user_address.id;
				if(address_value.default_billing_location_flag != 0) {
					address_html+='" checked="checked';
				}
				address_html+='" name="address_id" id="address_id_'+addcount+'"/></td><td style="padding-top:3px;">'
				address_html+='<label for="address_id_'+addcount+'">';
				address_html+=address_value.address1+' (<a href="/account/main?tab=Profile&subtab=ad">Edit</a>)<br/>';
				if(address_value.address2) {
					address_html+=address_value.address2+'<br/>';
				}
				address_html+=address_value.city+', '+address_value.state+' '+address_value.postal_code+'<br/>';
				address_html+=address_value.country_code+'';
				address_html+='</label></td></tr></table></div>';
				addcount++;
			}
		address_html+='<p><a href="/account/main?tab=Profile&subtab=ad&do_address_new=++add++&addressType=BILL">Add a New Billing Address</a></p>';
		$('#address_div').html(address_html);
	}});
}
var Invoker;
if (!Invoker) { 
    Invoker = {};
}

var _LSIURL = window.location.protocol + '//' + window.location.host;
var _LSISECUREURL =  "https://" + window.location.host;
var _LSI_NORMAL_URL = _LSIURL;
Invoker.callCollectionAPI = function(url,collName,callback){
    url = _LSIURL + url+"?&_select=auctions";
    $.ajax({
        type:"GET",
        url: url,
        cache: false,
        dataType: "json",
        success: function(data) {
            callback(data,collName);
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {
            callback({
                error :[ {
                    status_code:XMLHttpRequest.status,
                    errorText: textStatus,
                    xmlrequest:XMLHttpRequest,
                    status:"false"
                }]
            },collName );
        }
    });
};

Invoker.addItemToWatchList = function(param,callback){
    var url = "/api/v1/watchlist//create";
    url = _LSIURL + url;
    $.ajax({
        type:"POST",
        data:param,
        url: url,
        cache: false,
        dataType: "json",
        success: function(data) {
            callback(data);
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {
            callback({
                error : [{
                    status_code:XMLHttpRequest.status,
                    errorText: textStatus,
                    xmlrequest:XMLHttpRequest,
                    status:"false"
                } ]
            } );
        }
    });
};

Invoker.createSavedSearch = function(param,callback){
    var url = "/api/v1/auction_saved_searches//create";
    url = _LSIURL + url;
    $.ajax({
        type:"POST",
        data:param,
        url: url,
        cache: false,
        dataType: "json",
        success: function(data) {
            callback(data);
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {
            callback({
                error : [{
                    status_code:XMLHttpRequest.status,
                    errorText: textStatus,
                    xmlrequest:XMLHttpRequest,
                    status:"false"
                } ]
            } );
        }
    });
};

Invoker.removeShipping = function(transaction_id,callback){
    var url = "/api/v1/transaction/"+transaction_id+"/removeshipping";
    url = _LSIURL + url;
    $.ajax({
        type:"GET",
        url: url,
        cache: false,
        dataType: "json",
        success: function(data) {
            callback(data);
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {
            callback({
                error : [{
                    status_code:XMLHttpRequest.status,
                    errorText: textStatus,
                    xmlrequest:XMLHttpRequest,
                    status:"false"
                } ]
            } );
        }
    });
};

Invoker.statesBasedOnCountry = function(country_code,callback){
    var url = "/api/v1/address//statecodes?_select="+country_code;
    url = _LSIURL + url;
    $.ajax({
        type:"GET",
        url: url,
        cache: false,
        dataType: "json",
        success: function(data) {
            callback(data);
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {
            callback({
                error : [{
                    status_code:XMLHttpRequest.status,
                    errorText: textStatus,
                    xmlrequest:XMLHttpRequest,
                    status:"false"
                } ]
            } );
        }
    });
};

Invoker.accessCheck = function(rule, callback){
    var url = "/api/v1/access//check?rule="+rule;
    url = _LSIURL + url;
    $.ajax({
        type:"GET",
        url: url,
        cache: false,
        dataType: "json",
        success: function(data) {
            callback(data);
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {
            callback({
                error : [{
                    status_code:XMLHttpRequest.status,
                    errorText: textStatus,
                    xmlrequest:XMLHttpRequest,
                    status:"false"
                } ]
            } );
        }
    });
};

Invoker.GetRecomendedAuctions = function(callback){
    var url = "/api/v1/collection_master//recommended"; //"/api/v1/collection_master/7?_select=title&_select=auctions"
    url = _LSIURL + url;
    $.ajax({
        type:"GET",
        url: url,
        cache: false,
        dataType: "json",
        success: function(data) {
            callback(data);
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {
            callback( {
                error : [ {
                    status_code:XMLHttpRequest.status,
                    errorText:
                    textStatus,
                    xmlrequest:XMLHttpRequest,
                    status:"false"
                }
                ]
            } );
        }
    });
};

Invoker.GetRecomendedLeftNav = function(params,callback){
    var url = "/api/v1/auction_search//narrow"; //"/api/v1/collection_master/7?_select=title&_select=auctions"
    url = _LSIURL + url;
    $.ajax({
        type:"GET",
        data:params,
        url: url,
        cache: false,
        dataType: "json",
        success: function(data) {
            callback(data);
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {
            callback( {
                error : [ {
                    status_code:XMLHttpRequest.status,
                    errorText:
                    textStatus,
                    xmlrequest:XMLHttpRequest,
                    status:"false"
                }
                ]
            } );
        }
    });
};

Invoker.GetAllAuctions = function(paramString, callback){
    var url = "/api/v1/auction_search//search?"+paramString;
    url = _LSIURL + url;
    $.ajax({
        type:"GET",
        url: url,
        cache: false,
        dataType: "json",
        success: function(data) {
            callback(data);
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {
            callback( {
                error : [ {
                    status_code:XMLHttpRequest.status,
                    errorText:
                    textStatus,
                    xmlrequest:XMLHttpRequest,
                    status:"false"
                }
                ]
            } );
        }
    });
};

Invoker.RemoveFromWatchlist = function(auction_id, obj, callback){
    var url = "/api/v1/watchlist/"+auction_id+"/delete"; //"/api/v1/collection_master/7?_select=title&_select=auctions"
    url = _LSIURL + url;
    $.ajax({
        type:"GET",
        url: url,
        cache: false,
        dataType: "json",
        success: function(data) {
            callback(data, obj);
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {
            callback( {
                error : [ {
                    status_code:XMLHttpRequest.status,
                    errorText:
                    textStatus,
                    xmlrequest:XMLHttpRequest,
                    status:"false"
                }
                ]
            } );
        }
    });
};


Invoker.setDefaultShippingFlag = function(address_id,callback){
    var url = "/api/v1/user_address/"+address_id+"/update";
    url = _LSIURL + url;
    $.ajax({
        type:"POST",
        data:"default_shipping_location_flag=1",
        url: url,
        dataType: "json",
        success: function(data) {
            callback(data);
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {
            callback({
                error : [{
                    status_code:XMLHttpRequest.status,
                    error_text: textStatus,
                    xmlrequest:XMLHttpRequest,
                    status:"false"
                } ]
            } );
        }
    });
};

Invoker.allAddressOfUser = function(user_id,callback){
    var url = "/api/v1/user_address//search?"+"user_id="+user_id+"&record_status=A";
    var params1="&_select=name&_select=address_type&_select=shipping_address_type_code&_select=state&_select=city&_select=postal_code";
    var params2="&_select=address1&_select=address2&_select=country_code&_select=default_billing_location_flag&_select=default_shipping_location_flag";
    url+=params1+params2;
    url = _LSIURL + url;
    $.ajax({
        type:"GET",
        url: url,
        cache: false,
        dataType: "json",
        success: function(data) {
            callback(data);
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {
            callback({
                error : [{
                    status_code:XMLHttpRequest.status,
                    error_text: textStatus,
                    xmlrequest:XMLHttpRequest,
                    status:"false"
                } ]
            } );
        }
    });
};

Invoker.createCreditCard = function(user_id,str,callback){
    var url = "/api/v1/creditcard//create";
    url =_LSIURL + url;
    $.ajax({
        type:"POST",
        data:str+'&user_id='+user_id,
        url: url,
        dataType: "json",
        success: function(data) {
            callback(data);
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {
            callback({
                error : [{
                    status_code:XMLHttpRequest.status,
                    error_text: textStatus,
                    xmlrequest:XMLHttpRequest,
                    status:"false"
                } ]
            } );
        }
    });
};

Invoker.bidBoxDataCall = function(auction_id,record_status,callback){
    var url ="/api/v1/auction_view/"+auction_id;
    url = _LSIURL + url;
	
    var params1="_select=current_bid&_select=next_bid&_select=close_time&_select=close_flag&_select=record_status&_select=auction_type_code&_select=offer_rate&_select=quantity";
    if(record_status!="SV"){ 
        params1=params1+ "&_select=price_per_unit";
    }
    var params2="&_select=retail_price&_select=buy_now_price&_select=number_of_bids&_select=number_of_lots_remaining&_select=auction_type_code&_select=open_time&_select=winner&_select=time_until_close&_select=close_time";
	
    $.ajax({
        type:"GET",
        data:params1+params2,
        url: url,
        cache: false,
        dataType: "json",
        success: function(data) {
             callback(data);
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {
            callback({
                error :[ {
                    status_code:XMLHttpRequest.status,
                    errorText: textStatus,
                    xmlrequest:XMLHttpRequest,
                    status:"false"
                }]
            } );
        }
    });
};

Invoker.loginAuth = function(params,callback){
    var url =  "/api/v1/user//login";
    url = _LSIURL + url;
    $.ajax({
        type:"POST",
        data:'username='+params.id+'&password='+params.pwd+'&page='+params.page,
        url: url,
        dataType: "json",
        success: function(data) {
            callback(data);
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {
            callback({
                error : [{
                    status_code:XMLHttpRequest.status,
                    error_text: textStatus,
                    xmlrequest:XMLHttpRequest,
                    status:"false"
                } ]
            } );
        }
    });
};

Invoker.userIdentify = function(callback){
	if ( Invoker.userIdentifyCalled != undefined )
		return;
	Invoker.userIdentifyCalled = true;

    var url ="/api/v1/user//identify?_select=premium_group";
    url = _LSIURL + url;
    $.ajax({
        type:"GET",
        url: url,
        cache: false,
        dataType: "json",
        success: function(data) {
            callback(data);
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {
            callback({
                error :[ {
                    status_code:XMLHttpRequest.status,
                    errorText: textStatus,
                    xmlrequest:XMLHttpRequest,
                    status:"false"
                }]
            } );
        }
    });
};

Invoker.carouselApi = function(url,callback){
    // var url ="/api/v1/user//identify";
    url = _LSIURL + url+"?_select=auctions";
    $.ajax({
        type:"GET",
        url: url,
        cache: false,
        dataType: "json",
        success: function(data) {
            callback(data);
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {
            callback({
                error :[ {
                    status_code:XMLHttpRequest.status,
                    errorText: textStatus,
                    xmlrequest:XMLHttpRequest,
                    status:"false"
                }]
            } );
        }
    });
}

Invoker.tabbedCarouselApi = function(category,callback){
    var url =_LSIURL + "/api/v1/collection_master//search?";
    for(var i=0;i<category.length;i++){
        url = url+"label="+category[i]+"&";
    }
    url=url+"record_status=A&_select=auctions&_select=title&_select=label";
    $.ajax({
        type:"GET",
        url: url,
        cache: false,
        dataType: "json",
        success: function(data) {
            callback(data);
        },
        error: function(XMLHttpRequest, textStatus, errorThrown) {
            callback({
                error :[ {
                    status_code:XMLHttpRequest.status,
                    errorText: textStatus,
                    xmlrequest:XMLHttpRequest,
                    status:"false"
                }]
            } );
        }
    });
}

Invoker.updateSignIn = function(identifyResponse) {
    var str_d;
    var premium_group = $.cookie('premium_group');
    if(identifyResponse.result && identifyResponse.result.username && !identifyResponse.result.error)
    {
        username=identifyResponse.result.username;
		premium_group = identifyResponse.result.premium_group;
        global_user_id=identifyResponse.result.user.id;
        str_d = Invoker.getSignDetails(username,global_user_id);
        if ( typeof str !== 'undefined' && str ) {
			var url_logged = "http://www.surveymonkey.com/s.aspx?sm=AS0aWR_2bPJoBQbTGp3RP2Bw_3d_3d&c="+identifyResponse.result.user.id;

			if(identifyResponse.result.username)
			{   $('#myAccountFooterLink').show();
				$("a.takesurvey").attr("href",url_logged);
			}        
        }
    }
    else if ( username = $.cookie('username') )
    {
    	str_d = Invoker.getSignDetails(username);
    }
    else
    {
    	str_d = Invoker.getSignDetails();
        if ( typeof str !== 'undefined' && str ) {
			$('#loginFooterLink').show();
			var url_not_logged = "http://www.surveymonkey.com/s.aspx?sm=AS0aWR_2bPJoBQbTGp3RP2Bw_3d_3d&c=nli";
			$("a.takesurvey").attr("href",url_not_logged);        
        }
    }
    $('#signDetails').html(str_d);
    
    /* display tabbed navigation for STR users */
	var lcomURI = document.location.href.replace(/\/direct\./,"/").replace(/\.com.*$/,".com");
	$("div#tabLCOM a").attr("href",lcomURI);	
		
	$('.auctionTabbedContainerHeader').show();
	var directURI = document.location.href.replace(/http:\/\/(www.)?/,"http://direct.").replace(/\.com.*$/,".com");
	$("#tabSTR a").attr("href",directURI);
};

Invoker.getSignDetails = function(username, user_id) {
	var details;
	var classtohide;
	var recommended_url = (typeof str !== 'undefined' && str) ? "/recommended.html" : "/bu/recommended.html";
	if ( username ) {
		if ( typeof str !== 'undefined' && str ) {
			details = 'Hello, ' + username + '! We have <a href="' + recommended_url + '">recommendations for you</a> | <a href="/logout">Sign Out</a>';
		} else {
			details =  '<span">Hello, ' + username + '! </span>' + '\n';
			details += '<div>We have <a href="' + recommended_url + '"><span>recommendations for you</span></a>.' + '\n';
			details += '<span> | </span>' + '\n';
			details += '<span><a href="/logout">Sign Out</a></span></div>' + '\n';
			$(function() {
				$('.footer-notloggedin').css('display','none');
				$('.nav.smaller > li:last-child').addClass('show-on-hover');
				$('.nav.smaller > li:last-child a').attr('href','/account/main?tab=Overview').html('My Account');
			});
		}
	} else if ( typeof str !== 'undefined' && str ) {
		details = "Hello!&nbsp;<a href='/login'>Sign in</a> for today's best deals, or <a href='/register'>register now</a>.";
	} else {
		details = "Welcome!&nbsp;<a href='/login'><span>Sign In</span></a>";
		$(function(){
			$('.footer-loggedin').css('display','none');
		});
	}
	return details;
};
$(document).ready(function() {
    myAccountInit();
	saveSearchInit();
});	


function myAccountInit(){
    $("div#myAccountLink").hover(function(){
        if(!$('div.myaccountList').is(':visible')){
            $("div.myaccountList").show();
            $("div.aboutUsLink").hide();
			$("div.buyLink").hide();
			$("div.sellLink").hide();
        }
    },function(){
        if($('div.myaccountList').is(':visible')){
            $("div.myaccountList").hide();
        }
        return false;
    });
	
    $("div#aboutUsLink").hover(function(){
        if(!$('div.aboutUsLink').is(':visible')){
            $("div.aboutUsLink").show();
        	$("div.myaccountList").hide();
			$("div.buyLink").hide();
			$("div.sellLink").hide();
        }
     } ,function(){
            if($('div.aboutUsLink').is(':visible')){
                $("div.aboutUsLink").hide();
            }
        return false;
    });
	 $("div#buyLink").hover(function(){
        if(!$('div.buyLink').is(':visible')){
            $("div.buyLink").show();
        	$("div.myaccountList").hide();
			$("div.aboutUsLink").hide();
			$("div.sellLink").hide();
        }
     } ,function(){
            if($('div.buyLink').is(':visible')){
                $("div.buyLink").hide();
            }
        return false;
    });
	$("div#sellLink").hover(function(){
        if(!$('div.sellLink').is(':visible')){
            $("div.sellLink").show();
        	$("div.myaccountList").hide();
			$("div.aboutUsLink").hide();
			$("div.buyLink").hide();
        }
     } ,function(){
            if($('div.sellLink').is(':visible')){
                $("div.sellLink").hide();
            }
        return false;
    });
}

function saveSearchInit(){
	$("a#saveSearchLink").click(function(){
		if($("div.saveSearchContainer").css('display') == "none"){
			$("div.saveSearchContainer").show();
		}else{
			$("div.saveSearchContainer").hide();
		}
		
	});

	$("div.closeSaveSearch").click(function(){
		$("div.saveSearchContainer").hide();
	});

}




var username;
Invoker.userIdentify(function(data){
	Invoker.updateSignIn(data);
});

var recommendedAuctions = {
	init: function(){
		// Display loading part
		Invoker.accessCheck("bux_recommendations", function(data){
	        if(!data.error){
	            if(data.result[0].access == 0){
	               window.location.href="/";
	            } else if(data.result[0].access == 1){
	            	// if access check granted do the rest
					Invoker.GetRecomendedAuctions(function(data){
						if(str){
						$("span.matchClass").text("Getting recommended listings...");
						}
						else
						{
							$("span.matchClass").text("Getting recommended auctions...");
						}
				        if(data.result && data.result.length>0){
				        	// pull the IDs from the recommended response and then 
				        	// do a search on those IDs.
				        	var auctionIdString = "auction_id="+data.result[0].auction_id;
				        	for(var i=1; i<data.result.length; i++){
								auctionIdString+= "&auction_id="+data.result[i].auction_id;
				        	}
				        	// Get all auctions now
							Invoker.GetAllAuctions(auctionIdString, function(data){
								if(data.result && data.result.length>0){
									
									$("span.countClass").text(data.result.length);
									if(str)
									{
										$("span.matchClass").text("Listings Found");
									}
									else
									{
										$("span.matchClass").text("Auctions Found");
									}	
									if(str)
									{
										var carouselTmpl = new EJS({ url: "/js/template/recommendedAuctionStr.js"});
									}
									else
									{
										var carouselTmpl = new EJS({ url: "/shared/bu/js/template/recommendedAuction.js"});
									}	
									var args = data;
                                    args.pageUrl = "/auction/search";
                                    args.pageUri ="query="+data.meta.query+"&_page="+data.page ;
									if(typeof currency_symbol!="undefined" && currency_symbol=="uk")
									{	
										args.CURRENCY_SYMBOL=unescape("%A3");	
									}
									else
									{
										args.CURRENCY_SYMBOL="$";	
									}
									
									var carousel_content = carouselTmpl.render({ "item" : data.result,"response":args});
									$('div#rContent').empty().append(carousel_content);
									if(!str)
									{
										sellerCredibility.init();//added for seller-popup
									}	
									
									// attach watchlist icon
									$('a.itemWatchIcon').hover(function(){
									   $(this).next().fadeIn("medium");
									},function(){
									   $(this).next().fadeOut("medium");
									});
                                    $('div.itemWatch').hover(function(){
									   $(this).find('div').fadeIn("medium");
									},function(){
									   $(this).find('div').fadeOut("medium");
									});
								}else{
									$("span.countClass").text(0);
									if(str)
									{
										$("span.matchClass").text("Listings Found");
									}
									else
									{
										$("span.matchClass").text("Auctions Found");
									}
								}
							});
				        }else{
				        	$("span.countClass").text(0);
									if(str)
									{
										$("span.matchClass").text("Listings Found");
									}
									else
									{
										$("span.matchClass").text("Auctions Found");
									}
				        }
				    });
	            }
	        } else {
	        	
	        }
	    });
	},
	getUserId: function(){
		//
	}
}
function validate_search (form) {
    var url = form.action+"?cmd=keyword";
    var value = '';
    if(form.words.value=="-- Search --")
        form.words.value="";
    if(isBlank(form.words.value) && isBlank(getSelectField(form.location)) && isBlank(getSelectField(form.item_condition)) && isBlank(getSelectField(form.category1)))
        return false;

    url += (!isBlank(form.words.value)) ? '&words=' + form.words.value : '';
    url += (!isBlank(value = getSelectField(form.location))) ? '&location=' + value : '';
    url += (!isBlank(value = getSelectField(form.item_condition))) ? '&condition_' + value + '=1' : '';
    url += (!isBlank(value = getSelectField(form.category1))) ? '&category1=' + value : '';
    window.location = url;
    return false;
}

function getSelectField (field) {
  return field.value;
}

function isBlank (s) {
 for (var i = 0; i < s.length; i++) {
	 var c = s.charAt(i);
	 if ((c != ' ') && (c != '\n') && (c != '\t')) return false;
 }

 return true;
}

function validate_advSearch(form){
	if(form.words && form.words.value == "-- Search --")
		form.words.value= "";
    if(form.seller && form.seller.value == "-- Name --")
        form.seller.value = "";
    if(form.auction_id && form.auction_id.value == "-- Number --")
        form.auction_id.value = "";
    if(form.words.value!=""){
    	form.words.value = (form.words.value).replace('&','%26');
    }
    $("#advSearch").trigger('submit');
    return true;
}

function saveSearch(isloggedIn,search_param,search_query){
    isloggedIn = isloggedIn?isloggedIn:global_user_id;
   // if(search_param.search_name=="")
    if(!isSTR()){
	search_param.flag="new";
	}
    search_param.search_name=$('#saveSearchText').val();
    search_param.frequency=$('#saveSearchType .autowrapSpan').text();
	if(search_param.email_flag=="")
	search_param.email_flag=$('#runSearchCheck').attr("checked")?1:0;
	if(search_param.search_name == "")
		return;
    $('input.saveBtn').css({"background":"transparent url(/shared/bu/images/add_watchlist_loading.gif) no-repeat scroll 0 0"});
    if(isloggedIn){
        if(search_param.user_id == "")search_param.user_id = global_user_id;
        Invoker.createSavedSearch(search_param,function(data){
			if(!data.error){
				$('div.saveSearchContainer').hide();
				$('ul#saveSearch').find('li').html("<div class='saveSearchSuccess'>Search saved successfully to <a href='/account/main?tab=SearchAgent'>My Account</a></div>");
			}else{
				$('div.saveSearchContainer').hide();
				var el=$('ul#saveSearch').find('li').html();
				$('ul#saveSearch').find('li').html("<div class='saveSearchFailure'>Save was unsuccessful,Please try again</div>");
				setTimeout(function(){
                   $('.saveSearchFailure').fadeOut("slow",function(){
                      $('.saveSearchFailure').before(el).remove();
					  $("a#saveSearchLink").click(function(){
						if($("div.saveSearchContainer").css('display') == "none"){
							$("div.saveSearchContainer").show();
						}else{
							$("div.saveSearchContainer").hide();
						}

	});
                   });
                },2000);
			}
		});
	}else{
        var url = location.pathname+"?query="+search_query+"&search_name="+search_param.search_name+"&email_flag="+search_param.email_flag+"&_page="+search_param.page+"&sort="+search_param.sort+"&ascending="+search_param.ascending+"&isSaveSearch=true";
		if(!isSTR()) url+="&flag=new"
        window.location.href = "/login?page="+escape(url);
    }
}

function toggleView(){
	if($("#imgMorelink").attr("src")=="/shared/bu/images/sorting-icon_up.png"){
		$("#imgMorelink").attr("src","/shared/bu/images/sorting-icon_down.png");
		$("#aMorelink").html("More Sellers");
	}else {
		$("#imgMorelink").attr("src","/shared/bu/images/sorting-icon_up.png");
		$("#aMorelink").html("Less Sellers");
	}
	$('.hidden').toggle();
	return false;
}

        function adjusttabs() {
          $('.tab .tabNavMiddle').css({'padding-left':'0','padding-right':'0'});
          var totalWidth = $("div.tabContainer").attr("offsetWidth");
          var occupiedWidth = 0;
          var noofTabs = 0;
          $("div.tab").each(function(){
              noofTabs++;
             occupiedWidth+= $(this).attr("offsetWidth")
          });
          var availableWidth = totalWidth - occupiedWidth -(noofTabs * 1);      // 1px for the margin  + 10 px for left and right
          var paddingLeft = Math.floor(availableWidth / (noofTabs *2));
          var paddingRight = Math.floor(availableWidth / (noofTabs *2));
          occupiedWidth = 0;
          $("div.tab div.middle:not(div.tab div.middle:last)").each(function(){
            $(this).css({"padding-left": paddingLeft,"padding-right":paddingRight});
            occupiedWidth += $(this).attr("offsetWidth");
          });
          availableWidth = totalWidth - occupiedWidth - $("div.tab:last").attr("offsetWidth") -((noofTabs-1 ) * 11); // 1px for the margin
          paddingLeft = Math.floor(availableWidth / 2);
          paddingRight = Math.floor(availableWidth / 2);
          $("div.tab div.middle:last").css({"padding-left": paddingLeft,"padding-right":paddingRight});
		  $("div.tab:last").css({"margin-right":0});
      }
        $(document).ready(function(){
           // adjusttabs();
        });
    String.prototype.escapeHTML = function(){
    var result = "";
    for(var i = 0; i < this.length; i++){
        if(this.charAt(i) == "&"
              && this.length-i-1 >= 4
              && this.substr(i, 4) != "&amp;"){
            result = result + "&amp;";
        } else if(this.charAt(i)== "<"){
            result = result + "&lt;";
        } else if(this.charAt(i)== ">"){
            result = result + "&gt;";
        }  else if(this.charAt(i)== "$"){
            result = result + "&#36;";
        } else {
            result = result + this.charAt(i);
        }
    }
    return result;
};

function escapeHTML(str) {
    var div = document.createElement('div');
    var text = document.createTextNode(str);
    div.appendChild(text);
    return div.innerHTML;
}

function unescapeHTML(str) {
    var div = document.createElement('div');
    div.innerHTML = str.replace(/<\/?[^>]+>/gi, '');
    return div.childNodes[0] ? div.childNodes[0].nodeValue : '';
}
$.fn.autoEllipsis = function(text, options) {
    if (!options) options = {};
    var elements = $(this);
    var lines = options.lines || 1;
    var truncationChr = options.trucationChar || "&#x2026;";
    var showTitle = options.showTitle || true;
    $.each(elements, function() {
        var element = $(this);
        var width = options.width || element.attr("offsetWidth") - element.getPadding("right") - element.getPadding("left");
        var eleHeight = options.height || element.attr("offsetHeight");
        var originalText = text || element.html();
        originalText = unescapeHTML(originalText);
        element.html("");
        var mySpan = document.createElement("span");
        mySpan = $(mySpan).addClass("autowrapSpan");
        element.append(mySpan);
        mySpan.html('<span>' + escapeHTML(originalText) + '</span>');
        if (mySpan.attr("offsetWidth") > width || (eleHeight > 0 && mySpan.attr("offsetHeight") > eleHeight)) {
            var displayText = originalText;
            mySpan.html('');
            for (var x = 0; (lines == 0 || x < lines); x++) {
                if (x > 0) {
                    mySpan.append("<br/>");
                }
                var newspan = document.createElement("span");
                newspan = $(newspan);
                mySpan.append(newspan);
                var i = 1;
                var thisLine = displayText;
                newspan.html(escapeHTML(thisLine));
                i = displayText.length * width / newspan.attr("offsetWidth");
                thisLine = displayText.substr(0, i);
                newspan.html(escapeHTML(thisLine));
                if (newspan.attr("offsetWidth") > width) {
                    while (newspan.attr("offsetWidth") > width && i > 0) {
                        thisLine = displayText.substr(0, i);
                        i--;
                        newspan.html(escapeHTML(thisLine));
                    }
                } else {
                while (newspan.attr("offsetWidth") <= width && i <= displayText.length) {
                    thisLine = displayText.substr(0, i);
                    i++;
                    newspan.html(escapeHTML(thisLine));
                }
            }
            if (newspan.attr("offsetWidth") > width) {
                thisLine = thisLine.substr(0, thisLine.length - 1);
                newspan.html(escapeHTML(thisLine));
            }
            displayText = displayText.substr(thisLine.length, displayText.length);
            if (displayText.length == 0 || thisLine.length == 0) {
                break;
            }
        }
        if (truncationChr != null && displayText != '') {
            var beforeTruncation = thisLine;
            newspan.html(escapeHTML(thisLine) + truncationChr);
            while (newspan.attr("offsetWidth") > width) {
                if (thisLine.length - 1 < 0) {
                    newspan.html(escapeHTML(beforeTruncation));
                    break;
                }
                thisLine = thisLine.substr(0, thisLine.length - 1);
                newspan.html(escapeHTML(thisLine) + truncationChr);
            }
        }
    } else {
    element.innerHTML = originalText;
}
if (showTitle) {
    element.attr("title",originalText);
}
});
};

$.fn.autoEllipsisByWord = function(text, options) {
    if(typeof text == "object"){
        options = text;
        text = '';
    }
    if (!options) options = {};
    var elements = $(this);
    var lines = options.lines || 1;
    var truncationChr = options.trucationChar || "&#x2026;";
    var showTitle = options.showTitle || true;
    $.each(elements, function() {
        var element = $(this);
        var width = options.width || element.width() - element.getPadding("right") - element.getPadding("left");
        var eleHeight = options.height || element.attr("offsetHeight");
        var originalText = text || element.html();
        originalText = unescapeHTML(originalText);
        element.html("");
        var mySpan = $('<span class="autowrapSpan"></span>');
        element.append(mySpan);
        mySpan.html('<span>' + originalText.escapeHTML() + '</span>');
        if (mySpan.width() > width || (eleHeight > 0 && mySpan.height() > eleHeight)) {
            var displayText = originalText;
            mySpan.html('');
            for (var x = 0; (lines == 0 || x < lines); x++) {
                if (x > 0) {
                    mySpan.append("<br/>");
                }
                var newspan = $("<span/>");
                mySpan.append(newspan);
                var i = 1;
                var thisLine = displayText;
                newspan.html(thisLine.escapeHTML());
                var tempStr = '';
                if (newspan.width() > width) {
	                i = displayText.length * width / newspan.width();
					thisLine = displayText.substr(0, i);
					thisLine = thisLine.substr(0,thisLine.lastIndexOf(' '));
					i = thisLine.length;
					newspan.html(thisLine.escapeHTML());
                    while (newspan.width() > width && i > 0) {
                        tempStr = displayText.substr(0, i);
                        var strEnd = tempStr.lastIndexOf(' ') > tempStr.lastIndexOf('-') ? tempStr.lastIndexOf(' ') : tempStr.lastIndexOf('-');
                        thisLine = tempStr.substr(0,strEnd);
                        i = thisLine.length;
                        newspan.html(thisLine.escapeHTML());
                    }
                } else {
                    while (newspan.width() <= width && i <= displayText.length) {
                        tempStr = displayText.substr(thisLine.length+1, displayText.length);
	                    var index = tempStr.indexOf(' ') != -1 ? tempStr.indexOf(' ') : tempStr.length;
	                    thisLine += " "+tempStr.substr(0, index);
                        i = thisLine.length;
                        newspan.html(thisLine.escapeHTML());
                    }
                }
                if (newspan.width() > width) {
                    thisLine = thisLine.substr(0, thisLine.lastIndexOf(' '));
                    newspan.html(thisLine.escapeHTML());
                }
                displayText = displayText.substr(thisLine.length+1, displayText.length);
                if (displayText.length == 0 || thisLine.length == 0) {
                    break;
                }
            }
            if (truncationChr != null && displayText != '') {
                var beforeTruncation = thisLine;
                newspan.html(thisLine.escapeHTML() + truncationChr);
                while (newspan.width() > width) {
                    if (thisLine.length - 1 < 0) {
                        newspan.html(beforeTruncation.escapeHTML());
                        break;
                    }
                    thisLine = thisLine.substr(0, thisLine.lastIndexOf(' '));
                    newspan.html(thisLine.escapeHTML() + truncationChr);
                }
            }
        } else {
            element.innerHTML = originalText;
        }
        if (showTitle) {
            element.attr("title", originalText);
        }
    });
};

$.fn.getPadding = function(side) {
    var paddingStr = $(this).css("padding-" + side);
    if (paddingStr.indexOf("px") != -1) {
        paddingStr = paddingStr.substr(0, paddingStr.length - 2);
        return parseInt(paddingStr);
    }
    return 0;
};
(function(){


var rsplit = function(string, regex) {
	var result = regex.exec(string),retArr = new Array(), first_idx, last_idx, first_bit;
	while (result != null)
	{
		first_idx = result.index; last_idx = regex.lastIndex;
		if ((first_idx) != 0)
		{
			first_bit = string.substring(0,first_idx);
			retArr.push(string.substring(0,first_idx));
			string = string.slice(first_idx);
		}
		retArr.push(result[0]);
		string = string.slice(result[0].length);
		result = regex.exec(string);
	}
	if (! string == '')
	{
		retArr.push(string);
	}
	return retArr;
},
chop =  function(string){
    return string.substr(0, string.length - 1);
},
extend = function(d, s){
    for(var n in s){
        if(s.hasOwnProperty(n))  d[n] = s[n]
    }
}


EJS = function( options ){
	options = typeof options == "string" ? {view: options} : options
    this.set_options(options);
	if(options.precompiled){
		this.template = {};
		this.template.process = options.precompiled;
		EJS.update(this.name, this);
		return;
	}
    if(options.element)
	{
		if(typeof options.element == 'string'){
			var name = options.element
			options.element = document.getElementById(  options.element )
			if(options.element == null) throw name+'does not exist!'
		}
		if(options.element.value){
			this.text = options.element.value
		}else{
			this.text = options.element.innerHTML
		}
		this.name = options.element.id
		this.type = '['
	}else if(options.url){
        options.url = EJS.endExt(options.url, this.extMatch);
		this.name = this.name ? this.name : options.url;
        var url = options.url
        //options.view = options.absolute_url || options.view || options.;
		var template = EJS.get(this.name /*url*/, this.cache);
		if (template) return template;
	    if (template == EJS.INVALID_PATH) return null;
        try{
            this.text = EJS.request( url+(this.cache ? '' : '?'+Math.random() ));
        }catch(e){}

		if(this.text == null){
            throw( {type: 'EJS', message: 'There is no template at '+url}  );
		}
		//this.name = url;
	}
	var template = new EJS.Compiler(this.text, this.type);

	template.compile(options, this.name);


	EJS.update(this.name, this);
	this.template = template;
};
/* @Prototype*/
EJS.prototype = {
	/**
	 * Renders an object with extra view helpers attached to the view.
	 * @param {Object} object data to be rendered
	 * @param {Object} extra_helpers an object with additonal view helpers
	 * @return {String} returns the result of the string
	 */
    render : function(object, extra_helpers){
        object = object || {};
        this._extra_helpers = extra_helpers;
		var v = new EJS.Helpers(object, extra_helpers || {});
		return this.template.process.call(object, object,v);
	},
    update : function(element, options){
        if(typeof element == 'string'){
			element = document.getElementById(element)
		}
		if(options == null){
			_template = this;
			return function(object){
				EJS.prototype.update.call(_template, element, object)
			}
		}
		if(typeof options == 'string'){
			params = {}
			params.url = options
			_template = this;
			params.onComplete = function(request){
				var object = eval( request.responseText )
				EJS.prototype.update.call(_template, element, object)
			}
			EJS.ajax_request(params)
		}else
		{
			element.innerHTML = this.render(options)
		}
    },
	out : function(){
		return this.template.out;
	},
    /**
     * Sets options on this view to be rendered with.
     * @param {Object} options
     */
	set_options : function(options){
        this.type = options.type || EJS.type;
		this.cache = options.cache != null ? options.cache : EJS.cache;
		this.text = options.text || null;
		this.name =  options.name || null;
		this.ext = options.ext || EJS.ext;
		this.extMatch = new RegExp(this.ext.replace(/\./, '\.'));
	}
};
EJS.endExt = function(path, match){
	if(!path) return null;
	match.lastIndex = 0
	return path+ (match.test(path) ? '' : this.ext )
}




/* @Static*/
EJS.Scanner = function(source, left, right) {

    extend(this,
        {left_delimiter: 	left +'%',
         right_delimiter: 	'%'+right,
         double_left: 		left+'%%',
         double_right:  	'%%'+right,
         left_equal: 		left+'%=',
         left_comment: 	left+'%#'})

	this.SplitRegexp = left=='[' ? /(\[%%)|(%%\])|(\[%=)|(\[%#)|(\[%)|(%\]\n)|(%\])|(\n)/ : new RegExp('('+this.double_left+')|(%%'+this.double_right+')|('+this.left_equal+')|('+this.left_comment+')|('+this.left_delimiter+')|('+this.right_delimiter+'\n)|('+this.right_delimiter+')|(\n)') ;

	this.source = source;
	this.stag = null;
	this.lines = 0;
};

EJS.Scanner.to_text = function(input){
	if(input == null || input === undefined)
        return '';
    if(input instanceof Date)
		return input.toDateString();
	if(input.toString)
        return input.toString();
	return '';
};

EJS.Scanner.prototype = {
  scan: function(block) {
     scanline = this.scanline;
	 regex = this.SplitRegexp;
	 if (! this.source == '')
	 {
	 	 var source_split = rsplit(this.source, /\n/);
	 	 for(var i=0; i<source_split.length; i++) {
		 	 var item = source_split[i];
			 this.scanline(item, regex, block);
		 }
	 }
  },
  scanline: function(line, regex, block) {
	 this.lines++;
	 var line_split = rsplit(line, regex);
 	 for(var i=0; i<line_split.length; i++) {
	   var token = line_split[i];
       if (token != null) {
		   	try{
	         	block(token, this);
		 	}catch(e){
				throw {type: 'EJS.Scanner', line: this.lines};
			}
       }
	 }
  }
};


EJS.Buffer = function(pre_cmd, post_cmd) {
	this.line = new Array();
	this.script = "";
	this.pre_cmd = pre_cmd;
	this.post_cmd = post_cmd;
	for (var i=0; i<this.pre_cmd.length; i++)
	{
		this.push(pre_cmd[i]);
	}
};
EJS.Buffer.prototype = {

  push: function(cmd) {
	this.line.push(cmd);
  },

  cr: function() {
	this.script = this.script + this.line.join('; ');
	this.line = new Array();
	this.script = this.script + "\n";
  },

  close: function() {
	if (this.line.length > 0)
	{
		for (var i=0; i<this.post_cmd.length; i++){
			this.push(pre_cmd[i]);
		}
		this.script = this.script + this.line.join('; ');
		line = null;
	}
  }

};


EJS.Compiler = function(source, left) {
    this.pre_cmd = ['var ___ViewO = [];'];
	this.post_cmd = new Array();
	this.source = ' ';
	if (source != null)
	{
		if (typeof source == 'string')
		{
		    source = source.replace(/\r\n/g, "\n");
            source = source.replace(/\r/g,   "\n");
			this.source = source;
		}else if (source.innerHTML){
			this.source = source.innerHTML;
		}
		if (typeof this.source != 'string'){
			this.source = "";
		}
	}
	left = left || '<';
	var right = '>';
	switch(left) {
		case '[':
			right = ']';
			break;
		case '<':
			break;
		default:
			throw left+' is not a supported deliminator';
			break;
	}
	this.scanner = new EJS.Scanner(this.source, left, right);
	this.out = '';
};
EJS.Compiler.prototype = {
  compile: function(options, name) {
  	options = options || {};
	this.out = '';
	var put_cmd = "___ViewO.push(";
	var insert_cmd = put_cmd;
	var buff = new EJS.Buffer(this.pre_cmd, this.post_cmd);
	var content = '';
	var clean = function(content)
	{
	    content = content.replace(/\\/g, '\\\\');
        content = content.replace(/\n/g, '\\n');
        content = content.replace(/"/g,  '\\"');
        return content;
	};
	this.scanner.scan(function(token, scanner) {
		if (scanner.stag == null)
		{
			switch(token) {
				case '\n':
					content = content + "\n";
					buff.push(put_cmd + '"' + clean(content) + '");');
					buff.cr();
					content = '';
					break;
				case scanner.left_delimiter:
				case scanner.left_equal:
				case scanner.left_comment:
					scanner.stag = token;
					if (content.length > 0)
					{
						buff.push(put_cmd + '"' + clean(content) + '")');
					}
					content = '';
					break;
				case scanner.double_left:
					content = content + scanner.left_delimiter;
					break;
				default:
					content = content + token;
					break;
			}
		}
		else {
			switch(token) {
				case scanner.right_delimiter:
					switch(scanner.stag) {
						case scanner.left_delimiter:
							if (content[content.length - 1] == '\n')
							{
								content = chop(content);
								buff.push(content);
								buff.cr();
							}
							else {
								buff.push(content);
							}
							break;
						case scanner.left_equal:
							buff.push(insert_cmd + "(EJS.Scanner.to_text(" + content + ")))");
							break;
					}
					scanner.stag = null;
					content = '';
					break;
				case scanner.double_right:
					content = content + scanner.right_delimiter;
					break;
				default:
					content = content + token;
					break;
			}
		}
	});
	if (content.length > 0)
	{
		// Chould be content.dump in Ruby
		buff.push(put_cmd + '"' + clean(content) + '")');
	}
	buff.close();
	this.out = buff.script + ";";
	var to_be_evaled = '/*'+name+'*/this.process = function(_CONTEXT,_VIEW) { try { with(_VIEW) { with (_CONTEXT) {'+this.out+" return ___ViewO.join('');}}}catch(e){e.lineNumber=null;throw e;}};";

	try{
		eval(to_be_evaled);
	}catch(e){
		if(typeof JSLINT != 'undefined'){
			JSLINT(this.out);
			for(var i = 0; i < JSLINT.errors.length; i++){
				var error = JSLINT.errors[i];
				if(error.reason != "Unnecessary semicolon."){
					error.line++;
					var e = new Error();
					e.lineNumber = error.line;
					e.message = error.reason;
					if(options.view)
						e.fileName = options.view;
					throw e;
				}
			}
		}else{
			throw e;
		}
	}
  }
};


//type, cache, folder
/**
 * Sets default options for all views
 * @param {Object} options Set view with the following options
 * <table class="options">
				<tbody><tr><th>Option</th><th>Default</th><th>Description</th></tr>
				<tr>
					<td>type</td>
					<td>'<'</td>
					<td>type of magic tags.  Options are '&lt;' or '['
					</td>
				</tr>
				<tr>
					<td>cache</td>
					<td>true in production mode, false in other modes</td>
					<td>true to cache template.
					</td>
				</tr>
	</tbody></table>
 *
 */
EJS.config = function(options){
	EJS.cache = options.cache != null ? options.cache : EJS.cache;
	EJS.type = options.type != null ? options.type : EJS.type;
	EJS.ext = options.ext != null ? options.ext : EJS.ext;

	var templates_directory = EJS.templates_directory || {}; //nice and private container
	EJS.templates_directory = templates_directory;
	EJS.get = function(path, cache){
		if(cache == false) return null;
		if(templates_directory[path]) return templates_directory[path];
  		return null;
	};

	EJS.update = function(path, template) {
		if(path == null) return;
		templates_directory[path] = template ;
	};

	EJS.INVALID_PATH =  -1;
};
EJS.config( {cache: true, type: '<', ext: '.js' } );



/**
 * @constructor
 * By adding functions to EJS.Helpers.prototype, those functions will be available in the
 * views.
 * @init Creates a view helper.  This function is called internally.  You should never call it.
 * @param {Object} data The data passed to the view.  Helpers have access to it through this._data
 */
EJS.Helpers = function(data, extras){
	this._data = data;
    this._extras = extras;
    extend(this, extras );
};
/* @prototype*/
EJS.Helpers.prototype = {
    /**
     * Renders a new view.  If data is passed in, uses that to render the view.
     * @param {Object} options standard options passed to a new view.
     * @param {optional:Object} data
     * @return {String}
     */
	view: function(options, data, helpers){
        if(!helpers) helpers = this._extras
		if(!data) data = this._data;
		return new EJS(options).render(data, helpers);
	},
    /**
     * For a given value, tries to create a human representation.
     * @param {Object} input the value being converted.
     * @param {Object} null_text what text should be present if input == null or undefined, defaults to ''
     * @return {String}
     */
	to_text: function(input, null_text) {
	    if(input == null || input === undefined) return null_text || '';
	    if(input instanceof Date) return input.toDateString();
		if(input.toString) return input.toString().replace(/\n/g, '<br />').replace(/''/g, "'");
		return '';
	}
};
    EJS.newRequest = function(){
	   var factories = [function() { return new ActiveXObject("Msxml2.XMLHTTP"); },function() { return new XMLHttpRequest(); },function() { return new ActiveXObject("Microsoft.XMLHTTP"); }];
	   for(var i = 0; i < factories.length; i++) {
	        try {
	            var request = factories[i]();
	            if (request != null)  return request;
	        }
	        catch(e) { continue;}
	   }
	}

	EJS.request = function(path){
	   var request = new EJS.newRequest()
	   request.open("GET", path, false);

	   try{request.send(null);}
	   catch(e){return null;}

	   if ( request.status == 404 || request.status == 2 ||(request.status == 0 && request.responseText == '') ) return null;

	   return request.responseText
	}
	EJS.ajax_request = function(params){
		params.method = ( params.method ? params.method : 'GET')

		var request = new EJS.newRequest();
		request.onreadystatechange = function(){
			if(request.readyState == 4){
				if(request.status == 200){
					params.onComplete(request)
				}else
				{
					params.onComplete(request)
				}
			}
		}
		request.open(params.method, params.url)
		request.send(null)
	}


})();/*##############################################################################
#    ____________________________________________________________________
#   /                                                                    \
#  |               ____  __      ___          _____  /     ___    ___     |
#  |     ____       /  \/  \  ' /   \      / /      /__   /   \  /   \    |
#  |    / _  \     /   /   / / /    /  ___/  \__   /     /____/ /    /    |
#  |   / |_  /    /   /   / / /    / /   /      \ /     /      /____/     |
#  |   \____/    /   /    \/_/    /  \__/  _____/ \__/  \___/ /           |
#  |                                                         /            |
#  |                                                                      |
#  |   Copyright (c) 2007                             MindStep SCOP SARL  |
#  |   Herve Masson                                                       |
#  |                                                                      |
#  |      www.mindstep.com                              www.mjslib.com    |
#  |   info-oss@mindstep.com                           mjslib@mjslib.com  |
#   \____________________________________________________________________/
#
#  Version: 1.0.0
#
#  (Svn version: $Id$)
#
#----------[This product is distributed under a BSD license]-----------------
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that the following conditions
#  are met:
#
#     1. Redistributions of source code must retain the above copyright
#        notice, this list of conditions and the following disclaimer.
#
#     2. Redistributions in binary form must reproduce the above copyright
#        notice, this list of conditions and the following disclaimer in
#        the documentation and/or other materials provided with the
#        distribution.
#
#  THIS SOFTWARE IS PROVIDED BY THE MINDSTEP CORP PROJECT ``AS IS'' AND
#  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,
#  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
#  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL MINDSTEP CORP OR CONTRIBUTORS
#  BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY,
#  OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
#  OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
#  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
#  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
#  OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
#  EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
#  The views and conclusions contained in the software and documentation
#  are those of the authors and should not be interpreted as representing
#  official policies, either expressed or implied, of MindStep Corp.
#
################################################################################
#
#	This is a jQuery [jquery.com] plugin that implements printf' like functions
#	(Examples and documentation at: http://mjslib.com)
#
#	@author: Herve Masson
#	@version: 1.0.0 (8/27/2007)
#	@requires jQuery v1.1.2 or later
#
#	(Based on the legacy mjslib.org framework)
#
##############################################################################*/

(function($) {

	/*
	**	Just an equivalent of the corresponding libc function
	**
	**	var str=jQuery.sprintf("%010d %-10s",intvalue,strvalue);
	**
	*/

	$.sprintf=function(fmt)
	{
		return _sprintf_(fmt,arguments,1);
	}


	/*
	**	vsprintf takes an argument list instead of a list of arguments (duh!)
	**	(useful when forwarding parameters from one of your functions to a printf call)
	**
	**	str=jQuery.vsprintf(parameters[,offset]);
	**
	**		The 'offset' value, when present, instructs vprintf to start at the
	**		corresponding index in the parameter list instead, of 0
	**
	**	Example 1:
	**
	**		function myprintf(<printf like arguments>)
	**		{
	**			var str=jQuery.vsprintf(arguments);
	**			..
	**		}
	**		myprintf("illegal value : %s",somevalue);
	**
	**
	**	Example 2:
	**
	**		function logit(level,<the rest is printf like arguments>)
	**		{
	**			var str=jQuery.vsprintf(arguments,1);	// Skip prm #1
	**			..
	**		}
	**		logit("error","illegal value : %s",somevalue);
	**
	*/

	$.vsprintf=function(args,offset)
	{
		if(offset === undefined)
		{
			offset=0;
		}
		return _sprintf_(args[offset],args,offset+1);
	}


	/*
	**	logging using formatted messages
	**	================================
	**
	**	If you _hate_ debugging with alert() as much as I do, you might find the
	**	following routines valuable.
	**
	**	jQuery.alertf("The variable 'str' contains: '%s'",str);
	**		Show an alert message with a printf-like argument.
	**
	**	jQuery.logf("This is a log message, time is: %d",(new Date()).getTime());
	**		Log the message on the console with the info level
	**
	**	jQuery.errorf("The given value (%d) is erroneous",avalue);
	**		Log the message on the console with the error level
	**
	*/

	$.alertf=function()
	{
		return alert($.vsprintf(arguments));
	}

	$.vlogf=function(args)
	{
		if("console" in window)
		{
			console.info($.vsprintf(args));
		}
	}

	$.verrorf=function(args)
	{
		if("console" in window)
		{
			console.error($.vsprintf(args));
		}
	}

	$.errorf=function()
	{
		$.verrorf(arguments);
	}

	$.logf=function()
	{
		$.vlogf(arguments);
	}


	/*-------------------------------------------------------------------------------------------
	**
	**	Following code is private; don't use it directly !
	**
	**-----------------------------------------------------------------------------------------*/

	FREGEXP	= /^([^%]*)%([-+])?(0)?(\d+)?(\.(\d+))?([doxXcsf])(.*)$/;
	HDIGITS	= ["0","1","2","3","4","5","6","7","8","9","a","b","c","d","e","f"];

	function _empty(str)
	{
		if(str===undefined || str===null)
		{
			return true;
		}
		return (str == "") ? true : false;
	}

	function _int_(val)
	{
		return Math.floor(val);
	}

	function _printf_num_(val,base,pad,sign,width)
	{
		val=parseInt(val,10);
		if(isNaN(val))
		{
			return "NaN";
		}
		aval=(val<0)?-val:val;
		var ret="";

		if(aval==0)
		{
			ret="0";
		}
		else
		{
			while(aval>0)
			{
				ret=HDIGITS[aval%base]+ret;
				aval=_int_(aval/base);
			}
		}
		if(val<0)
		{
			ret="-"+ret;
		}
		if(sign=="-")
		{
			pad=" ";
		}
		return _printf_str_(ret,pad,sign,width,-1);
	}

	function _printf_float_(val,base,pad,sign,prec)
	{
		if(prec==undefined)
		{
			if(parseInt(val) != val)
			{
				// No decimal part and no precision -> use int formatting
				return ""+val;
			}
			prec=5;
		}

		var p10=Math.pow(10,prec);
		var ival=""+Math.round(val*p10);
		var ilen=ival.length-prec;
		if(ilen==0)
		{
			return "0."+ival.substr(ilen,prec);
		}
		return ival.substr(0,ilen)+"."+ival.substr(ilen,prec);
	}

	function _printf_str_(val,pad,sign,width,prec)
	{
		var npad;

		if(val === undefined)
		{
			return "(undefined)";
		}
		if(val === null)
		{
			return "(null)";
		}
		if((npad=width-val.length)>0)
		{
			if(sign=="-")
			{
				while(npad>0)
				{
					val+=pad;
					npad--;
				}
			}
			else
			{
				while(npad>0)
				{
					val=pad+val;
					npad--;
				}
			}
		}
		if(prec>0)
		{
			return val.substr(0,prec);
		}
		return val;
	}

	function _sprintf_(fmt,av,index)
	{
		var output="";
		var i,m,line,match;

		line=fmt.split("\n");
		for(i=0;i<line.length;i++)
		{
			if(i>0)
			{
				output+="\n";
			}
			fmt=line[i];
			while(match=FREGEXP.exec(fmt))
			{
				var sign="";
				var pad=" ";

				if(!_empty(match[1])) // the left part
				{
					// You can't add this blindly because mozilla set the value to <undefined> when
					// there is no match, and we don't want the "undefined" string be returned !
					output+=match[1];
				}
				if(!_empty(match[2])) // the sign (like in %-15s)
				{
					sign=match[2];
				}
				if(!_empty(match[3])) // the "0" char for padding (like in %03d)
				{
					pad="0";
				}

				var width=match[4];	// the with (32 in %032d)
				var prec=match[6];	// the precision (10 in %.10s)
				var type=match[7];	// the parameter type

				fmt=match[8];

				if(index>=av.length)
				{
					output += "[missing parameter for type '"+type+"']";
					continue;
				}

				var val=av[index++];

				switch(type)
				{
				case "d":
					output += _printf_num_(val,10,pad,sign,width);
					break;
				case "o":
					output += _printf_num_(val,8,pad,sign,width);
					break;
				case "x":
					output += _printf_num_(val,16,pad,sign,width);
					break;
				case "X":
					output += _printf_num_(val,16,pad,sign,width).toUpperCase();
					break;
				case "c":
					output += String.fromCharCode(parseInt(val,10));
					break;
				case "s":
					output += _printf_str_(val,pad,sign,width,prec);
					break;
				case "f":
					output += _printf_float_(val,pad,sign,width,prec);
					break;
				default:
					output += "[unknown format '"+type+"']";
					break;
				}
			}
			output+=fmt;
		}
		return output;
	}

})(jQuery);


/*!
 Google Analytics Event Tracking jQuery Plugin

 Copyright (C) 2011 by Building Blocks UK

 Permission is hereby granted, free of charge, to any person obtaining a copy
 of this software and associated documentation files (the "Software"), to deal
 in the Software without restriction, including without limitation the rights
 to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 copies of the Software, and to permit persons to whom the Software is
 furnished to do so, subject to the following conditions:

 The above copyright notice and this permission notice shall be included in
 all copies or substantial portions of the Software.

 THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 THE SOFTWARE.

 Author: Robert Stevenson-Leggett
 Version: 0.91

 Handles event tracking through the use of data attributes

 Version history:

 0.1 - Initial version
 0.2 - Support for direct calling
 0.3 - Bug fixes
 0.4 - Added comments and push to github
 0.5 - Add gaTrackEvent
 0.6 - Bug fixes
 0.7 - Added non interactive option
 0.8 - Bug fix
 0.9 - Added more tests
 0.91 - Bug fix

*/
(function ($) {

    // Extend the jQuery object with the ga trackEvent function. Other functions can call this method, or
    // it can be called directly from existing JS code to add tracking
    // Can be used anywhere in your Javascript like so:
    // $.ga.trackEvent({ category : 'Category', action : 'Action', label : 'Label', value : 0.0});
    // $.ga.trackEvent({ category : 'Category', action: 'Action' });
    //
    // This also enables unit tests to overide this function for testing purposes.
    $.extend({
        ga: {
            trackEvent: function(args) {
                var defaultArgs = {
                    category : 'Unspecified',
                    action: 'Unspecified',
                    nonInteractive:false
                };
                args = $.extend(defaultArgs,args);
                _gaq.push(['_trackEvent', args.category, args.action, args.label, args.value, args.nonInteractive]);
            }
        }
    });

    var defaultOptions = {
        //The category attribute
        categoryAttribute: 'data-ga-category',
        //The action attribute
        actionAttribute: 'data-ga-action',
        //The label attribute (could be changed to href when tracking file downloads)
        labelAttribute: 'data-ga-label',
        //The value attribute (must be integer)
        valueAttribute: 'data-ga-value',
        //An attribute to indicate whether the event is non-interactive (defaults to false)
        noninteractiveAttribute: 'data-ga-noninteractive',
        //Whether to look for the label
        useLabel: false,
        //Whether to look for a value
        useValue: false,
        //false = track as soon as the plugin loads, true = bind to an event
        useEvent: false,
        //The event to bind to if useEvent is true
        event: 'click',
        //A method to call to check whether or not we should call the tracking when the event is clicked
        valid: function (elem, e) { return true; },
        //Tracking complete
        complete: function (elem, e) { },
        //Category should always be set if using gaTrackEvent
        category: 'Unspecified',
        //Action should always be set if using gaTrackEvent
        action: 'Unspecified',
        //Label can be specified if using gaTrackEvent and useLabel == true
        label: 'Unspecified',
        //value can be specified if using gaTrackEvent and useValue == true
        value: 'Unspecified',
        //non-interactive - only used if using gaTrackEvent
        nonInteractive: false
    };

    //
    // gaTrackEvent adds unobtrusive tracking attributes itself
    // So you can add tracking to links etc.
    //
    // This allows to do sitewide event tracking e.g. Document Downloads just
    // by selecting the elements e.g.
    //
    //
    //  $('.track-download').gaTrackEvent({
    //          category:'Downloads', action:'PDF', useEvent:true, event:'click'
    //    });
    //
    $.fn.gaTrackEvent = function (options) {
        options = $.extend(defaultOptions, options);

        return this.each(function () {
            var element = $(this);
            element.attr(options.categoryAttribute, options.category);
            element.attr(options.actionAttribute, options.action);

            if (options.useLabel === true) {
                element.attr(options.labelAttribute, options.label);
            }
            if (options.useValue === true) {
                element.attr(options.valueAttribute, options.value);
            }
            if (options.nonInteractive === true) {
            	element.attr(options.noninteractiveAttribute, "true");
            }
            
            element.gaTrackEventUnobtrusive(options);
        });
    };

    //Create the plugin
	// gaTrackEventUnobtrusive expects you to add the data attributes either via server side code
	// or direct into the mark up.
    $.fn.gaTrackEventUnobtrusive = function (options) {

        //Merge options
        options = $.extend(defaultOptions, options);

        //Keep the chain going
        return this.each(function () {

            var _this = $(this);

            //Wrap the tracking so we can reuse it.
            var callTrackEvent = function () {
                //Retreive the info
                var category = _this.attr(options.categoryAttribute);
                var action = _this.attr(options.actionAttribute);
                var label = _this.attr(options.labelAttribute);
                var value = _this.attr(options.valueAttribute);
                var nonInteractive = (_this.attr(options.noninteractiveAttribute) === 'true');

                var args = {
                    category : category,
                    action : action,
                    nonInteractive : nonInteractive
                };

                if (options.useLabel && options.useValue) {
                   args.label = label;
                   args.value = value;
                }
                else if (options.useLabel) {
                    args.label = label;
                }

                $.ga.trackEvent(args);
            };

            //If we want to bind to an event, do it.
            if (options.useEvent == true) {

                //This is what happens when you actually click a button
                var constructedFunction = function (e) {
                    //Check the callback function
                    if (options.valid(_this, e) === true) {
                        callTrackEvent();
                        options.complete(_this, e);
                    }
                };

                //E.g. if we are going to click on a link
                _this.bind(options.event, constructedFunction);
            }
            else {
                //Otherwise just track immediately (e.g. if we just came from a post-back)
                callTrackEvent();
            }
        });
    };

})(jQuery);jQuery.cookie = function(name, value, options) {
    if (typeof value != 'undefined') { // name and value given, set cookie
        options = options || {};
        if (value === null) {
            value = '';
            options.expires = -1;
        }
        var expires = '';
        if (options.expires && (typeof options.expires == 'number' || options.expires.toUTCString)) {
            var date;
            if (typeof options.expires == 'number') {
                date = new Date();
                date.setTime(date.getTime() + (options.expires * 24 * 60 * 60 * 1000));
            } else {
                date = options.expires;
            }
            expires = '; expires=' + date.toUTCString(); // use expires attribute, max-age is not supported by IE
        }
        // CAUTION: Needed to parenthesize options.path and options.domain
        // in the following expressions, otherwise they evaluate to undefined
        // in the packed version for some reason...
        var path = options.path ? '; path=' + (options.path) : '';
        var domain = options.domain ? '; domain=' + (options.domain) : '';
        var secure = options.secure ? '; secure' : '';
        document.cookie = [name, '=', encodeURIComponent(value), expires, path, domain, secure].join('');
    } else { // only name given, get cookie
        var cookieValue = null;
        if (document.cookie && document.cookie != '') {
            var cookies = document.cookie.split(';');
            for (var i = 0; i < cookies.length; i++) {
                var cookie = jQuery.trim(cookies[i]);
                // Does this cookie string begin with the name we want?
                if (cookie.substring(0, name.length + 1) == (name + '=')) {
                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));
                    break;
                }
            }
        }
        return cookieValue;
    }
};(function(d){d.formatCurrency={};d.formatCurrency.regions=[];d.formatCurrency.regions[""]={symbol:"$",positiveFormat:"%s%n",negativeFormat:"(%s%n)",decimalSymbol:".",digitGroupSymbol:",",groupDigits:true};
d.fn.formatCurrency=function(e,f){if(arguments.length==1&&typeof e!=="string"){f=e;e=false}var g={name:"formatCurrency",colorize:false,region:"",global:true,roundToDecimalPlace:2,eventOnDecimalsEntered:false};
g=d.extend(g,d.formatCurrency.regions[""]);f=d.extend(g,f);if(f.region.length>0){f=d.extend(f,b(f.region))}f.regex=a(f);return this.each(function(){$this=d(this);
var o="0";o=$this[$this.is("input, select, textarea")?"val":"html"]();if(o.search("\\(")>=0){o="-"+o}if(o===""||(o==="-"&&f.roundToDecimalPlace===-1)){return
}if(isNaN(o)){o=o.replace(f.regex,"");if(o===""||(o==="-"&&f.roundToDecimalPlace===-1)){return}if(f.decimalSymbol!="."){o=o.replace(f.decimalSymbol,".")
}if(isNaN(o)){o="0"}}var m=String(o).split(".");var r=(o==Math.abs(o));var l=(m.length>1);var k=(l?m[1].toString():"0");var j=k;o=Math.abs(m[0]);
o=isNaN(o)?0:o;if(f.roundToDecimalPlace>=0){k=parseFloat("1."+k);k=k.toFixed(f.roundToDecimalPlace);if(k.substring(0,1)=="2"){o=Number(o)+1}k=k.substring(2)
}o=String(o);if(f.groupDigits){for(var n=0;n<Math.floor((o.length-(1+n))/3);n++){o=o.substring(0,o.length-(4*n+3))+f.digitGroupSymbol+o.substring(o.length-(4*n+3))
}}if((l&&f.roundToDecimalPlace==-1)||f.roundToDecimalPlace>0){o+=f.decimalSymbol+k}var q=r?f.positiveFormat:f.negativeFormat;var h=q.replace(/%s/g,f.symbol);
h=h.replace(/%n/g,o);var p=d([]);if(!e){p=$this}else{p=d(e)}p[p.is("input, select, textarea")?"val":"html"](h);if(l&&f.eventOnDecimalsEntered&&j.length>f.roundToDecimalPlace){p.trigger("decimalsEntered",j)
}if(f.colorize){p.css("color",r?"black":"red")}})};d.fn.toNumber=function(e){var f=d.extend({name:"toNumber",region:"",global:true},d.formatCurrency.regions[""]);
e=jQuery.extend(f,e);if(e.region.length>0){e=d.extend(e,b(e.region))}e.regex=a(e);return this.each(function(){var g=d(this).is("input, select, textarea")?"val":"html";
d(this)[g](d(this)[g]().replace("(","(-").replace(e.regex,""))})};d.fn.asNumber=function(f){var g=d.extend({name:"asNumber",region:"",parse:true,parseType:"Float",global:true},d.formatCurrency.regions[""]);
f=jQuery.extend(g,f);if(f.region.length>0){f=d.extend(f,b(f.region))}f.regex=a(f);f.parseType=c(f.parseType);var h=d(this).is("input, select, textarea")?"val":"html";
var e=d(this)[h]();e=e?e:"";e=e.replace("(","(-");e=e.replace(f.regex,"");if(!f.parse){return e}if(e.length==0){e="0"}if(f.decimalSymbol!="."){e=e.replace(f.decimalSymbol,".")
}return window["parse"+f.parseType](e)};function b(g){var f=d.formatCurrency.regions[g];if(f){return f}else{if(/(\w+)-(\w+)/g.test(g)){var e=g.replace(/(\w+)-(\w+)/g,"$1");
return d.formatCurrency.regions[e]}}return null}function c(e){switch(e.toLowerCase()){case"int":return"Int";case"float":return"Float";default:throw"invalid parseType"
}}function a(e){if(e.symbol===""){return new RegExp("[^\\d"+e.decimalSymbol+"-]","g")}else{var f=e.symbol.replace("$","\\$").replace(".","\\.");
return new RegExp(f+"|[^\\d"+e.decimalSymbol+"-]","g")}}})(jQuery);/*!
 * jCarousel - Riding carousels with jQuery
 *   http://sorgalla.com/jcarousel/
 *
 * Copyright (c) 2006 Jan Sorgalla (http://sorgalla.com)
 * Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)
 * and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses.
 *
 * Built on top of the jQuery library
 *   http://jquery.com
 *
 * Inspired by the "Carousel Component" by Bill Scott
 *   http://billwscott.com/carousel/
 */

(function(i){var q={vertical:false,rtl:false,start:1,offset:1,size:null,scroll:3,visible:null,animation:"normal",easing:"swing",auto:0,wrap:null,initCallback:null,reloadCallback:null,itemLoadCallback:null,itemFirstInCallback:null,itemFirstOutCallback:null,itemLastInCallback:null,itemLastOutCallback:null,itemVisibleInCallback:null,itemVisibleOutCallback:null,buttonNextHTML:"<div></div>",buttonPrevHTML:"<div></div>",buttonNextEvent:"click",buttonPrevEvent:"click",buttonNextCallback:null,buttonPrevCallback:null, itemFallbackDimension:null},r=false;i(window).bind("load.jcarousel",function(){r=true});i.jcarousel=function(a,c){this.options=i.extend({},q,c||{});this.autoStopped=this.locked=false;this.buttonPrevState=this.buttonNextState=this.buttonPrev=this.buttonNext=this.list=this.clip=this.container=null;if(!c||c.rtl===undefined)this.options.rtl=(i(a).attr("dir")||i("html").attr("dir")||"").toLowerCase()=="rtl";this.wh=!this.options.vertical?"width":"height";this.lt=!this.options.vertical?this.options.rtl? "right":"left":"top";for(var b="",d=a.className.split(" "),f=0;f<d.length;f++)if(d[f].indexOf("jcarousel-skin")!=-1){i(a).removeClass(d[f]);b=d[f];break}if(a.nodeName.toUpperCase()=="UL"||a.nodeName.toUpperCase()=="OL"){this.list=i(a);this.container=this.list.parent();if(this.container.hasClass("jcarousel-clip")){if(!this.container.parent().hasClass("jcarousel-container"))this.container=this.container.wrap("<div></div>");this.container=this.container.parent()}else if(!this.container.hasClass("jcarousel-container"))this.container= this.list.wrap("<div></div>").parent()}else{this.container=i(a);this.list=this.container.find("ul,ol").eq(0)}b!==""&&this.container.parent()[0].className.indexOf("jcarousel-skin")==-1&&this.container.wrap('<div class=" '+b+'"></div>');this.clip=this.list.parent();if(!this.clip.length||!this.clip.hasClass("jcarousel-clip"))this.clip=this.list.wrap("<div></div>").parent();this.buttonNext=i(".jcarousel-next",this.container);if(this.buttonNext.size()===0&&this.options.buttonNextHTML!==null)this.buttonNext= this.clip.after(this.options.buttonNextHTML).next();this.buttonNext.addClass(this.className("jcarousel-next"));this.buttonPrev=i(".jcarousel-prev",this.container);if(this.buttonPrev.size()===0&&this.options.buttonPrevHTML!==null)this.buttonPrev=this.clip.after(this.options.buttonPrevHTML).next();this.buttonPrev.addClass(this.className("jcarousel-prev"));this.clip.addClass(this.className("jcarousel-clip")).css({overflow:"hidden",position:"relative"});this.list.addClass(this.className("jcarousel-list")).css({overflow:"hidden", position:"relative",top:0,padding:0}).css(this.options.rtl?"right":"left",0);this.container.addClass(this.className("jcarousel-container")).css({position:"relative"});!this.options.vertical&&this.options.rtl&&this.container.addClass("jcarousel-direction-rtl").attr("dir","rtl");var j=this.options.visible!==null?Math.ceil(this.clipping()/this.options.visible):null;b=this.list.children("li");var e=this;if(b.size()>0){var g=0,k=this.options.offset;b.each(function(){e.format(this,k++);g+=e.dimension(this, j)});this.list.css(this.wh,g+100+"px");if(!c||c.size===undefined)this.options.size=b.size()}this.container.css("display","block");this.buttonNext.css("display","block");this.buttonPrev.css("display","block");this.funcNext=function(){e.next()};this.funcPrev=function(){e.prev()};this.funcResize=function(){e.reload()};this.options.initCallback!==null&&this.options.initCallback(this,"init");if(!r&&i.browser.safari){this.buttons(false,false);i(window).bind("load.jcarousel",function(){e.setup()})}else this.setup()}; var h=i.jcarousel;h.fn=h.prototype={jcarousel:"0.2.7"};h.fn.extend=h.extend=i.extend;h.fn.extend({setup:function(){this.prevLast=this.prevFirst=this.last=this.first=null;this.animating=false;this.tail=this.timer=null;this.inTail=false;if(!this.locked){this.list.css(this.lt,this.pos(this.options.offset)+"px");var a=this.pos(this.options.start,true);this.prevFirst=this.prevLast=null;this.animate(a,false);i(window).unbind("resize.jcarousel",this.funcResize).bind("resize.jcarousel",this.funcResize)}}, reset:function(){this.list.empty();this.list.css(this.lt,"0px");this.list.css(this.wh,"10px");this.options.initCallback!==null&&this.options.initCallback(this,"reset");this.setup()},reload:function(){this.tail!==null&&this.inTail&&this.list.css(this.lt,h.intval(this.list.css(this.lt))+this.tail);this.tail=null;this.inTail=false;this.options.reloadCallback!==null&&this.options.reloadCallback(this);if(this.options.visible!==null){var a=this,c=Math.ceil(this.clipping()/this.options.visible),b=0,d=0; this.list.children("li").each(function(f){b+=a.dimension(this,c);if(f+1<a.first)d=b});this.list.css(this.wh,b+"px");this.list.css(this.lt,-d+"px")}this.scroll(this.first,false)},lock:function(){this.locked=true;this.buttons()},unlock:function(){this.locked=false;this.buttons()},size:function(a){if(a!==undefined){this.options.size=a;this.locked||this.buttons()}return this.options.size},has:function(a,c){if(c===undefined||!c)c=a;if(this.options.size!==null&&c>this.options.size)c=this.options.size;for(var b= a;b<=c;b++){var d=this.get(b);if(!d.length||d.hasClass("jcarousel-item-placeholder"))return false}return true},get:function(a){return i(".jcarousel-item-"+a,this.list)},add:function(a,c){var b=this.get(a),d=0,f=i(c);if(b.length===0){var j,e=h.intval(a);for(b=this.create(a);;){j=this.get(--e);if(e<=0||j.length){e<=0?this.list.prepend(b):j.after(b);break}}}else d=this.dimension(b);if(f.get(0).nodeName.toUpperCase()=="LI"){b.replaceWith(f);b=f}else b.empty().append(c);this.format(b.removeClass(this.className("jcarousel-item-placeholder")), a);f=this.options.visible!==null?Math.ceil(this.clipping()/this.options.visible):null;d=this.dimension(b,f)-d;a>0&&a<this.first&&this.list.css(this.lt,h.intval(this.list.css(this.lt))-d+"px");this.list.css(this.wh,h.intval(this.list.css(this.wh))+d+"px");return b},remove:function(a){var c=this.get(a);if(!(!c.length||a>=this.first&&a<=this.last)){var b=this.dimension(c);a<this.first&&this.list.css(this.lt,h.intval(this.list.css(this.lt))+b+"px");c.remove();this.list.css(this.wh,h.intval(this.list.css(this.wh))- b+"px")}},next:function(){this.tail!==null&&!this.inTail?this.scrollTail(false):this.scroll((this.options.wrap=="both"||this.options.wrap=="last")&&this.options.size!==null&&this.last==this.options.size?1:this.first+this.options.scroll)},prev:function(){this.tail!==null&&this.inTail?this.scrollTail(true):this.scroll((this.options.wrap=="both"||this.options.wrap=="first")&&this.options.size!==null&&this.first==1?this.options.size:this.first-this.options.scroll)},scrollTail:function(a){if(!(this.locked|| this.animating||!this.tail)){this.pauseAuto();var c=h.intval(this.list.css(this.lt));c=!a?c-this.tail:c+this.tail;this.inTail=!a;this.prevFirst=this.first;this.prevLast=this.last;this.animate(c)}},scroll:function(a,c){if(!(this.locked||this.animating)){this.pauseAuto();this.animate(this.pos(a),c)}},pos:function(a,c){var b=h.intval(this.list.css(this.lt));if(this.locked||this.animating)return b;if(this.options.wrap!="circular")a=a<1?1:this.options.size&&a>this.options.size?this.options.size:a;for(var d= this.first>a,f=this.options.wrap!="circular"&&this.first<=1?1:this.first,j=d?this.get(f):this.get(this.last),e=d?f:f-1,g=null,k=0,l=false,m=0;d?--e>=a:++e<a;){g=this.get(e);l=!g.length;if(g.length===0){g=this.create(e).addClass(this.className("jcarousel-item-placeholder"));j[d?"before":"after"](g);if(this.first!==null&&this.options.wrap=="circular"&&this.options.size!==null&&(e<=0||e>this.options.size)){j=this.get(this.index(e));if(j.length)g=this.add(e,j.clone(true))}}j=g;m=this.dimension(g);if(l)k+= m;if(this.first!==null&&(this.options.wrap=="circular"||e>=1&&(this.options.size===null||e<=this.options.size)))b=d?b+m:b-m}f=this.clipping();var p=[],o=0,n=0;j=this.get(a-1);for(e=a;++o;){g=this.get(e);l=!g.length;if(g.length===0){g=this.create(e).addClass(this.className("jcarousel-item-placeholder"));j.length===0?this.list.prepend(g):j[d?"before":"after"](g);if(this.first!==null&&this.options.wrap=="circular"&&this.options.size!==null&&(e<=0||e>this.options.size)){j=this.get(this.index(e));if(j.length)g= this.add(e,j.clone(true))}}j=g;m=this.dimension(g);if(m===0) return false;if(this.options.wrap!="circular"&&this.options.size!==null&&e>this.options.size)p.push(g);else if(l)k+=m;n+=m;if(n>=f)break;e++}for(g=0;g<p.length;g++)p[g].remove();if(k>0){this.list.css(this.wh,this.dimension(this.list)+k+"px");if(d){b-=k;this.list.css(this.lt,h.intval(this.list.css(this.lt))-k+"px")}}k=a+o-1;if(this.options.wrap!="circular"&& this.options.size&&k>this.options.size)k=this.options.size;if(e>k){o=0;e=k;for(n=0;++o;){g=this.get(e--);if(!g.length)break;n+=this.dimension(g);if(n>=f)break}}e=k-o+1;if(this.options.wrap!="circular"&&e<1)e=1;if(this.inTail&&d){b+=this.tail;this.inTail=false}this.tail=null;if(this.options.wrap!="circular"&&k==this.options.size&&k-o+1>=1){d=h.margin(this.get(k),!this.options.vertical?"marginRight":"marginBottom");if(n-d>f)this.tail=n-f-d}if(c&&a===this.options.size&&this.tail){b-=this.tail;this.inTail= true}for(;a-- >e;)b+=this.dimension(this.get(a));this.prevFirst=this.first;this.prevLast=this.last;this.first=e;this.last=k;return b},animate:function(a,c){if(!(this.locked||this.animating)){this.animating=true;var b=this,d=function(){b.animating=false;a===0&&b.list.css(b.lt,0);if(!b.autoStopped&&(b.options.wrap=="circular"||b.options.wrap=="both"||b.options.wrap=="last"||b.options.size===null||b.last<b.options.size||b.last==b.options.size&&b.tail!==null&&!b.inTail))b.startAuto();b.buttons();b.notify("onAfterAnimation"); if(b.options.wrap=="circular"&&b.options.size!==null)for(var f=b.prevFirst;f<=b.prevLast;f++)if(f!==null&&!(f>=b.first&&f<=b.last)&&(f<1||f>b.options.size))b.remove(f)};this.notify("onBeforeAnimation");if(!this.options.animation||c===false){this.list.css(this.lt,a+"px");d()}else this.list.animate(!this.options.vertical?this.options.rtl?{right:a}:{left:a}:{top:a},this.options.animation,this.options.easing,d)}},startAuto:function(a){if(a!==undefined)this.options.auto=a;if(this.options.auto===0)return this.stopAuto(); if(this.timer===null){this.autoStopped=false;var c=this;this.timer=window.setTimeout(function(){c.next()},this.options.auto*1E3)}},stopAuto:function(){this.pauseAuto();this.autoStopped=true},pauseAuto:function(){if(this.timer!==null){window.clearTimeout(this.timer);this.timer=null}},buttons:function(a,c){if(a==null){a=!this.locked&&this.options.size!==0&&(this.options.wrap&&this.options.wrap!="first"||this.options.size===null||this.last<this.options.size);if(!this.locked&&(!this.options.wrap||this.options.wrap== "first")&&this.options.size!==null&&this.last>=this.options.size)a=this.tail!==null&&!this.inTail}if(c==null){c=!this.locked&&this.options.size!==0&&(this.options.wrap&&this.options.wrap!="last"||this.first>1);if(!this.locked&&(!this.options.wrap||this.options.wrap=="last")&&this.options.size!==null&&this.first==1)c=this.tail!==null&&this.inTail}var b=this;if(this.buttonNext.size()>0){this.buttonNext.unbind(this.options.buttonNextEvent+".jcarousel",this.funcNext);a&&this.buttonNext.bind(this.options.buttonNextEvent+ ".jcarousel",this.funcNext);this.buttonNext[a?"removeClass":"addClass"](this.className("jcarousel-next-disabled")).attr("disabled",a?false:true);this.options.buttonNextCallback!==null&&this.buttonNext.data("jcarouselstate")!=a&&this.buttonNext.each(function(){b.options.buttonNextCallback(b,this,a)}).data("jcarouselstate",a)}else this.options.buttonNextCallback!==null&&this.buttonNextState!=a&&this.options.buttonNextCallback(b,null,a);if(this.buttonPrev.size()>0){this.buttonPrev.unbind(this.options.buttonPrevEvent+ ".jcarousel",this.funcPrev);c&&this.buttonPrev.bind(this.options.buttonPrevEvent+".jcarousel",this.funcPrev);this.buttonPrev[c?"removeClass":"addClass"](this.className("jcarousel-prev-disabled")).attr("disabled",c?false:true);this.options.buttonPrevCallback!==null&&this.buttonPrev.data("jcarouselstate")!=c&&this.buttonPrev.each(function(){b.options.buttonPrevCallback(b,this,c)}).data("jcarouselstate",c)}else this.options.buttonPrevCallback!==null&&this.buttonPrevState!=c&&this.options.buttonPrevCallback(b, null,c);this.buttonNextState=a;this.buttonPrevState=c},notify:function(a){var c=this.prevFirst===null?"init":this.prevFirst<this.first?"next":"prev";this.callback("itemLoadCallback",a,c);if(this.prevFirst!==this.first){this.callback("itemFirstInCallback",a,c,this.first);this.callback("itemFirstOutCallback",a,c,this.prevFirst)}if(this.prevLast!==this.last){this.callback("itemLastInCallback",a,c,this.last);this.callback("itemLastOutCallback",a,c,this.prevLast)}this.callback("itemVisibleInCallback", a,c,this.first,this.last,this.prevFirst,this.prevLast);this.callback("itemVisibleOutCallback",a,c,this.prevFirst,this.prevLast,this.first,this.last)},callback:function(a,c,b,d,f,j,e){if(!(this.options[a]==null||typeof this.options[a]!="object"&&c!="onAfterAnimation")){var g=typeof this.options[a]=="object"?this.options[a][c]:this.options[a];if(i.isFunction(g)){var k=this;if(d===undefined)g(k,b,c);else if(f===undefined)this.get(d).each(function(){g(k,this,d,b,c)});else{a=function(m){k.get(m).each(function(){g(k, this,m,b,c)})};for(var l=d;l<=f;l++)l!==null&&!(l>=j&&l<=e)&&a(l)}}}},create:function(a){return this.format("<li></li>",a)},format:function(a,c){a=i(a);for(var b=a.get(0).className.split(" "),d=0;d<b.length;d++)b[d].indexOf("jcarousel-")!=-1&&a.removeClass(b[d]);a.addClass(this.className("jcarousel-item")).addClass(this.className("jcarousel-item-"+c)).css({"float":this.options.rtl?"right":"left","list-style":"none"}).attr("jcarouselindex",c);return a},className:function(a){return a+" "+a+(!this.options.vertical? "-horizontal":"-vertical")},dimension:function(a,c){var b=a.jquery!==undefined?a[0]:a,d=!this.options.vertical?(b.offsetWidth||h.intval(this.options.itemFallbackDimension))+h.margin(b,"marginLeft")+h.margin(b,"marginRight"):(b.offsetHeight||h.intval(this.options.itemFallbackDimension))+h.margin(b,"marginTop")+h.margin(b,"marginBottom");if(c==null||d==c)return d;d=!this.options.vertical?c-h.margin(b,"marginLeft")-h.margin(b,"marginRight"):c-h.margin(b,"marginTop")-h.margin(b,"marginBottom");i(b).css(this.wh, d+"px");return this.dimension(b)},clipping:function(){return!this.options.vertical?this.clip[0].offsetWidth-h.intval(this.clip.css("borderLeftWidth"))-h.intval(this.clip.css("borderRightWidth")):this.clip[0].offsetHeight-h.intval(this.clip.css("borderTopWidth"))-h.intval(this.clip.css("borderBottomWidth"))},index:function(a,c){if(c==null)c=this.options.size;return Math.round(((a-1)/c-Math.floor((a-1)/c))*c)+1}});h.extend({defaults:function(a){return i.extend(q,a||{})},margin:function(a,c){if(!a)return 0; var b=a.jquery!==undefined?a[0]:a;if(c=="marginRight"&&i.browser.safari){var d={display:"block","float":"none",width:"auto"},f,j;i.swap(b,d,function(){f=b.offsetWidth});d.marginRight=0;i.swap(b,d,function(){j=b.offsetWidth});return j-f}return h.intval(i.css(b,c))},intval:function(a){a=parseInt(a,10);return isNaN(a)?0:a}});i.fn.jcarousel=function(a){if(typeof a=="string"){var c=i(this).data("jcarousel"),b=Array.prototype.slice.call(arguments,1);return c[a].apply(c,b)}else return this.each(function(){i(this).data("jcarousel", new h(this,a))})}})(jQuery);
/**
 * jQuery lightBox plugin
 * This jQuery plugin was inspired and based on Lightbox 2 by Lokesh Dhakar (http://www.huddletogether.com/projects/lightbox2/)
 * and adapted to me for use like a plugin from jQuery.
 * @name jquery-lightbox-0.5.js
 * @author Leandro Vieira Pinho - http://leandrovieira.com
 * @version 0.5
 * @date April 11, 2008
 * @category jQuery plugin
 * @copyright (c) 2008 Leandro Vieira Pinho (leandrovieira.com)
 * @license CC Attribution-No Derivative Works 2.5 Brazil - http://creativecommons.org/licenses/by-nd/2.5/br/deed.en_US
 * @example Visit http://leandrovieira.com/projects/jquery/lightbox/ for more informations about this jQuery plugin
 */

// Offering a Custom Alias suport - More info: http://docs.jquery.com/Plugins/Authoring#Custom_Alias
(function($) {
	/**
	 * $ is an alias to jQuery object
	 *
	 */
	$.fn.lightBox = function(settings) {
		// Settings to configure the jQuery lightBox plugin how you like
		settings = jQuery.extend({
			// Configuration related to overlay
			overlayBgColor: 		'#000',		// (string) Background color to overlay; inform a hexadecimal value like: #RRGGBB. Where RR, GG, and BB are the hexadecimal values for the red, green, and blue values of the color.
			overlayOpacity:			0.8,		// (integer) Opacity value to overlay; inform: 0.X. Where X are number from 0 to 9
			// Configuration related to navigation
			fixedNavigation:		false,		// (boolean) Boolean that informs if the navigation (next and prev button) will be fixed or not in the interface.
			// Configuration related to images
			imageLoading:			'/shared/bu/images/lightbox/lightbox-ico-loading.gif',		// (string) Path and the name of the loading icon
			imageBtnPrev:			'/shared/bu/images/lightbox/lightbox-btn-prev.gif',			// (string) Path and the name of the prev button image
			imageBtnNext:			'/shared/bu/images/lightbox/lightbox-btn-next.gif',			// (string) Path and the name of the next button image
			imageBtnClose:			'/shared/bu/images/lightbox/lightbox-btn-close.gif',		// (string) Path and the name of the close btn
			imageBlank:				'/shared/bu/images/lightbox/lightbox-blank.gif',			// (string) Path and the name of a blank image (one pixel)
			// Configuration related to container image box
			containerBorderSize:	10,			// (integer) If you adjust the padding in the CSS for the container, #lightbox-container-image-box, you will need to update this value
			containerResizeSpeed:	400,		// (integer) Specify the resize duration of container image. These number are miliseconds. 400 is default.
			// Configuration related to texts in caption. For example: Image 2 of 8. You can alter either "Image" and "of" texts.
			txtImage:				'Image',	// (string) Specify text "Image"
			txtOf:					'of',		// (string) Specify text "of"
			// Configuration related to keyboard navigation
			keyToClose:				'c',		// (string) (c = close) Letter to close the jQuery lightBox interface. Beyond this letter, the letter X and the SCAPE key is used to.
			keyToPrev:				'p',		// (string) (p = previous) Letter to show the previous image
			keyToNext:				'n',		// (string) (n = next) Letter to show the next image.
			// Don�t alter these variables in any way
			imageArray:				[],
			activeImage:			0
		},settings);
		// Caching the jQuery object with all elements matched
		var jQueryMatchedObj = this; // This, in this context, refer to jQuery object
        /**
		 * Initializing the plugin calling the start function
		 *
		 * @return boolean false
		 */
		function _initialize() {
			_start(this,jQueryMatchedObj); // This, in this context, refer to object (link) which the user have clicked
			return false; // Avoid the browser following the link
		}
		/**
		 * Start the jQuery lightBox plugin
		 *
		 * @param object objClicked The object (link) whick the user have clicked
		 * @param object jQueryMatchedObj The jQuery object with all elements matched
		 */
		function _start(objClicked,jQueryMatchedObj) {
			// Hime some elements to avoid conflict with overlay in IE. These elements appear above the overlay.
			$('embed, object, select').css({ 'visibility' : 'hidden' });
			// Call the function to create the markup structure; style some elements; assign events in some elements.
			_set_interface();
			// Unset total images in imageArray
			settings.imageArray.length = 0;
			// Unset image active information
			settings.activeImage = 0;
			// We have an image set? Or just an image? Let�s see it.
			if ( jQueryMatchedObj.length == 1 ) {
				settings.imageArray.push(new Array(objClicked.getAttribute('href'),objClicked.getAttribute('title')));
			} else {
				// Add an Array (as many as we have), with href and title atributes, inside the Array that storage the images references
				for ( var i = 0; i < jQueryMatchedObj.length; i++ ) {
					settings.imageArray.push(new Array(jQueryMatchedObj[i].getAttribute('href'),jQueryMatchedObj[i].getAttribute('title')));
				}
			}
			while ( settings.imageArray[settings.activeImage][0] != objClicked.getAttribute('href') ) {
				settings.activeImage++;
			}
			// Call the function that prepares image exibition
			_set_image_to_view();
		}
		/**
		 * Create the jQuery lightBox plugin interface
		 *
		 * The HTML markup will be like that:
			<div id="jquery-overlay"></div>
			<div id="jquery-lightbox">
				<div id="lightbox-container-image-box">
					<div id="lightbox-container-image">
						<img src="../fotos/XX.jpg" id="lightbox-image">
						<div id="lightbox-nav">
							<a href="#" id="lightbox-nav-btnPrev"></a>
							<a href="#" id="lightbox-nav-btnNext"></a>
						</div>
						<div id="lightbox-loading">
							<a href="#" id="lightbox-loading-link">
								<img src="../images/lightbox-ico-loading.gif">
							</a>
						</div>
					</div>
				</div>
				<div id="lightbox-container-image-data-box">
					<div id="lightbox-container-image-data">
						<div id="lightbox-image-details">
							<span id="lightbox-image-details-caption"></span>
							<span id="lightbox-image-details-currentNumber"></span>
						</div>
						<div id="lightbox-secNav">
							<a href="#" id="lightbox-secNav-btnClose">
								<img src="../images/lightbox-btn-close.gif">
							</a>
						</div>
					</div>
				</div>
			</div>
		 *
		 */
		function _set_interface() {
			// Apply the HTML markup into body tag
			$('body').append('<div id="jquery-overlay"></div><div id="jquery-lightbox"><div id="lightbox-container-image-box"><div id="lightbox-container-image"><img id="lightbox-image"><div style="" id="lightbox-nav"><a href="#" id="lightbox-nav-btnPrev"></a><a href="#" id="lightbox-nav-btnNext"></a></div><div id="lightbox-loading"><a href="#" id="lightbox-loading-link"><img src="' + settings.imageLoading + '"></a></div></div></div><div id="lightbox-container-image-data-box"><div id="lightbox-container-image-data"><div id="lightbox-image-details"><span id="lightbox-image-details-caption"></span><span id="lightbox-image-details-currentNumber"></span></div><div id="lightbox-secNav"><a href="#" id="lightbox-secNav-btnClose"><img src="' + settings.imageBtnClose + '"></a></div></div></div></div>');
			// Get page sizes
			var arrPageSizes = ___getPageSize();
			// Style overlay and show it
			$('#jquery-overlay').css({
				backgroundColor:	settings.overlayBgColor,
				opacity:			settings.overlayOpacity,
				width:				arrPageSizes[0],
				height:				arrPageSizes[1]
			}).fadeIn();
			// Get page scroll
			var arrPageScroll = ___getPageScroll();
			// Calculate top and left offset for the jquery-lightbox div object and show it
			$('#jquery-lightbox').css({
				top:	arrPageScroll[1] + (arrPageSizes[3] / 10),
				left:	arrPageScroll[0]
			}).show();
			// Assigning click events in elements to close overlay
			$('#jquery-overlay,#jquery-lightbox').click(function() {
				_finish();
			});
			// Assign the _finish function to lightbox-loading-link and lightbox-secNav-btnClose objects
			$('#lightbox-loading-link,#lightbox-secNav-btnClose').click(function() {
				_finish();
				return false;
			});
			// If window was resized, calculate the new overlay dimensions
			$(window).resize(function() {
				// Get page sizes
				var arrPageSizes = ___getPageSize();
				// Style overlay and show it
				$('#jquery-overlay').css({
					width:		arrPageSizes[0],
					height:		arrPageSizes[1]
				});
				// Get page scroll
				var arrPageScroll = ___getPageScroll();
				// Calculate top and left offset for the jquery-lightbox div object and show it
				$('#jquery-lightbox').css({
					top:	arrPageScroll[1] + (arrPageSizes[3] / 10),
					left:	arrPageScroll[0]
				});
			});
		}
		/**
		 * Prepares image exibition; doing a image�s preloader to calculate it�s size
		 *
		 */
		function _set_image_to_view() { // show the loading
			// Show the loading
			$('#lightbox-loading').show();
			if ( settings.fixedNavigation ) {
				$('#lightbox-image,#lightbox-container-image-data-box,#lightbox-image-details-currentNumber').hide();
			} else {
				// Hide some elements
				$('#lightbox-image,#lightbox-nav,#lightbox-nav-btnPrev,#lightbox-nav-btnNext,#lightbox-container-image-data-box,#lightbox-image-details-currentNumber').hide();
			}
			// Image preload process
			var objImagePreloader = new Image();
			objImagePreloader.onload = function() {
                $('#lightbox-image').attr('src',settings.imageArray[settings.activeImage][0]);
				// Perfomance an effect in the image container resizing it
				_resize_container_image_box(objImagePreloader.width,objImagePreloader.height);
				//	clear onLoad, IE behaves irratically with animated gifs otherwise
				objImagePreloader.onload=function(){};
			};
			objImagePreloader.src = settings.imageArray[settings.activeImage][0];
		};
		/**
		 * Perfomance an effect in the image container resizing it
		 *
		 * @param integer intImageWidth The image�s width that will be showed
		 * @param integer intImageHeight The image�s height that will be showed
		 */
		function _resize_container_image_box(intImageWidth,intImageHeight) {
			// Get current width and height
			var intCurrentWidth = $('#lightbox-container-image-box').width();
			var intCurrentHeight = $('#lightbox-container-image-box').height();
			// Get the width and height of the selected image plus the padding
			var intWidth = (intImageWidth + (settings.containerBorderSize * 2)); // Plus the image�s width and the left and right padding value
			var intHeight = (intImageHeight + (settings.containerBorderSize * 2)); // Plus the image�s height and the left and right padding value
			// Diferences
			var intDiffW = intCurrentWidth - intWidth;
			var intDiffH = intCurrentHeight - intHeight;
			// Perfomance the effect
			$('#lightbox-container-image-data-box').css({width:intWidth-20});
			$('#lightbox-container-image-box').animate({ width: intWidth, height: intHeight },settings.containerResizeSpeed,function() { _show_image(); });
			if ( ( intDiffW == 0 ) && ( intDiffH == 0 ) ) {
				if ( $.browser.msie ) {
					___pause(250);
				} else {
					___pause(100);
				}
			}
			//$('#lightbox-container-image-data-box').css({ width: intImageWidth });
			$('#lightbox-nav-btnPrev,#lightbox-nav-btnNext').css({ height: intImageHeight + (settings.containerBorderSize * 2) });
		};
		/**
		 * Show the prepared image
		 *
		 */
		function _show_image() {
			$('#lightbox-loading').hide();
			$('#lightbox-image').fadeIn(function() {
				_show_image_data();
				_set_navigation();
			});
			_preload_neighbor_images();
		};
		/**
		 * Show the image information
		 *
		 */
		function _show_image_data() {
			$('#lightbox-container-image-data-box').slideDown('fast');
			$('#lightbox-image-details-caption').hide();
			if ( settings.imageArray[settings.activeImage][1] ) {
				$('#lightbox-image-details-caption').html(settings.imageArray[settings.activeImage][1]).show();
			}
			// If we have a image set, display 'Image X of X'
			if ( settings.imageArray.length > 1 ) {
				$('#lightbox-image-details-currentNumber').html(settings.txtImage + ' ' + ( settings.activeImage + 1 ) + ' ' + settings.txtOf + ' ' + settings.imageArray.length).show();
			}
		}
		/**
		 * Display the button navigations
		 *
		 */
		function _set_navigation() {
			$('#lightbox-nav').show();

			// Instead to define this configuration in CSS file, we define here. And it�s need to IE. Just.
			$('#lightbox-nav-btnPrev,#lightbox-nav-btnNext').css({ 'background' : 'transparent url(' + settings.imageBlank + ') no-repeat' });

			// Show the prev button, if not the first image in set
			if ( settings.activeImage != 0 ) {
				if ( settings.fixedNavigation ) {
					$('#lightbox-nav-btnPrev').css({ 'background' : 'url(' + settings.imageBtnPrev + ') left 15% no-repeat' })
						.unbind()
						.bind('click',function() {
							settings.activeImage = settings.activeImage - 1;
							_set_image_to_view();
							return false;
						});
				} else {
					// Show the images button for Next buttons
					$('#lightbox-nav-btnPrev').unbind().hover(function() {
						$(this).css({ 'background' : 'url(' + settings.imageBtnPrev + ') left 15% no-repeat' });
					},function() {
						$(this).css({ 'background' : 'transparent url(' + settings.imageBlank + ') no-repeat' });
					}).show().bind('click',function() {
						settings.activeImage = settings.activeImage - 1;
						_set_image_to_view();
						return false;
					});
				}
			} else {
				$('#lightbox-nav-btnPrev').unbind('click');
			}

			// Show the next button, if not the last image in set
			if ( settings.activeImage != ( settings.imageArray.length -1 ) ) {
				if ( settings.fixedNavigation ) {
					$('#lightbox-nav-btnNext').css({ 'background' : 'url(' + settings.imageBtnNext + ') right 15% no-repeat' })
						.unbind()
						.bind('click',function() {
							settings.activeImage = settings.activeImage + 1;
							_set_image_to_view();
							return false;
						});
				} else {
					// Show the images button for Next buttons
					$('#lightbox-nav-btnNext').unbind().hover(function() {
						$(this).css({ 'background' : 'url(' + settings.imageBtnNext + ') right 15% no-repeat' });
					},function() {
						$(this).css({ 'background' : 'transparent url(' + settings.imageBlank + ') no-repeat' });
					}).show().bind('click',function() {
						settings.activeImage = settings.activeImage + 1;
						_set_image_to_view();
						return false;
					});
				}
			} else {
				$('#lightbox-nav-btnNext').unbind('click');
			}
			// Enable keyboard navigation
			_enable_keyboard_navigation();
		}
		/**
		 * Enable a support to keyboard navigation
		 *
		 */
		function _enable_keyboard_navigation() {
			$(document).keydown(function(objEvent) {
				_keyboard_action(objEvent);
			});
		}
		/**
		 * Disable the support to keyboard navigation
		 *
		 */
		function _disable_keyboard_navigation() {
			$(document).unbind();
		}
		/**
		 * Perform the keyboard actions
		 *
		 */
		function _keyboard_action(objEvent) {
			// To ie
			if ( objEvent == null ) {
				keycode = event.keyCode;
				escapeKey = 27;
			// To Mozilla
			} else {
				keycode = objEvent.keyCode;
				escapeKey = objEvent.DOM_VK_ESCAPE;
			}
			// Get the key in lower case form
			key = String.fromCharCode(keycode).toLowerCase();
			// Verify the keys to close the ligthBox
			if ( ( key == settings.keyToClose ) || ( key == 'x' ) || ( keycode == escapeKey ) ) {
				_finish();
			}
			// Verify the key to show the previous image
			if ( ( key == settings.keyToPrev ) || ( keycode == 37 ) ) {
				// If we�re not showing the first image, call the previous
				if ( settings.activeImage != 0 ) {
					settings.activeImage = settings.activeImage - 1;
					_set_image_to_view();
					_disable_keyboard_navigation();
				}
			}
			// Verify the key to show the next image
			if ( ( key == settings.keyToNext ) || ( keycode == 39 ) ) {
				// If we�re not showing the last image, call the next
				if ( settings.activeImage != ( settings.imageArray.length - 1 ) ) {
					settings.activeImage = settings.activeImage + 1;
					_set_image_to_view();
					_disable_keyboard_navigation();
				}
			}
		}
		/**
		 * Preload prev and next images being showed
		 *
		 */
		function _preload_neighbor_images() {
			if ( (settings.imageArray.length -1) > settings.activeImage ) {
				objNext = new Image();
				objNext.src = settings.imageArray[settings.activeImage + 1][0];
			}
			if ( settings.activeImage > 0 ) {
				objPrev = new Image();
				objPrev.src = settings.imageArray[settings.activeImage -1][0];
			}
		}
		/**
		 * Remove jQuery lightBox plugin HTML markup
		 *
		 */
		function _finish() {
			$('#jquery-lightbox').remove();
			$('#jquery-overlay').fadeOut(function() { $('#jquery-overlay').remove(); });
			// Show some elements to avoid conflict with overlay in IE. These elements appear above the overlay.
			$('embed, object, select').css({ 'visibility' : 'visible' });
		}
		/**
		 / THIRD FUNCTION
		 * getPageSize() by quirksmode.com
		 *
		 * @return Array Return an array with page width, height and window width, height
		 */
		function ___getPageSize() {
			var xScroll, yScroll;
			if (window.innerHeight && window.scrollMaxY) {
				xScroll = window.innerWidth + window.scrollMaxX;
				yScroll = window.innerHeight + window.scrollMaxY;
			} else if (document.body.scrollHeight > document.body.offsetHeight){ // all but Explorer Mac
				xScroll = document.body.scrollWidth;
				yScroll = document.body.scrollHeight;
			} else { // Explorer Mac...would also work in Explorer 6 Strict, Mozilla and Safari
				xScroll = document.body.offsetWidth;
				yScroll = document.body.offsetHeight;
			}
			var windowWidth, windowHeight;
			if (self.innerHeight) {	// all except Explorer
				if(document.documentElement.clientWidth){
					windowWidth = document.documentElement.clientWidth;
				} else {
					windowWidth = self.innerWidth;
				}
				windowHeight = self.innerHeight;
			} else if (document.documentElement && document.documentElement.clientHeight) { // Explorer 6 Strict Mode
				windowWidth = document.documentElement.clientWidth;
				windowHeight = document.documentElement.clientHeight;
			} else if (document.body) { // other Explorers
				windowWidth = document.body.clientWidth;
				windowHeight = document.body.clientHeight;
			}
			// for small pages with total height less then height of the viewport
			if(yScroll < windowHeight){
				pageHeight = windowHeight;
			} else {
				pageHeight = yScroll;
			}
			// for small pages with total width less then width of the viewport
			if(xScroll < windowWidth){
				pageWidth = xScroll;
			} else {
				pageWidth = windowWidth;
			}
			arrayPageSize = new Array(pageWidth,pageHeight,windowWidth,windowHeight);
			return arrayPageSize;
		};
		/**
		 / THIRD FUNCTION
		 * getPageScroll() by quirksmode.com
		 *
		 * @return Array Return an array with x,y page scroll values.
		 */
		function ___getPageScroll() {
			var xScroll, yScroll;
			if (self.pageYOffset) {
				yScroll = self.pageYOffset;
				xScroll = self.pageXOffset;
			} else if (document.documentElement && document.documentElement.scrollTop) {	 // Explorer 6 Strict
				yScroll = document.documentElement.scrollTop;
				xScroll = document.documentElement.scrollLeft;
			} else if (document.body) {// all other Explorers
				yScroll = document.body.scrollTop;
				xScroll = document.body.scrollLeft;
			}
			arrayPageScroll = new Array(xScroll,yScroll);
			return arrayPageScroll;
		};
		 /**
		  * Stop the code execution from a escified time in milisecond
		  *
		  */
		 function ___pause(ms) {
			var date = new Date();
			curDate = null;
			do { var curDate = new Date(); }
			while ( curDate - date < ms);
		 };
		// Return the jQuery object for chaining. The unbind method is used to avoid click conflict when the plugin is called more than once
		return this.unbind('click').click(_initialize);
	};
})(jQuery); // Call and execute the function immediately passing the jQuery object
var sellerCredibility = {
    delay: 300, // ms
    id: 'sellerCredibility',
	sellerId:'',
	ishover:false,
    timeout: null,
    sellers: {},
    init: function(callback) {
        //
        // scan for elements of class "seller" and attach show/hide callbacks
        $(".seller").hover(
            function(){
                sellerCredibility.ishover=true;
				sellerCredibility.sellerId = $(this).attr('id');
            },
            function(){
                // callbacks will be attached to the popup itself
				sellerCredibility.ishover=false;
            }
        );

		$("#sellerCredibility").hover(
            function(){
                sellerCredibility.ishover=true;
				sellerCredibility.sellerId = $(this).attr('id');
            },
            function(){
                // callbacks will be attached to the popup itself
				sellerCredibility.ishover=false;
            }
        );

		setInterval(function(){
			if(sellerCredibility.ishover){
				sellerCredibility.writeWidgetContents(sellerCredibility.extractSellerId(sellerCredibility.sellerId));
	            sellerCredibility.show(sellerCredibility.extractSellerId(sellerCredibility.sellerId), sellerCredibility.extractAuctionId(sellerCredibility.sellerId));
			}else{
				sellerCredibility.hide();
			}
		},1000);


        //
        // hide the popup when the user clicks the close button
        $(".popup-close").click(
            function(){
                sellerCredibility.hide();
            }
        );

        //
        // hide the popup when we move the mouse out of the parent div
        $("div#"+this.id).mouseout(
            function(e){
                if (!e) {
                    e = window.event;
                }
                var reltg = (e.relatedTarget) ? e.relatedTarget : e.toElement;
                if (reltg) {
                    while (reltg.tagName != 'BODY' && reltg.tagName != 'HTML') {
                        if (reltg.id == this.id) {
                            return;
                        }
                        reltg = reltg.parentNode;
                    }
                }
                sellerCredibility.hide();
            }
        );

        //
        // append a list of userIds to the json parameter list
        var usernames = [];
        $(".seller").each(
            function() {
                usernames.push(sellerCredibility.extractSellerId(this.id));
            }
        );

        sellerCredibility.loadData(usernames, callback);

    },
    initInline : function(username, callback) {
        var usernames = [ username ];
        sellerCredibility.loadData(usernames, function() {
            // update the inlined div with data from json response
            sellerCredibility.writeWidgetContents(username);
            $("div#"+sellerCredibility.id).show();

            // call the original callback if passed in
            if (callback) {
                callback();
            }
        });

    },
    loadData : function (usernames, callback) {
        //
        // kick off the ajax request to load data for all sellers on the page
        //var jsonUrl = "js/json_search.js?";
        var jsonUrl = "/api/v1/seller_kpi//search?";
        var jsonParams = {
            "username"      :   sellerCredibility.unique(usernames),
            "period_days"   :   ["30","90","365"],
            "_select"       :   ["seller_id","period_days","approx_completed_transactions","pct_canceled_transactions","avg_days_to_ship","pct_honored_disputes","time_since_creation_text","pct_repeat_buyers","pct_canceled_transactions_rank","avg_days_to_ship_rank","pct_honored_disputes_rank","pct_repeat_buyers_rank","warehouse_seller_flag_denorm","username","first_post_time", "top_seller_flag", "show_data_flag", "new_seller_flag"],
            "_per_page"     :   ["99999"]
        };
        
        jsonUrl = jsonUrl + "_json=" + JSON.stringify(jsonParams);
        if ( jsonParams["username"].length == 0 ) {
        	return;
        }
        //get the seller kpi stats in the template itself.
        // get the json data back and add it to the sellerCredibility map
        if(typeof sellerData == "undefined" || sellerData==""){
            jQuery.ajax({
		  	type: "GET",
			url: jsonUrl,
			dataType: "json",
			success: function(data) {
                sellerData = data;
				if(sellerData && sellerData.result && sellerData.result.length!=0)
				{
                $.each(sellerData.result, function(i,item) {
                sellerCredibility.addSellerData(item.seller_id,
                    item.username,
                    item.period_days,
                    item.approx_completed_transactions,
                    item.pct_canceled_transactions,
                    item.avg_days_to_ship,
                    item.pct_honored_disputes,
                    item.time_since_creation_text,
                    item.pct_repeat_buyers,
                    item.pct_canceled_transactions_rank,
                    item.avg_days_to_ship_rank,
                    item.pct_honored_disputes_rank,
                    item.pct_repeat_buyers_rank,
                    item.warehouse_seller_flag_denorm,
                    item.first_post_time,
                    item.top_seller_flag,
                    item.new_seller_flag
                    );
                });
				}
                if (callback) {
                    callback();
                }
            }});
        }else{
			if(sellerData && sellerData.result && sellerData.result.length!=0)
			{
            $.each(sellerData.result, function(i,item) {
            sellerCredibility.addSellerData(item.seller_id,
                item.username,
                item.period_days,
                item.approx_completed_transactions,
                item.pct_canceled_transactions,
                item.avg_days_to_ship,
                item.pct_honored_disputes,
                item.time_since_creation_text,
                item.pct_repeat_buyers,
                item.pct_canceled_transactions_rank,
                item.avg_days_to_ship_rank,
                item.pct_honored_disputes_rank,
                item.pct_repeat_buyers_rank,
                item.warehouse_seller_flag_denorm,
                item.first_post_time,
                item.top_seller_flag,
                item.new_seller_flag
                );
            });
			}
            if (callback) {
                callback();
            }
        }

    },
    addSellerData: function(userId,
                            username,
                            period_days,
                            approx_completed_transactions,
                            pct_canceled_transactions,
                            avg_days_to_ship,
                            pct_honored_disputes,
                            time_since_creation_text,
                            pct_repeat_buyers,
                            pct_canceled_transactions_rank,
                            avg_days_to_ship_rank,
                            pct_honored_disputes_rank,
                            pct_repeat_buyers_rank,
                            warehouse_seller_flag,
                            first_post_time,
                            top_seller_flag,
                            new_seller_flag) {

        //
        // one map to hold the metrics, another map to hold percentile-rankings
        // for those metrics
        if (sellerCredibility.sellers[username] === undefined) {
            sellerCredibility.sellers[username] = {
                "meta" : {
                    "fulfilledBy": {},
                    "sellerName": {},
                    "memberSince": {},
                    "first_post_time" : {},
                    "top_seller_flag" : {},
                    "new_seller_flag" : {}
                },
                "metrics" : {
                    "period_days" : {
                        "30":{},
                        "90":{},
                        "365":{}
                    }
                },
                "percentiles" : {
                    "period_days" : {
                        "30":{},
                        "90":{},
                        "365":{}
                    }
                }
            };
        }

        sellerCredibility.sellers[username]["meta"] = {
            "fulfilledBy"      : sellerCredibility.getFulfilledByText(warehouse_seller_flag, username),
            "sellerName"       : username,
            "memberSince"      : time_since_creation_text,
            "first_post_time"  : first_post_time,
            "top_seller_flag"  : top_seller_flag,
            "new_seller_flag"  : new_seller_flag
        };

        sellerCredibility.sellers[username]["metrics"][period_days] = {
            "total_completed_transactions"      : approx_completed_transactions,
            "pct_canceled_transactions"         : pct_canceled_transactions,
            "avg_days_to_ship"                  : avg_days_to_ship,
            "pct_honored_disputes"              : pct_honored_disputes,
            "pct_repeat_buyers"                 : pct_repeat_buyers
        };

        sellerCredibility.sellers[username]["percentiles"][period_days] = {
            "pct_canceled_transactions_rank"          : pct_canceled_transactions_rank,
            "avg_days_to_ship_rank"                   : avg_days_to_ship_rank,
            "pct_honored_disputes_rank"               : pct_honored_disputes_rank,
            "pct_repeat_buyers_rank"                  : pct_repeat_buyers_rank
        };

        sellerCredibility.sellers[username].username = username;
    },
    writeWidgetContents: function(userId){

        var mySellerData = sellerCredibility.getSellerData(userId);

        if (sellerCredibility.getSellerData(userId)){

            var mySellerData = sellerCredibility.getSellerData(userId);

            //
            // write the "fulfilled by," "seller name," and "member since" text
            sellerCredibility.writeHeader(userId, mySellerData);

            //
            // show the top seller rank logo if all percentile-rankings return
            // at 90% or higher
            sellerCredibility.showTopSellerIcon(mySellerData);

            //
            // iterate over the mySellerData map, writing html out to cells in
            // the page
            sellerCredibility.writeMetrics(mySellerData);

            //
            // set the class (background img) for each metric's percentile div
            // based upon the order specific
            sellerCredibility.writePercentiles(mySellerData);

            // if we've got less than 10 total transactions or have been
            // around less than 1 month, don't show the full data table
            if ( sellerCredibility.showDataTable(mySellerData) ) {
                $("table#data-table").show();
                $("div#newSeller").hide();
            } else {
                $("table#data-table").hide();
                $("div#newSeller").show();
            }

        }
    },
    show: function(userId, auctionId){

        if(this.timeout) {
            clearTimeout(this.timeout);
        }

        if (sellerCredibility.getSellerData(userId)){

            var mySellerData = sellerCredibility.getSellerData(userId);

            //
            // show the div and position it relative to the link
            sellerCredibility.timeout = setTimeout(function(){
                $("div#"+sellerCredibility.id).show();
				if($.browser.msie && parseInt($.browser.version) == 6)$('.select-free').show();
                sellerCredibility.setPosition(userId, auctionId);
            }, sellerCredibility.delay);
        }

    },
    showTopSellerIcon: function(sellerData) {
    	if ( sellerData["meta"]["top_seller_flag"] )
    	{
			$("span.top-seller").show();
        } else {
			$("span.top-seller").hide();
        }
    },
    showDataTable: function(sellerData) {
        var dataTableVisible = true;
        if (sellerData["meta"]["new_seller_flag"] == 1)
            dataTableVisible = false;

        return dataTableVisible;
    },
    setPosition: function(userId, auctionId){
        var anchor = $("a#" + auctionId + "-" + userId);

        if(anchor){
            //
            // get the offset of the anchor triggering the popup
            var offset = anchor.offset();
            var left = offset.left;
            var top = offset.top;
            var anchorWidth = anchor.width();

            //
            // get the div back in its original state and check its height
            $("div#popup-top").removeClass();
            $("div#popup-bot").removeClass();
            $("div#popup-top").addClass("popup-top");
            $("div#popup-bot").addClass("popup-bot");

            //
            // height of the div itself
            var floaterHeight = $("div#"+this.id).height();

            //
            // determine how far / if the user has scrolled the page down
            var ScrollTop = document.body.scrollTop;
            if (ScrollTop == 0) {
                if (window.pageYOffset) {
                    ScrollTop = window.pageYOffset;
                } else {
                    ScrollTop = (document.body.parentElement) ? document.body.parentElement.scrollTop : 0;
                }
            }
			var leftPos_reco = parseInt((typeof expand_reco !="undefined" && expand_reco ) ? 300 :400); 
            //
            // flip the popup to the south if there's no space at the top of the
            // page
            if ((top-ScrollTop) < floaterHeight) {
                $("div#popup-top").removeClass();
                $("div#popup-bot").removeClass();
                $("div#popup-top").addClass("popup-flipped-top");
                $("div#popup-bot").addClass("popup-flipped-bot");
				$("div#"+this.id).css( {
                    position: 'absolute',
                    zIndex: 5000,
                    left: leftPos_reco,
                    top: top+12
                } );
            } else {
                $("div#"+this.id).css( {
                    position: 'absolute',
                    zIndex: 5000,
                    left: leftPos_reco,
                    top: top-floaterHeight+2
                } );
            }
        }
    },
    hide: function(){
        // 5, 17
//
        // hide the div and wipe the contents of the data table, ranking image,
        // and top-sellers image
        clearTimeout(this.timeout);
        $("div#"+this.id).hide();
		if($('.select-free'))$('.select-free').hide();
        $("span.top-seller").hide();
        $(".data").html('N/A');
        $(".rank div").removeClass();
        $(".rank div").html("N/A");
        $(".rank div").removeAttr("title");
    },
    writeMetrics: function(sellerData) {
        for (var period_days in sellerData["metrics"]) {
            if (period_days !== 'username') {
                for (var metric in sellerData["metrics"][period_days]) {
                    sellerCredibility.writeMetricCellContents(period_days, metric, sellerData["metrics"][period_days][metric]);
                }
            }
        }
    },
    writeHeader: function(userId, sellerData) {
        $("p#fulfilledBy").html(sellerData["meta"]["fulfilledBy"]);
        $("span#sellerName").html(sellerData["meta"]["sellerName"]);
        $("span#newSellerName").html(sellerData["meta"]["sellerName"]);
        $("span#memberSince").html(sellerData["meta"]["memberSince"]);
    },
    writePercentiles: function(sellerData) {
			var period_days = 90;
      for (var metric in sellerData["percentiles"][period_days]) {
          if (sellerData["percentiles"][period_days][metric] !== null) {
              $("td#" + metric + " div").html("&nbsp;");
              $("td#" + metric + " div").attr("class", "rank_" + Math.ceil(sellerData["percentiles"][period_days][metric]/10)*10);
              $("td#" + metric + " div").attr("title", sellerCredibility.getRankingToolTipText(Math.ceil(sellerData["percentiles"][period_days][metric]/10)*10));
          }
      }
    },
    writeMetricCellContents: function(period_days, metric, metricVal) {
        if (metricVal !== null && metricVal != "N/A") {
        	if ( metric != "total_completed_transactions" && metricVal > 0 )
        		metricVal = $.sprintf("%0.1f", metricVal);
            if (metric.substring(0,3) === 'pct')
                metricVal += '%';
        } else {
            metricVal = 'N/A';
        }
        $("td#" + period_days + "-" + metric).html(metricVal);
    },
    extractSellerId: function(id){
		seller = id.split('-');
		seller.shift();
		return seller.join('-');
    },
	extractAuctionId: function(id) {
		return id.split('-').shift();
	},
    getSellerData: function(userId) {
        return sellerCredibility.sellers[userId];
    },
    getRankingToolTipText: function(percentile) {
        var toolTipText = {
            "10"    :   "Bottom 10%",
            "20"    :   "Bottom 20%",
            "30"    :   "Bottom 30%",
            "40"    :   "Bottom 40%",
            "50"    :   "Bottom 50%",
            "60"    :   "Top 50%",
            "70"    :   "Top 40%",
            "80"    :   "Top 30%",
            "90"    :   "Top 20%",
            "100"   :   "Top 10%"
        }

        return toolTipText[percentile];
    },
    getFulfilledByText: function(warehouse_seller_flag, username) {
        var fulfilledByText = {
            "1"     :   "Fulfilled by: Liquidation.com",
            "0"     :   "Fulfilled by: " + username
        }

        return fulfilledByText[warehouse_seller_flag];
    },
    openWhatsThisPopup: function(url) {
        window.open (url, "WhatIsThisPopup",
            "width=575," +
            "height=575," +
            "channelmode=0," +
            "directories=0," +
            "location=0," +
            "menubar=0," +
            "resizable=0," +
            "scrollbars=1," +
            "status=0," +
            "titlebar=0," +
            "toolbar=0"
        );
    },
		unique: function(a) {
			var tmp = new Array(0);
			for ( var i=0; i<a.length; i++ ) {
				if ( !sellerCredibility.contains(tmp, a[i]) ) {
					tmp.length += 1;
					tmp[tmp.length-1] = a[i];
				}
			}
			return tmp;
		},
		contains: function(a, e) {
			for ( var j=0; j<a.length; j++ ) {
				if ( a[j] == e )
					return true;
			}
			return false;
		}
};

function _uGC(l,n,s) {
   // used to obtain a value form a string of key=value pairs
   if (!l || l=="" || !n || n=="" || !s || s=="") return "-";
   var i,i2,i3,c="-";
   i=l.indexOf(n);
   i3=n.indexOf("=")+1;
   if (i > -1) {
      i2=l.indexOf(s,i); if (i2 < 0) { i2=l.length; }
      c=l.substring((i+i3),i2);
   }
   return c;
}

function checkFirst(){
   // check if this is a first time visitor and if so, set flag
   newVisitor = 0;
   var myCookie = " " + document.cookie + ";";
   var searchName = "__utma=";
   var startOfCookie = myCookie.indexOf(searchName)
   if (startOfCookie == -1) {   // i.e. first time visitor
      newVisitor = 1;
   }
}

function grabReferrer(){
   // if first visit, grab utmz cookie values and put in utmv
   if (newVisitor) {
      var z = _uGC(document.cookie, "__utmz=", ";");
      urchin_source = _uGC(z,"utmcsr=", "|");
      urchin_medium = _uGC(z,"utmcmd=", "|");
      urchin_term = _uGC(z,"utmctr=", "|");
      urchin_content = _uGC(z,"utmcct=", "|");
      urchin_campaign = _uGC(z,"utmccn=", "|");
      var gclid = _uGC(z,"utmgclid=","|");
      if (gclid != "-")  {
		urchin_source.value = "google";
		urchin_medium.value = "cpc";
		urchin_term.value = "cpc";
		urchin_content.value = "cpc";
		urchin_campaign.value = "cpc";
      }
      if (urchin_term != "-"){
         urchin_term = urchin_term.replace(/%27/g, "'");      //decode
         urchin_term = urchin_term.replace(/%22/g, "'");      //decode
         //urchin_term = urchin_term.replace(/\+/g, " ");       //decode
         urchin_term = urchin_term.replace(/%20/g, "_");      //decode
		_gaq.push(['_setCustomVar',
			2,
			'First_Touch',
			urchin_term + "(" + urchin_source + "_" + urchin_medium,
			1
		]);
      }
   }
}