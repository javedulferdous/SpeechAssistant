require([ "assets/scripts/libs/q", "assets/scripts/libs/DomObserver" ], function(Q, DomObserver) {
    var CSE = {
        init: function() {
            var cardRatio = 1.5;
            var cardMultiplier = 3;
            DomObserver.ready(".product-contained", function(element) {
                if (element.className.indexOf("loaded") == -1) {
                    CSE.cardFormat(element, cardRatio, cardRatio);
                }
                CSE.cardQuickLook(this);
            });
            DomObserver.ready(".product-selected", function(element) {
                if (element.className.indexOf("loaded") == -1) {
                    CSE.cardFormat(element, cardRatio, cardMultiplier);
                    CSE.cardTouchEvents(window.outerWidth);
                }
            });
            DomObserver.ready(".CARDS .card-container", function(element) {
                if (element.classList.contains(".left") || element.classList.contains(".right") || element.classList.contains(".both")) {
                    var cardSKU = element.querySelector("[data-type]");
                    var cardPID = element.querySelector("[data-pid]").getAttribute("data-pid");
                    var cardTip = element.querySelector("[data-tipping]").getAttribute("data-tipping");
                    CSE.cardProperties(cardSKU.getAttribute("data-type"), cardPID, 1, cardTip).then(function(cardProperties) {
                        cardSKU.setAttribute("data-animation-type", cardProperties.cardType);
                        if (cardProperties.cardCorners !== null) {
                            cardSKU.setAttribute("data-round-corner", cardProperties.cardCorners);
                        }
                    });
                }
            });
        },
        cardFormat: function(card, ratioSize, multiplier) {
            var cardContained = card.querySelector(".card-contained");
            var cardType = cardContained.getAttribute("data-type");
            var cardPID = cardContained.getAttribute("data-pid");
            var cardTip = cardContained.getAttribute("data-tipping");
            var cardFeature = cardContained.getAttribute("data-feature");
            CSE.cardProperties(cardType, cardPID, multiplier, cardTip).then(function(cardProperties) {
                cardContained.setAttribute("data-type", cardProperties.cardType);
                if (cardProperties.cardCorners !== null) {
                    cardContained.setAttribute("data-round-corner", cardProperties.cardCorners);
                }
                CSE.cardMultiFold(card, cardProperties.cardType).then(function(card) {
                    CSE.cardDynamicSizing(card, cardProperties.cardSize).then(function(card) {
                        CSE.cardContainerSize(card, ratioSize).then(function(card) {
                            CSE.cardGateFold(card, cardType).then(function(card) {
                                card.classList.add("loaded");
                            });
                        });
                    });
                });
            });
        },
        cardContainerSize: function(card, ratioSize) {
            var cardCentered = card.querySelector(".card-centered");
            var deferred = Q.defer();
            if (ratioSize === undefined) {
                ratioSize = 2;
            }
            var newImage = new Image();
            newImage.src = card.querySelector(".card-outside img").src;
            newImage.addEventListener("load", function() {
                var cardHeight = newImage.naturalHeight;
                var cardWidth = newImage.naturalWidth;
                cardCentered.style.height = Math.ceil(cardHeight / ratioSize) + "px";
                cardCentered.style.width = Math.ceil(cardWidth / ratioSize) + "px";
                deferred.resolve(card);
            });
            return deferred.promise;
        },
        cardDynamicSizing: function(card, cardSize) {
            var deferred = Q.defer();
            var cardOutside = card.querySelector(".card-outside img");
            var cardInside = card.querySelector(".card-inside img");
            var cardContent = card.querySelector(".card-content img");
            var cardInsideSrcset = card.querySelector(".card-inside source");
            var cardContentSrcset = card.querySelector(".card-content source");
            var cardScaled = CSE.cardResponsiveImagery(window.outerHeight, window.outerWidth);
            cardSize = cardSize * cardScaled;
            cardOutside.src = cardOutside.getAttribute("data-src") + "?sw=" + cardSize;
            cardInside.src = cardInside.getAttribute("data-src") + "?sw=" + cardSize * 2;
            cardContent.src = cardContent.getAttribute("data-src") + "?sw=" + cardSize * 2;
            if (cardInsideSrcset) {
                cardInsideSrcset.setAttribute("srcset", cardInside.getAttribute("data-src") + "?sw=" + cardSize);
            }
            if (cardContentSrcset) {
                cardContentSrcset.setAttribute("srcset", cardInside.getAttribute("data-src") + "?sw=" + cardSize);
            }
            if (card.querySelector(".card-extension")) {
                var cardExtension = card.querySelector(".card-extension img");
                cardExtension.src = cardExtension.getAttribute("data-src") + "?sw=" + cardSize * 2;
            }
            deferred.resolve(card);
            return deferred.promise;
        },
        cardResponsiveImagery: function(windowH, windowW) {
            var cardScaling = 1;
            if (windowW <= 320) {
                cardScaling = .65;
            }
            if (windowW >= 321 && windowW <= 767) {
                cardScaling = .7;
            }
            if (windowW >= 768 && windowW <= 980) {
                cardScaling = .8;
            }
            if (windowW >= 981 && windowW <= 1024) {
                cardScaling = .75;
            }
            return cardScaling;
        },
        cardProperties: function(sku, pid, multiplier, tipping) {
            var deferred = Q.defer();
            var sizeTiny = 124;
            var sizeSmall = 132;
            var sizeMedium = 148;
            var sizeLarge = 182;
            var cardProperties = {
                cardSize: null,
                cardType: null,
                cardCorners: null
            };
            if (multiplier === undefined) {
                multiplier = 1;
            }
            var cardFold = sku.charAt(0);
            if (cardFold == "g") {
                sku = "g";
            }
            switch (sku) {
              case "i1":
              case "i14":
              case "i18":
              case "m13":
              case "n21":
              case "n22":
              case "n24":
              case "n25":
              case "n27":
              case "n29":
              case "p24":
              case "s1":
              case "s6":
              case "s11":
              case "s13":
              case "s14":
              case "s38":
              case "s39":
              case "s48":
              case "s56":
              case "q34":
              case "z10":
              case "z17":
              case "z21":
              case "z24":
              case "z25":
              case "z27":
              case "z28":
                cardProperties.cardSize = Math.round(sizeMedium * multiplier);
                cardProperties.cardType = "portrait";
                break;

              case "n22":
                cardProperties.cardSize = Math.round(sizeSmall * multiplier);
                cardProperties.cardType = "portrait";
                break;

              case "d13":
              case "d14":
              case "i59":
              case "s4":
              case "s12":
              case "s16":
              case "s40":
              case "z20":
                cardProperties.cardSize = Math.round(sizeLarge * multiplier);
                cardProperties.cardType = "landscape";
                break;

              case "d15":
              case "s37":
              case "z26":
              case "z39":
              case "z41":
                cardProperties.cardSize = Math.round(sizeSmall * multiplier);
                cardProperties.cardType = "landscape";
                break;

              case "a12":
              case "n19":
              case "n20":
              case "n26":
              case "n28":
              case "z22":
              case "z31":
                cardProperties.cardSize = Math.round(sizeMedium * multiplier);
                cardProperties.cardType = "landscape";
                break;

              case "z36":
              case "z40":
                cardProperties.cardSize = Math.round(sizeLarge * multiplier);
                cardProperties.cardType = "landscape";
                break;

              case "g":
                cardProperties.cardSize = Math.round(sizeMedium * multiplier);
                cardProperties.cardType = "gate";
                break;

              case "q37":
                cardProperties.cardSize = Math.round(sizeTiny * multiplier);
                cardProperties.cardType = "generic";
                break;

              case "x22":
              case "x26":
                cardProperties.cardSize = Math.round(sizeMedium * multiplier);
                cardProperties.cardType = "post-card";
                break;

              case "m14":
              case "m22":
              case "z1":
              case "z4":
              case "z5":
              case "z7":
              case "z23":
              case "z29":
              case "z30":
              case "z42":
              case "z43":
              case "z44":
              case "z45":
              case "z46":
              case "z47":
              case "z48":
              case "z49":
              case "z50":
              case "z51":
                cardProperties.cardSize = Math.round(sizeTiny * multiplier);
                cardProperties.cardType = "z-portrait";
                break;

              case "m9":
              case "m24":
              case "m26":
              case "m29":
                cardProperties.cardSize = Math.round(sizeTiny * multiplier);
                cardProperties.cardType = "m-portrait";
                break;

              case "m10":
              case "m23":
              case "m25":
                cardProperties.cardSize = Math.round(sizeTiny * multiplier);
                cardProperties.cardType = "generic";
                break;

              default:
                cardProperties.cardSize = Math.round(sizeTiny * multiplier);
                cardProperties.cardType = "generic";
                break;
            }
            if (cardFold == "m" || cardFold == "n" || cardFold == "z") {
                if (tipping != "n" || tipping != "null" || tipping != "") {
                    switch (sku) {
                      case "m24":
                      case "m26":
                      case "m29":
                      case "z10":
                      case "z17":
                      case "z21":
                      case "z24":
                      case "z25":
                      case "z27":
                      case "z28":
                      case "z42":
                      case "z43":
                      case "z44":
                      case "z45":
                      case "z46":
                      case "z47":
                      case "z48":
                      case "z49":
                      case "z50":
                      case "z51":
                        cardProperties.cardSize = Math.round(sizeMedium * multiplier);
                        cardProperties.cardType = "portrait";
                        break;

                      case "m23":
                      case "m25":
                      case "z22":
                      case "z26":
                      case "z31":
                      case "z36":
                      case "z39":
                      case "z40":
                      case "z41":
                      case "z36":
                      case "z39":
                      case "z40":
                      case "z41":
                      case "z52":
                        cardProperties.cardSize = Math.round(sizeMedium * multiplier);
                        cardProperties.cardType = "landscape";
                        break;
                    }
                }
            }
            switch (sku) {
              case "s38":
              case "z43":
                cardProperties.cardCorners = "3/8";
                break;

              case "s39":
              case "z44":
                cardProperties.cardCorners = "1/2";
                break;

              default:
                break;
            }
            switch (pid) {
              case "99G1232":
              case "199CEY1340":
              case "199CEY1297":
              case "199HKB1874":
              case "349CEY1148":
              case "499T1431":
              case "499XXO6257":
              case "499XXO6279":
              case "499XXO6237":
              case "499XXO6257":
              case "499XXO6287":
              case "499XXO6249":
              case "499XXO6289":
              case "499XXO6267":
              case "499XXO6269":
              case "499XXO6277":
              case "499XXO3179":
              case "499VKD3114":
              case "299VEE2579":
                cardProperties.cardCorners = "true";
                break;

              default:
                break;
            }
            deferred.resolve(cardProperties);
            return deferred.promise;
        },
        cardQuickLook: function(cardContained) {
            var quickLookTrigger = cardContained.querySelector("[data-quick-look-trigger]");
            quickLookTrigger.addEventListener("click", function(q) {
                q.preventDefault();
                var storeFrontMessage = cardContained.querySelector("[data-front-message]").getAttribute("data-front-message");
                var storeInsideMessage = cardContained.querySelector("[data-inside-message]").getAttribute("data-inside-message");
                var storeSKU;
                var storeURL;
                var modalQuickLook = document.querySelector("[data-quick-look-modal]");
                var modalQuickLookOverlay = document.querySelector("[data-quick-look-overlay]");
                var modalClose = modalQuickLook.querySelector("[data-quick-look-modal-close]");
                var modalImg = modalQuickLook.querySelector("[data-quick-look-modal-image]");
                var modalLink = modalQuickLook.querySelector("[data-quick-look-link]");
                var modalMessageContainer = modalQuickLook.querySelector(".quick-look-message");
                var modalMessageFront = modalQuickLook.querySelector("[data-quick-look-message-front]");
                var modalMessageInside = modalQuickLook.querySelector("[data-quick-look-message-inside]");
                var cseContainer = null;
                var cseCard = cardContained.querySelector(".card-contained");
                if (cardContained.querySelector("[data-type]")) {
                    storeSKU = cardContained.querySelector("[data-type]").getAttribute("data-type");
                }
                modalQuickLook.setAttribute("aria-hidden", "false");
                modalQuickLookOverlay.setAttribute("aria-hidden", "false");
                if (cseCard !== null) {
                    if (window.outerWidth >= 721) {
                        cseContainer = document.createElement("div");
                        modalImg.appendChild(cseContainer);
                        cseContainer.classList.add("product-selected");
                        cseContainer.innerHTML = cseCard.outerHTML;
                        setTimeout(function() {
                            cseContainer.querySelector("[data-type]").setAttribute("data-type", storeSKU);
                        }, 100);
                    }
                    modalMessageFront.innerHTML = '<div class="is-bold">Front message: </div>' + storeFrontMessage;
                    modalMessageInside.innerHTML = '<div class="is-bold">Inside message: </div>' + storeInsideMessage;
                    setTimeout(function() {
                        modalMessageContainer.scrollTop = 0;
                    }, 100);
                }
                modalClose.addEventListener("click", function(c) {
                    c.preventDefault();
                    modalQuickLook.setAttribute("aria-hidden", "true");
                    modalQuickLookOverlay.setAttribute("aria-hidden", "true");
                    modalImg.innerHTML = "";
                });
                modalQuickLookOverlay.addEventListener("click", function(o) {
                    o.preventDefault();
                    modalQuickLook.setAttribute("aria-hidden", "true");
                    modalQuickLookOverlay.setAttribute("aria-hidden", "true");
                    modalImg.innerHTML = "";
                });
            });
        },
        cardTouchEvents: function(windowW) {
            var triggerCard = document.querySelectorAll(".product-selected [data-type]");
            if (triggerCard && windowW <= 700) {
                for (var i = triggerCard.length - 1; i >= 0; i--) {
                    var touchstartX = 0;
                    var touchendX = 0;
                    triggerCard[i].addEventListener("touchstart", function(e) {
                        touchstartX = e.changedTouches[0].screenX;
                    });
                    triggerCard[i].addEventListener("touchend", function(e) {
                        touchendX = e.changedTouches[0].screenX;
                        if (touchstartX == touchendX) {
                            this.classList.toggle("hover");
                        } else if (touchstartX < touchendX) {
                            this.classList.remove("hover");
                        } else {
                            this.classList.add("hover");
                        }
                    });
                }
            }
        },
        cardGateFold: function(card, sku) {
            var deferred = Q.defer();
            var gate = sku.charAt(0) == "g";
            if (gate) {
                var cardContainer = card.querySelector(".card-centered");
                var cardOutside = card.querySelector(".card-outside");
                var cardInside = card.querySelector(".card-inside");
                var cardOutsideClone = cardOutside.cloneNode(true);
                var cardInsideClone = cardInside.cloneNode(true);
                cardContainer.appendChild(cardOutsideClone);
                cardContainer.appendChild(cardInsideClone);
                cardOutsideClone.classList.add("card-gate");
                cardInsideClone.classList.add("card-gate");
            }
            deferred.resolve(card);
            return deferred.promise;
        },
        cardMultiFold: function(card, cardType) {
            var deferred = Q.defer();
            if (cardType == "m-portrait") {
                var cardContainer = card.querySelector(".card-centered");
                var cardContent = card.querySelector(".card-content");
                var cardContentClone = cardContent.cloneNode(true);
                var cardExtensionCentered = document.createElement("div");
                var parentDiv = cardContent.parentNode;
                parentDiv.insertBefore(cardExtensionCentered, cardContent.nextSibling);
                cardExtensionCentered.classList.add("card-extension-centered");
                cardExtensionCentered.appendChild(cardContentClone);
                cardContentClone.classList.add("card-extension");
                cardContentClone.classList.remove("card-content");
                var dataSRC = cardContentClone.querySelector("img").getAttribute("data-src");
                cardContentClone.querySelector("img").setAttribute("data-src", dataSRC.replace("PV.2.", "PV.3."));
            }
            deferred.resolve(card);
            return deferred.promise;
        },
        cardLightUp: function(card, cardFeature, cardOutside, cardCentered) {
            var cardCentered = cardFeature.querySelector(".card-centered");
            var cardOutside = cardFeature.querySelector(".card-outside");
            var cardImg = cardFeature.querySelector("img");
            if (cardFeature != "" || cardFeature != "null" && cardFeature.search("Light") != -1) {
                var canvas = document.createElement("canvas");
                var canvasBg = document.createElement("div");
                var context = canvas.getContext("2d");
                cardOutside.appendChild(canvas);
                cardOutside.appendChild(canvasBg);
                canvas.classList.add("card-canvas");
                canvas.width = cardCentered.offsetWidth;
                canvas.height = cardCentered.offsetHeight;
                canvasBg.classList.add("card-canvas-bg");
                context.drawImage(cardImg, 0, 0, cardCentered.offsetWidth, cardCentered.offsetHeight);
                var frame = context.getImageData(0, 0, canvas.width, canvas.height);
                var length = frame.data.length;
                for (var i = 0; i < length; i++) {
                    var r = frame.data[i * 4 + 0];
                    var g = frame.data[i * 4 + 1];
                    var b = frame.data[i * 4 + 2];
                    if (r >= 150 && g <= 150 && b >= 150) {
                        frame.data[i * 4 + 3] = 0;
                    }
                }
                context.putImageData(frame, 0, 0);
                cardImg.parentElement.removeChild(cardImg);
            }
            deferred.resolve(card);
            return deferred.promise;
        }
    };
    CSE.init();
    return CSE;
});

window.onload = function() {
    var errorCard = document.querySelector('[data-type="portrait"]');
    if (!errorCard) return;
    setTimeout(function(c) {
        errorCard.classList.add("hover");
    }, 2e3);
};