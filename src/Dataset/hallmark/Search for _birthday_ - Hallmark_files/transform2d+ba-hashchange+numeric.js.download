/*
 * transform: A jQuery cssHooks adding cross-browser 2d transform capabilities to $.fn.css() and $.fn.animate()
 *
 * limitations:
 * - requires jQuery 1.4.3+
 * - Should you use the *translate* property, then your elements need to be absolutely positionned in a relatively positionned wrapper **or it will fail in IE678**.
 * - transformOrigin is not accessible
 *
 * latest version and complete README available on Github:
 * https://github.com/louisremi/jquery.transform.js
 *
 * Copyright 2011 @louis_remi
 * Licensed under the MIT license.
 *
 * This saved you an hour of work?
 * Send me music http://www.amazon.co.uk/wishlist/HNTU0468LQON
 *
 */
(function(l,J,u,m,K){function y(a){a=a.split(")");var b=l.trim,f=-1,e=a.length-1,d,h,g=z?new Float32Array(6):[],c=z?new Float32Array(6):[],k=z?new Float32Array(6):[1,0,0,1,0,0];g[0]=g[3]=k[0]=k[3]=1;for(g[1]=g[2]=g[4]=g[5]=0;++f<e;){d=a[f].split("(");h=b(d[0]);d=d[1];c[0]=c[3]=1;c[1]=c[2]=c[4]=c[5]=0;switch(h){case r+"X":c[4]=parseInt(d,10);break;case r+"Y":c[5]=parseInt(d,10);break;case r:d=d.split(",");c[4]=parseInt(d[0],10);c[5]=parseInt(d[1]||0,10);break;case v:d=w(d);c[0]=m.cos(d);c[1]=m.sin(d);
c[2]=-m.sin(d);c[3]=m.cos(d);break;case p+"X":c[0]=+d;break;case p+"Y":c[3]=d;break;case p:d=d.split(",");c[0]=d[0];c[3]=1<d.length?d[1]:d[0];break;case s+"X":c[2]=m.tan(w(d));break;case s+"Y":c[1]=m.tan(w(d));break;case x:d=d.split(","),c[0]=d[0],c[1]=d[1],c[2]=d[2],c[3]=d[3],c[4]=parseInt(d[4],10),c[5]=parseInt(d[5],10)}k[0]=g[0]*c[0]+g[2]*c[1];k[1]=g[1]*c[0]+g[3]*c[1];k[2]=g[0]*c[2]+g[2]*c[3];k[3]=g[1]*c[2]+g[3]*c[3];k[4]=g[0]*c[4]+g[2]*c[5]+g[4];k[5]=g[1]*c[4]+g[3]*c[5]+g[5];g=[k[0],k[1],k[2],
k[3],k[4],k[5]]}return k}function A(a){var b,f,e,d=a[0],h=a[1],g=a[2],c=a[3];d*c-h*g?(b=m.sqrt(d*d+h*h),d/=b,h/=b,e=d*g+h*c,g-=d*e,c-=h*e,f=m.sqrt(g*g+c*c),e/=f,c/f*d<g/f*h&&(d=-d,h=-h,e=-e,b=-b)):b=f=e=0;return[[r,[+a[4],+a[5]]],[v,m.atan2(h,d)],[s+"X",m.atan(e)],[p,[b,f]]]}function L(a,b){var f={start:[],end:[]},e=-1,d,h,g,c;("none"==a||G.test(a))&&(a="");("none"==b||G.test(b))&&(b="");a&&b&&!b.indexOf("matrix")&&B(a).join()==B(b.split(")")[0]).join()&&(f.origin=a,a="",b=b.slice(b.indexOf(")")+
1));if(a||b){if(a&&b&&a.replace(/(?:\([^)]*\))|\s/g,"")!=b.replace(/(?:\([^)]*\))|\s/g,""))f.start=A(y(a)),f.end=A(y(b));else for(a&&(a=a.split(")"))&&(d=a.length),b&&(b=b.split(")"))&&(d=b.length);++e<d-1;){a[e]&&(h=a[e].split("("));b[e]&&(g=b[e].split("("));c=l.trim((h||g)[0]);for(var k=f.start,m=H(c,h?h[1]:0),n=void 0;n=m.shift();)k.push(n);k=f.end;c=H(c,g?g[1]:0);for(m=void 0;m=c.shift();)k.push(m)}return f}}function H(a,b){var f=+!a.indexOf(p),e,d=a.replace(/e[XY]/,"e");switch(a){case r+"Y":case p+
"Y":b=[f,b?parseFloat(b):f];break;case r+"X":case r:case p+"X":e=1;case p:b=b?(b=b.split(","))&&[parseFloat(b[0]),parseFloat(1<b.length?b[1]:a==p?e||b[0]:f+"")]:[f,f];break;case s+"X":case s+"Y":case v:b=b?w(b):0;break;case x:return A(b?B(b):[1,0,0,1,0,0])}return[[d,b]]}function w(a){return~a.indexOf("deg")?parseInt(a,10)*(2*m.PI/360):~a.indexOf("grad")?parseInt(a,10)*(m.PI/200):parseFloat(a)}function B(a){a=/([^,]*),([^,]*),([^,]*),([^,]*),([^,p]*)(?:px)?,([^)p]*)(?:px)?/.exec(a);return[a[1],a[2],
a[3],a[4],a[5],a[6]]}u=u.createElement("div").style;var C=["OTransform","msTransform","WebkitTransform","MozTransform"],D=C.length,n,E,z="Float32Array"in J,q,I,F=/Matrix([^)]*)/,G=/^\s*matrix\(\s*1\s*,\s*0\s*,\s*0\s*,\s*1\s*(?:,\s*0(?:px)?\s*){2}\)\s*$/,r="translate",v="rotate",p="scale",s="skew",x="matrix";for(;D--;)C[D]in u&&(l.support.transform=n=C[D],l.support.transformOrigin=n+"Origin");n||(l.support.matrixFilter=E=""===u.filter);l.cssNumber.transform=l.cssNumber.transformOrigin=!0;n&&"transform"!=
n?(l.cssProps.transform=n,l.cssProps.transformOrigin=n+"Origin","MozTransform"==n?q={get:function(a,b){return b?l.css(a,n).split("px").join(""):a.style[n]},set:function(a,b){a.style[n]=/matrix\([^)p]*\)/.test(b)?b.replace(/matrix((?:[^,]*,){4})([^,]*),([^)]*)/,x+"$1$2px,$3px"):b}}:/^1\.[0-5](?:\.|$)/.test(l.fn.jquery)&&(q={get:function(a,b){return b?l.css(a,n.replace(/^ms/,"Ms")):a.style[n]}})):E&&(q={get:function(a,b,f){var e=b&&a.currentStyle?a.currentStyle:a.style;e&&F.test(e.filter)?(b=RegExp.$1.split(","),
b=[b[0].split("=")[1],b[2].split("=")[1],b[1].split("=")[1],b[3].split("=")[1]]):b=[1,0,0,1];l.cssHooks.transformOrigin?(a=l._data(a,"transformTranslate",K),b[4]=a?a[0]:0,b[5]=a?a[1]:0):(b[4]=e?parseInt(e.left,10)||0:0,b[5]=e?parseInt(e.top,10)||0:0);return f?b:x+"("+b+")"},set:function(a,b,f){var e=a.style,d,h;f||(e.zoom=1);b=y(b);f=["Matrix(M11="+b[0],"M12="+b[2],"M21="+b[1],"M22="+b[3],"SizingMethod='auto expand'"].join();h=(d=a.currentStyle)&&d.filter||e.filter||"";e.filter=F.test(h)?h.replace(F,
f):h+" progid:DXImageTransform.Microsoft."+f+")";if(l.cssHooks.transformOrigin)l.cssHooks.transformOrigin.set(a,b);else{if(d=l.transform.centerOrigin)e["margin"==d?"marginLeft":"left"]=-(a.offsetWidth/2)+a.clientWidth/2+"px",e["margin"==d?"marginTop":"top"]=-(a.offsetHeight/2)+a.clientHeight/2+"px";e.left=b[4]+"px";e.top=b[5]+"px"}}});q&&(l.cssHooks.transform=q);I=q&&q.get||l.css;l.fx.step.transform=function(a){var b=a.elem,f=a.start,e=a.end,d=a.pos,h="",g,c,k,t;f&&"string"!==typeof f||(f||(f=I(b,
n)),E&&(b.style.zoom=1),e=e.split("+=").join(f),l.extend(a,L(f,e)),f=a.start,e=a.end);for(g=f.length;g--;)switch(c=f[g],k=e[g],t=0,c[0]){case r:t="px";case p:t||(t="");h=c[0]+"("+m.round(1E5*(c[1][0]+(k[1][0]-c[1][0])*d))/1E5+t+","+m.round(1E5*(c[1][1]+(k[1][1]-c[1][1])*d))/1E5+t+")"+h;break;case s+"X":case s+"Y":case v:h=c[0]+"("+m.round(1E5*(c[1]+(k[1]-c[1])*d))/1E5+"rad)"+h}a.origin&&(h=a.origin+h);q&&q.set?q.set(b,h,1):b.style[n]=h};l.transform={centerOrigin:"margin"}})(jQuery,window,document,
Math);
/*
 * jQuery hashchange event - v1.3 - 7/21/2010
 * http://benalman.com/projects/jquery-hashchange-plugin/
 * 
 * Copyright (c) 2010 "Cowboy" Ben Alman
 * Dual licensed under the MIT and GPL licenses.
 * http://benalman.com/about/license/
 */
(function($,e,b){var c="hashchange",h=document,f,g=$.event.special,i=h.documentMode,d="on"+c in e&&(i===b||i>7);function a(j){j=j||location.href;return"#"+j.replace(/^[^#]*#?(.*)$/,"$1")}$.fn[c]=function(j){return j?this.bind(c,j):this.trigger(c)};$.fn[c].delay=50;g[c]=$.extend(g[c],{setup:function(){if(d){return false}$(f.start)},teardown:function(){if(d){return false}$(f.stop)}});f=(function(){var j={},p,m=a(),k=function(q){return q},l=k,o=k;j.start=function(){p||n()};j.stop=function(){p&&clearTimeout(p);p=b};function n(){var r=a(),q=o(m);if(r!==m){l(m=r,q);$(e).trigger(c)}else{if(q!==m){location.href=location.href.replace(/#.*/,"")+q}}p=setTimeout(n,$.fn[c].delay)}navigator.userAgent.match(/msie/i)!='null'&&!d&&(function(){var q,r;j.start=function(){if(!q){r=$.fn[c].src;r=r&&r+a();q=$('<iframe tabindex="-1" title="empty"/>').hide().one("load",function(){r||l(a());n()}).attr("src",r||"javascript:0").insertAfter("body")[0].contentWindow;h.onpropertychange=function(){try{if(event.propertyName==="title"){q.document.title=h.title}}catch(s){}}}};j.stop=k;o=function(){return a(q.location.href)};l=function(v,s){var u=q.document,t=$.fn[c].domain;if(v!==s){u.title=h.title;u.open();t&&u.write('<script>document.domain="'+t+'"<\/script>');u.close();q.location.hash=v}}})();return j})()})(jQuery,this);
/*
 *
 * Copyright (c) 2006-2011 Sam Collett (http://www.texotela.co.uk)
 * Dual licensed under the MIT (http://www.opensource.org/licenses/mit-license.php)
 * and GPL (http://www.opensource.org/licenses/gpl-license.php) licenses.
 * 
 * Version 1.3
 * Demo: http://www.texotela.co.uk/code/jquery/numeric/
 *
 */
(function($) {
/*
 * Allows only valid characters to be entered into input boxes.
 * Note: fixes value when pasting via Ctrl+V, but not when using the mouse to paste
  *      side-effect: Ctrl+A does not work, though you can still use the mouse to select (or double-click to select all)
 *
 * @name     numeric
 * @param    config      { decimal : "." , negative : true }
 * @param    callback     A function that runs if the number is not valid (fires onblur)
 * @author   Sam Collett (http://www.texotela.co.uk)
 * @example  $(".numeric").numeric();
 * @example  $(".numeric").numeric(","); // use , as separater
 * @example  $(".numeric").numeric({ decimal : "," }); // use , as separator
 * @example  $(".numeric").numeric({ negative : false }); // do not allow negative values
 * @example  $(".numeric").numeric(null, callback); // use default values, pass on the 'callback' function
 *
 */
$.fn.numeric = function(config, callback)
{
	if(typeof config === 'boolean')
	{
		config = { decimal: config };
	}
	config = config || {};
	// if config.negative undefined, set to true (default is to allow negative numbers)
	if(typeof config.negative == "undefined") config.negative = true;
	// set decimal point
	var decimal = (config.decimal === false) ? "" : config.decimal || ".";
	// allow negatives
	var negative = (config.negative === true) ? true : false;
	// callback function
	var callback = typeof callback == "function" ? callback : function(){};
	// set data and methods
	return this.data("numeric.decimal", decimal).data("numeric.negative", negative).data("numeric.callback", callback).keypress($.fn.numeric.keypress).keyup($.fn.numeric.keyup).blur($.fn.numeric.blur);
}

$.fn.numeric.keypress = function(e)
{
	// get decimal character and determine if negatives are allowed
	var decimal = $.data(this, "numeric.decimal");
	var negative = $.data(this, "numeric.negative");
	// get the key that was pressed
	var key = e.charCode ? e.charCode : e.keyCode ? e.keyCode : 0;
	// allow enter/return key (only when in an input box)
	if(key == 13 && this.nodeName.toLowerCase() == "input")
	{
		return true;
	}
	else if(key == 13)
	{
		return false;
	}
	var allow = false;
	// allow Ctrl+A
	if((e.ctrlKey && key == 97 /* firefox */) || (e.ctrlKey && key == 65) /* opera */) return true;
	// allow Ctrl+X (cut)
	if((e.ctrlKey && key == 120 /* firefox */) || (e.ctrlKey && key == 88) /* opera */) return true;
	// allow Ctrl+C (copy)
	if((e.ctrlKey && key == 99 /* firefox */) || (e.ctrlKey && key == 67) /* opera */) return true;
	// allow Ctrl+Z (undo)
	if((e.ctrlKey && key == 122 /* firefox */) || (e.ctrlKey && key == 90) /* opera */) return true;
	// allow or deny Ctrl+V (paste), Shift+Ins
	if((e.ctrlKey && key == 118 /* firefox */) || (e.ctrlKey && key == 86) /* opera */
	|| (e.shiftKey && key == 45)) return true;
	// if a number was not pressed
	if(key < 48 || key > 57)
	{
		/* '-' only allowed at start and if negative numbers allowed */
		if(this.value.indexOf("-") != 0 && negative && key == 45 && (this.value.length == 0 || ($.fn.getSelectionStart(this)) == 0)) return true;
		/* only one decimal separator allowed */
		if(decimal && key == decimal.charCodeAt(0) && this.value.indexOf(decimal) != -1)
		{
			allow = false;
		}
		// check for other keys that have special purposes
		if(
			key != 8 /* backspace */ &&
			key != 9 /* tab */ &&
			key != 13 /* enter */ &&
			key != 35 /* end */ &&
			key != 36 /* home */ &&
			key != 37 /* left */ &&
			key != 39 /* right */ &&
			key != 46 /* del */
		)
		{
			allow = false;
		}
		else
		{
			// for detecting special keys (listed above)
			// IE does not support 'charCode' and ignores them in keypress anyway
			if(typeof e.charCode != "undefined")
			{
				// special keys have 'keyCode' and 'which' the same (e.g. backspace)
				if(e.keyCode == e.which && e.which != 0)
				{
					allow = true;
					// . and delete share the same code, don't allow . (will be set to true later if it is the decimal point)
					if(e.which == 46) allow = false;
				}
				// or keyCode != 0 and 'charCode'/'which' = 0
				else if(e.keyCode != 0 && e.charCode == 0 && e.which == 0)
				{
					allow = true;
				}
			}
		}
		// if key pressed is the decimal and it is not already in the field
		if(decimal && key == decimal.charCodeAt(0))
		{
			if(this.value.indexOf(decimal) == -1)
			{
				allow = true;
			}
			else
			{
				allow = false;
			}
		}
	}
	else
	{
		allow = true;
	}
	return allow;
}

$.fn.numeric.keyup = function(e)
{
	var val = this.value;
	if(val.length > 0)
	{
		// get carat (cursor) position
		var carat = $.fn.getSelectionStart(this);
		// get decimal character and determine if negatives are allowed
		var decimal = $.data(this, "numeric.decimal");
		var negative = $.data(this, "numeric.negative");
		
		// prepend a 0 if necessary
		if(decimal != "")
		{
			// find decimal point
			var dot = val.indexOf(decimal);
			// if dot at start, add 0 before
			if(dot == 0)
			{
				this.value = "0" + val;
			}
			// if dot at position 1, check if there is a - symbol before it
			if(dot == 1 && val.charAt(0) == "-")
			{
				this.value = "-0" + val.substring(1);
			}
			val = this.value;
		}
		
		// if pasted in, only allow the following characters
		var validChars = [0,1,2,3,4,5,6,7,8,9,'-',decimal];
		// get length of the value (to loop through)
		var length = val.length;
		// loop backwards (to prevent going out of bounds)
		for(var i = length - 1; i >= 0; i--)
		{
			var ch = val.charAt(i);
			// remove '-' if it is in the wrong place
			if(i != 0 && ch == "-")
			{
				val = val.substring(0, i) + val.substring(i + 1);
			}
			// remove character if it is at the start, a '-' and negatives aren't allowed
			else if(i == 0 && !negative && ch == "-")
			{
				val = val.substring(1);
			}
			var validChar = false;
			// loop through validChars
			for(var j = 0; j < validChars.length; j++)
			{
				// if it is valid, break out the loop
				if(ch == validChars[j])
				{
					validChar = true;
					break;
				}
			}
			// if not a valid character, or a space, remove
			if(!validChar || ch == " ")
			{
				val = val.substring(0, i) + val.substring(i + 1);
			}
		}
		// remove extra decimal characters
		var firstDecimal = val.indexOf(decimal);
		if(firstDecimal > 0)
		{
			for(var i = length - 1; i > firstDecimal; i--)
			{
				var ch = val.charAt(i);
				// remove decimal character
				if(ch == decimal)
				{
					val = val.substring(0, i) + val.substring(i + 1);
				}
			}
		}
		// set the value and prevent the cursor moving to the end
		this.value = val;
		$.fn.setSelection(this, carat);
	}
}

$.fn.numeric.blur = function()
{
	var decimal = $.data(this, "numeric.decimal");
	var callback = $.data(this, "numeric.callback");
	var val = this.value;
	if(val != "")
	{
		var re = new RegExp("^\\d+$|\\d*" + decimal + "\\d+");
		if(!re.exec(val))
		{
			callback.apply(this);
		}
	}
}

$.fn.removeNumeric = function()
{
	return this.data("numeric.decimal", null).data("numeric.negative", null).data("numeric.callback", null).unbind("keypress", $.fn.numeric.keypress).unbind("blur", $.fn.numeric.blur);
}

// Based on code from http://javascript.nwbox.com/cursor_position/ (Diego Perini <dperini@nwbox.com>)
$.fn.getSelectionStart = function(o)
{
	if (o.createTextRange)
	{
		var r = document.selection.createRange().duplicate();
		r.moveEnd('character', o.value.length);
		if (r.text == '') return o.value.length;
		return o.value.lastIndexOf(r.text);
	} else return o.selectionStart;
}

// set the selection, o is the object (input), p is the position ([start, end] or just start)
$.fn.setSelection = function(o, p)
{
	// if p is number, start and end are the same
	if(typeof p == "number") p = [p, p];
	// only set if p is an array of length 2
	if(p && p.constructor == Array && p.length == 2)
	{
		if (o.createTextRange)
		{
			var r = o.createTextRange();
			r.collapse(true);
			r.moveStart('character', p[0]);
			r.moveEnd('character', p[1]);
			r.select();
		}
		else if(o.setSelectionRange)
		{
			o.focus();
			o.setSelectionRange(p[0], p[1]);
		}
	}
}

})(jQuery);