
var engineKey = "ohx9mwfcNMr4q2kJFzgT";
if (typeof (swiftTypeKey) !== 'undefined') {
    engineKey = swiftTypeKey;
}

function getParameterByName(name, url) {
    if (!url) url = window.location.href;
    name = name.replace(/[\[\]]/g, '\\$&');
    var regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),
        results = regex.exec(url);
    if (!results) return null;
    if (!results[2]) return '';
    return decodeURIComponent(results[2].replace(/\+/g, ' '));
}

function updateQueryStringParameter(key, value, uri) {

    if (!uri) uri = window.location.href;


    var re = new RegExp("([?&])" + key + "=.*?(&|$)", "i");
    var separator = uri.indexOf('?') !== -1 ? "&" : "?";
    if (uri.match(re)) {
        return uri.replace(re, '$1' + key + "=" + value + '$2');
    }
    else {
        return uri + separator + key + "=" + value;
    }
}

var config = {
    per_page: 20,
    engine_key: engineKey
};

function SearchRequest(query, page) {
    params = {
        'q': query,
        'page': page,
        'per_page': config.per_page,
        'engine_key': config.engine_key
    };

    return $.ajax({
        dataType: "json",
        url: "https://api.swiftype.com/api/v1/public/engines/search.json?callback=?",
        data: params,
        xhrFields: { withCredentials: true }
    });
}

var HtmlHelper = {
    MakeResultRow: function (record) {
        return '<a href="' + record.url + '" class="st-ui-result __swiftype_result ' + ((record.url.toLowerCase().includes('community.microcenter.com') ? 'community' : 'website')) + '" data-st-result-doc-id="' + record.id + '">' +
            
            '<span class="resultType">' + ((record.url.toLowerCase().includes('community.microcenter.com') ? 'Micro Center Community' : 'Micro Center Website')) + '</span>' +
            '    <span class="st-ui-type-heading">' + (record.highlight.title ? record.highlight.title : record.title) + '</span>' +
            (record.description ? ('    <span class="st-ui-type-detail">' + record.description + '</span>') : '<span class="st-ui-type-detail">' + record.body + '</span>') +
            '</a>';
    },
    MakeResultHeader: function (data) {
        return '<div class="st-query-present">' +
            '   Showing <strong> ' + (data.per_page * (data.current_page - 1) + 1) + '</strong>&ndash;<strong>' + (data.per_page * data.current_page) + '</strong> of <strong> ' + data.total_result_count + '</strong>' +
            '   <span class="st-ui-search-summary-query">for &ldquo;' + data.query + '&rdquo; </span>' +
            '</div>';
    },
    MakeResultFooter: function (data) {
        var max_page = data.num_pages;
        var start_page = Math.max(1, data.current_page - 3);
        var end_page = Math.min(data.current_page + 3, max_page);

        if (start_page == 2) start_page = 1;
        if (end_page == max_page - 1) end_page = max_page;

        var result = ""

        if (data.current_page != 1) {
            result += '<li><a href="' + updateQueryStringParameter("st-page", data.current_page - 1) + '"><<span class="hide-text">Previous page</span></a></li>';
        }

        if (start_page > 1) {
            result += '<li><a href="' + updateQueryStringParameter("st-page", 1) + '">1</a></li>';
            result += '<li>...</li> ';
        }

        for (var i = start_page; i <= end_page; ++i) {
            if (i == data.current_page) {
                result += '<li class="current">' + i + '</li>';
            } else {
                result += '<li><a href="' + updateQueryStringParameter("st-page", i) + '">' + i + '</a></li>';
            }
        }

        if (end_page < max_page) {
            result += '<li>...</li>';
            result += '<li><a href="' + updateQueryStringParameter("st-page", max_page) + '" > ' + max_page + '</a ></li>';
        }

        if (data.current_page != end_page) {
            result += '<li><a href="' + updateQueryStringParameter("st-page", data.current_page + 1) + '">><span class="hide-text">Next page</span></a></a></li>';
        }

        return '<div class="pagination"><ul class="pages inline">' + result + '</ul></div>';
    }
}

//$(function () {
//    var query = getParameterByName("Ntt") || getParameterByName("NTT") || getParameterByName("ekw");
//    if (query == null) return;
//    var page = getParameterByName("st-page") || 1;
   


//    SearchRequest(query, page)
//        .then(function (data) {

//            if (data.info.page.total_result_count <= 0) {
//                $(".searchToggleBar").hide();
//            }
//            else {
//                $(".searchToggleBar").show();
//                $(".contentSearchCount").html(data.info.page.total_result_count);
//                var qsPage = getParameterByName("st-page");
//                if (qsPage != null) {
//                    $(".productSearch").removeClass("active");
//                    $(".contentSearch").addClass("active");
//                    $("#content").hide();
//                    $("#st-search-container").show();
//                }
//            }

//            if (data.record_count == 0) return;

//            console.log(data);

//            var html = '<h3>Content Site Search</h3><div class="st-ui-container-primary_content st-position-container">' +
//                '<div class="st-ui-injected-search-summary st-search-summary" aria-live="polite">' +
//                HtmlHelper.MakeResultHeader(data.info.page) +
//                '</div>' +
//                '<div class="st-ui-injected-content st-search-results">' +
//                '<div class="st-query-present" style="">' +
//                data.records.page.map(x => HtmlHelper.MakeResultRow(x)).join('') +
//                '</div>' +
//                '</div>' +
//                '</div>' +
//                HtmlHelper.MakeResultFooter(data.info.page);

//            $("#st-search-container").html(html);
//        }).catch(function (error) {
//            console.error(error);
//        })

//});


$(document).ready(function () {

    $(".swiftPages a").click(function () {

     


        $(this).attr("href", updateQueryStringParameter("st-page", $(this).data("page"))) ;

      
    });

    
    $(".productSearch").click(function () {
        $(".productSearch").addClass("active");
        $(".contentSearch").removeClass("active");
        $("#st-search-container").hide();
        $("#content").show();
        
        return false;
    });

    $(".contentSearch").click(function () {
        $(".productSearch").removeClass("active");
        $(".contentSearch").addClass("active");
        $("#content").hide();
        $("#st-search-container").show();
     
        return false;
    });

});



