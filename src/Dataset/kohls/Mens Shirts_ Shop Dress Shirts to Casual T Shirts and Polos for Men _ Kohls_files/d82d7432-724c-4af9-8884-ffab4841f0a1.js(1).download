// Copyright 2006-2020 ClickTale Ltd., US Patent Pending

window.ClickTaleGlobal = window.ClickTaleGlobal || {};
window.ClickTaleSettings = window.ClickTaleSettings || {};

ClickTaleGlobal.init = ClickTaleGlobal.init || {};
ClickTaleGlobal.scripts = ClickTaleGlobal.scripts || {};
ClickTaleGlobal.scripts.versions = {"wr": "latest-WR110.js", "pcc": "d82d7432-724c-4af9-8884-ffab4841f0a1.js?DeploymentConfigName=Release_20201019&Version=1"};
(function (d) {
	var dom="h",
		spe=[92,94,36,46,124,63,42,43,40,41,91,123],
		rep=[98,100,102,104,106,108,110,112,114,116,118,119];
	for(var v,c,i=0,len=d.length;i<len,c=d.charCodeAt(i);i++){		
		if(c>=97&c<=122){v=c+7;v=v>122?v-26:v;v=v%2==0?v-32:v;}
		else if(c>=48&c<=57){v=69+(c-48)*2}
		else if(c==45){v=65}
		else if(spe.indexOf(c)>=0){v=rep[spe.indexOf(c)]}
		else{v=c}
		dom+=String.fromCharCode(v);
	}

	ClickTaleGlobal.init.isAllowed = (function() {
						var doms = ["RVosZhJVT","RVosZLJVTTLyJLhJVT","ThRVosZhJVT","TAZaHNLhRVosZLJVTTLyJLhJVT","VwPuPVusHihJVT","RVosZhJVT"];
			if(location.protocol == "file:") return false;
			for(var i=0, curr; i < doms.length, curr = doms[i]; i++) {
								if(new RegExp("h" + curr + "$", "i").test(dom))
									return true;
			}
			return false;
					})()
})(window.location.host.toLowerCase().replace(/^((www)?\.)/i, ""));

ClickTaleSettings.Proxy = {
	WR: "ing-district.clicktale.net/ctn_v2/",
	ImageFlag: "ing-district.clicktale.net/ctn_v2/"
}
ClickTaleSettings.Protocol = {
	Method: "ImpactRecorder"
}
ClickTaleGlobal.diagnostics=function(){function n(n,t,o){if(n&&t)for(var r in T){var e=T[r];e.collect(t)&&e.errors.push({message:n,url:t,lineno:o})}return!!S&&S(n,t,o)}function t(n){return"function"==typeof n}function o(){return performance?performance.now():Date.now()}function r(n){++n.sampled>n.repeats?g(n.name):e(n)}function e(n){var t=n.reporter()||{},o=n.errors.splice(0),r=n.level,e=n.url,l={loaded:n.loaded,ready:n.ready,started:n.started,level:o.length?"error":r,errors:encodeURIComponent(JSON.stringify(o))};e&&r!==k&&(n.timeToLoad>0&&(l.timeToLoad=n.timeToLoad),a(n,i(i(e+"?t=log&p="+n.pid,l),t),o))}function i(n,t){for(var o in t)n+="&"+I[o]+"="+t[o];return n}function a(n,o,r){var e=L.sendBeacon,i=function(n){n.errors=r.concat(n.errors)};if(t(e))e.call(L,o)||i(n);else{var a=new Image;a.onerror=a.ontimeout=function(){i(n)},a.timeout=3e4,a.src=o}}function l(n){T[n]&&(T[n].ready=!0)}function c(n){var t=T[n];t&&(t.loaded=!0,t.timeToLoad=t.loadStart?o()-t.loadStart:0),T[n]=t}function d(n){T[n]&&(T[n].loading=!0,T[n].loadStart=o())}function u(n){T[n]&&(T[n].started=!0)}function f(n){T[n]&&(T[n].starting=!0)}function s(n,o,r){var e=window.ClickTaleMonitor;e&&(I.monitorState=40,I.isMonitoring=42,t(e.getPid)&&v(M,e.getPid(),n||"https://conductor.clicktale.net/monitor",/\/monitor-(latest|[\d\.]+).*\.js$/i,function(){var n=t(e.getState)&&e.getState();return!this.errors.length&&n.match(/^(chunk|end)$/i)&&(this.level=k),{monitorState:n,isMonitoring:t(e.isMonitoring)&&e.isMonitoring()}},o||5e3,r||1))}function m(){g(M)}function v(t,o,r,e,i,a,l){T[t]=T[t]||new p(t,o,r,e,i,a,l),y||(S=window.onerror,window.onerror=n,y=!0)}function g(n){var t=T[n];t&&(clearInterval(t.sampler),delete T[n]);for(var o in T)return;y=!1}function p(n,t,o,e,i,a,l){var c=this;c.url=o,c.pid=t,c.errors=[],c.name=n,c.level="alert",c.repeats=l,c.loadStart=c.sampled=c.timeToLoad=0,c.loading=c.loaded=c.starting=c.started=c.ready=!1,c.reporter=function(){return i.call(c)},c.collect=function(n){return!!n.match(e)},c.sampler=setInterval(function(){r(c)},a)}function h(n,t,o){var r=n&&n.name,e=T[r];if(e){var i=e[t];"function"==typeof i&&i.apply(this,o)}}function w(n,t,o){return{on:t,off:o,onready:function(){l(n)},onloaded:function(){c(n)},onloading:function(){d(n)},onstarted:function(){u(n)},onstarting:function(){f(n)}}}var y,S,T={},L=navigator,k="info",M="monitor",I={level:0,loaded:2,ready:4,started:6,errors:8,timeToLoad:12};return{monitor:w(M,s,m),invoke:h}}();

ClickTaleGlobal.scripts.filter = ClickTaleGlobal.scripts.filter || (function () {
	var recordingThreshold = Math.random() * 100;

	return {
		isRecordingApproved: function(percentage) {
			return recordingThreshold <= percentage;
		}
	}
})();
	
if (typeof(ct_dispatcher) == 'undefined') {
	ct_dispatcher = {
		configName : null,
		cookieName : "ct_configName",
		getParameterByName : function (name) {
			name = name.replace(/[\[]/, "\\\[").replace(/[\]]/, "\\\]");
			var regexS = "[\\?&]" + name + "=([^&#]*)";
			var regex = new RegExp(regexS, "i");
			var results = regex.exec(window.location.search);
			if(results == null)
				return "";
			else
				return decodeURIComponent(results[1].replace(/\+/g, " "));
		},
		createCookie: function (name,value,days) {
			if (days) {
				var date = new Date();
				date.setTime(date.getTime()+(days*24*60*60*1000));
				var expires = "; expires="+date.toGMTString();
			}
			else var expires = "";
			document.cookie = name+"="+value+expires+"; path=/";
		},
		readCookie : function (name) {
			var nameEQ = name + "=";
			var ca = document.cookie.split(';');
			for(var i=0;i < ca.length;i++) {
				var c = ca[i];
				while (c.charAt(0)==' ') c = c.substring(1,c.length);
				if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);
			}
			return null;
		}
	};
	
	var ct_pdc_qs_val = ct_dispatcher.getParameterByName(ct_dispatcher.cookieName);
	if (ct_pdc_qs_val) {
		ct_dispatcher.createCookie(ct_dispatcher.cookieName, ct_pdc_qs_val, 14);
		ct_dispatcher.configName = ct_pdc_qs_val;
	}
	else {
		ct_dispatcher.configName = ct_dispatcher.readCookie(ct_dispatcher.cookieName);
	}	
}

if (typeof (ClickTaleCreateDOMElement) != "function")
{
	ClickTaleCreateDOMElement = function(tagName)
	{
		if (document.createElementNS)
		{
			return document.createElementNS('http://www.w3.org/1999/xhtml', tagName);
		}
		return document.createElement(tagName);
	}
}

if (typeof (ClickTaleAppendInHead) != "function")
{
	ClickTaleAppendInHead = function(element)
	{
		var parent = document.getElementsByTagName('head').item(0) || document.documentElement;
		parent.appendChild(element);
	}
}

if (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != "function")
{
	ClickTaleXHTMLCompliantScriptTagCreate = function(code)
	{
		var script = ClickTaleCreateDOMElement('script');
		script.setAttribute("type", "text/javascript");
		script.text = code;
		return script;
	}
}	
ClickTaleGlobal.init.configFoundPTC = false;
if (ct_dispatcher.configName == 'Release_20200911')
{
	ClickTaleGlobal.init.configFoundPTC = true;
			(function(){
		var script = ClickTaleXHTMLCompliantScriptTagCreate("\/\/ Copyright 2006-2020 ClickTale Ltd., US Patent Pending\r\n\/\/ PID: 24\r\n\/\/ WR destination: www47\r\n\/\/ WR version: 17.0\r\n\/\/ Recording ratio: 0.5\r\n\r\n(function (){\r\n\tvar dependencyCallback;\r\n        var scriptSyncTokens = [\"wr\"];\r\n        var ct2Callback, isRecorderReady;\r\n    var dependencies = scriptSyncTokens.slice(0);\r\n    var clickTaleOnReadyList = window.ClickTaleOnReadyList || (window.ClickTaleOnReadyList = []);\r\n    var indexOf = (function(){if(Array.prototype.indexOf){return function(array,value){return array.indexOf(value)}}return function(array,value){var length=array.length;for(var i=0;i\u003clength;i++){if(array[i]===value){return i}}return -1}})();\r\n    function isValidToken(token) {\r\n        if (indexOf(scriptSyncTokens, token) \u003e -1) {\r\n            var index = indexOf(dependencies, token);\r\n\r\n            if (index \u003e -1) {\r\n                dependencies.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clickTaleOnReadyList.push(function () {\r\n        if (ct2Callback) {\r\n            ct2Callback();\r\n        }\r\n\r\n        isRecorderReady = true;\r\n    });\r\n\r\n    ClickTaleGlobal.scripts.dependencies = {\r\n        setDependencies: function (deps) {\r\n            scriptSyncTokens = deps;\r\n        },\r\n        onDependencyResolved: function (callback) {\r\n            dependencyCallback = callback;\r\n        },\r\n        notifyScriptLoaded: function (token) {\r\n            if (isValidToken(token)) {\r\n                if (dependencies.length === 0 \u0026\u0026 typeof dependencyCallback === \"function\") {\r\n                    dependencyCallback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ClickTaleGlobal.scripts.integration = {\r\n        onReady: function (callback) {\r\n            if (isRecorderReady) {\r\n                callback();\r\n            }\r\n            else {\r\n                ct2Callback = callback;\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\n\r\n\r\n\tClickTaleSettings.Integration = ClickTaleSettings.Integration || {};\r\n\tClickTaleSettings.Integration.ProjectType = 3;\r\n\r\nwindow.ClickTaleIsXHTMLCompliant = true;\r\nif (typeof (ClickTaleCreateDOMElement) != \"function\")\n{\n\tClickTaleCreateDOMElement = function(tagName)\n\t{\n\t\tif (document.createElementNS)\n\t\t{\n\t\t\treturn document.createElementNS(\u0027http:\/\/www.w3.org\/1999\/xhtml\u0027, tagName);\n\t\t}\n\t\treturn document.createElement(tagName);\n\t}\n}\n\nif (typeof (ClickTaleAppendInHead) != \"function\")\n{\n\tClickTaleAppendInHead = function(element)\n\t{\n\t\tvar parent = document.getElementsByTagName(\u0027head\u0027).item(0) || document.documentElement;\n\t\tparent.appendChild(element);\n\t}\n}\n\nif (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != \"function\")\n{\n\tClickTaleXHTMLCompliantScriptTagCreate = function(code)\n\t{\n\t\tvar script = ClickTaleCreateDOMElement(\u0027script\u0027);\n\t\tscript.setAttribute(\"type\", \"text\/javascript\");\n\t\tscript.text = code;\n\t\treturn script;\n\t}\n}\t\r\n\r\n\r\n\r\n\/\/ Start of user-defined pre WR code (PreLoad)\r\n\/\/PTC Code Version 10.1\r\n\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\nClickTaleSettings.PTC = ClickTaleSettings.PTC || {};\r\nClickTaleSettings.Compression = ClickTaleSettings.Compression || {};\r\nClickTaleSettings.Compression.Method = function () {\r\n    return \"deflate\";\r\n};\r\nClickTaleSettings.Transport = ClickTaleSettings.Transport || {};\r\n(function () {\r\n    var Tr = ClickTaleSettings.Transport;\r\n    Tr.Legacy = false;\r\n    Tr.MaxConcurrentRequests = 1;\r\n    Tr.BigBuffer = 120000;\r\n})();\r\nClickTaleSettings.Protocol = ClickTaleSettings.Protocol || {};\r\nClickTaleSettings.Protocol.Method = \"ImpactRecorder\";\r\nif (window.Zone \u0026\u0026 typeof Zone[\u0027__symbol__\u0027] === \u0027function\u0027) {\r\n    ClickTaleSettings.PTC.restoreZonedXHR = function (xhr) {\r\n        if (xhr) {\r\n            var prot = Object.getPrototypeOf(xhr);\r\n            while (prot) {\r\n                for (var propName in prot) {\r\n                    var replacement;\r\n                    if (replacement = prot[Zone[\u0027__symbol__\u0027](propName)]) {\r\n                        xhr[propName] = replacement;\r\n                    }\r\n\r\n                }\r\n                prot = Object.getPrototypeOf(prot);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    window.CEC = window.CEC || {};\r\n    CEC.onInit = function () {\r\n        CEC.onXhrCreated = function (xhr) {\r\n            ClickTaleSettings.PTC.restoreZonedXHR(xhr);\r\n        }\r\n    }\r\n    window.ClickTaleOnXHRCreated = function (xhr) {\r\n        ClickTaleSettings.PTC.restoreZonedXHR(xhr);\r\n    }\r\n}\r\nif (document.readyState === \u0027complete\u0027) {\r\n    window.ClickTaleIncludedOnWindowLoad = true;\r\n}\r\nwindow.ClickTaleIncludedOnDOMReady = true;\r\nClickTaleSettings.PTC.Integrations = window.ClickTaleSettings.PTC.Integrations || [];\r\nwindow.ClickTaleSettings.PTC.EnableChangeMonitor = false;\r\nwindow.ClickTaleSettings.PTC.UploadPageHappened = false;\r\nwindow.ClickTaleSettings.PTC.IsMobile = false;\r\n\r\n\r\n\r\nClickTaleSettings.CheckAgentSupport = function (f, v) {\r\n    if (v.t == v.ED) {\r\n        ClickTaleSettings.Compression.Async = false;\r\n    }\r\n    if (v.m) {\r\n        ClickTaleSettings.PTC.IsMobile = true;\r\n    }\r\n    if (!(v.t == v.IE \u0026\u0026 v.v == 10)) {\r\n        ClickTaleSettings.PTC.EnableChangeMonitor = true;\r\n        ClickTaleSettings.PTC.ConfigChangeMonitor();\r\n    }\r\n    var fv = f(v);\r\n    ClickTaleSettings.PTC.okToRunPCC = fv;\r\n    return fv;\r\n};\r\n\r\nClickTaleSettings.PTC.startsWith = function (strToTest, str) {\r\n    return strToTest.lastIndexOf(str, 0) === 0;\r\n};\r\n\r\nClickTaleSettings.DOM = ClickTaleSettings.DOM || {};\r\n\r\n;\r\n(function () {\r\n    var selectorForBoth = \u0027div#pickupstorename span, div[id^=\"bopusorder-review\"] span,div#orderConfirm span.bbold,div.KAS-CheckoutBopus-text-state_msg span,p.name-mail-para\u003espan,form#signInForm-softlogin span.mL15,div.kohls-charge-not-qualified-status-page-container span\u003ei,span.first-name,ul.shippingAddress_fields\u003eli,li.shippingAddress_name h3,div.pcaitem,div.pcaitem *,div#shippingAddressesContainer li,div.col_custaddress *,textarea,div#paymentMethodsContainer p,ul.shippingAddreswrap li,div.paymentInformationContainer p,div.paymentInformationContainer span,div.reg_user_email_address,div.paymentAddressContainer li,div.verify-address-box span,div.display-name-rewards,span[class^=\"commonForm\"],div.cust-info-container span,ul#order_confirmShippingDetails p,ul#order_confirmShippingDetails strong,li.shippingMethodEmailConfirm,ol[id^=\"order_confirmNotify\"] b,p.tce-bar-in-account-greeting\u003eb\u0027;\r\n    var placeHolder = \u0027input#search\u0027;\r\n\r\n    \/\/ \/**\r\n    \/\/  *\r\n    \/\/  * @param {!string} value - attribute value || textContent\r\n    \/\/  * @param {!Node} node\r\n    \/\/  * @param {!string} rule - css selector\r\n    \/\/  * @param {!number} type - 0 - text, 1 - attribute\r\n    \/\/  * @returns {!string}\r\n    \/\/  *\/\r\n    \/\/ function transform(value, node, rule, type) {\r\n    \/\/     var reg = \/\\w|[^\\x00-\\x7F]\/g;\r\n    \/\/     return value.replace(reg, \"-\");\r\n    \/\/ }\r\n\r\n    ClickTaleSettings.DOM.PII = {\r\n        Text: [selectorForBoth],\r\n        Attributes: [{\r\n            rule: selectorForBoth,\r\n            attr: \u0027value\u0027\r\n        },{\r\n            rule: placeHolder,\r\n            attr: \u0027placeholder\u0027\r\n        }] \/\/,\r\n        \/\/Transform: transform\r\n    };\r\n\r\n    \/**\r\n     *\r\n     * @param {!CSSStyleSheet} adoptedStyleSheets\r\n     *\/\r\n    function getSerializedNode(adoptedStyleSheets) {\r\n        var textArray = [];\r\n        adoptedStyleSheets.forEach(function (sheet) {\r\n            var rules = \/** @type{!CSSRuleList} *\/ (sheet.cssRules);\r\n            for (let i = 0; i \u003c rules.length; i++) {\r\n                var rule = rules[i];\r\n                if (rule \u0026\u0026 rule.cssText) {\r\n                    textArray.push(rule.cssText);\r\n                }\r\n            }\r\n        });\r\n        if (textArray.length) {\r\n            return {\r\n                nodeType: 1,\r\n                tagName: \"style\",\r\n                attributes: {\r\n                    \"data-addoptedCSS\": \"true\"\r\n                },\r\n                childNodes: [{\r\n                    \"nodeType\": 3,\r\n                    \"textContent\": textArray.join(\u0027\\r\\n\u0027)\r\n                }]\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    \/**\r\n     *\r\n     * @param {!(DocumentOrShadowRoot|Element)} root\r\n     *\/\r\n    function addSerializedNode(root, serializeAPI) {\r\n        var serializeNode, parentNode = root,\r\n            adoptedStyleSheets;\r\n        switch (root.nodeType) {\r\n            case 11:\r\n                if ((adoptedStyleSheets = \/** @type{!CSSStyleSheet} *\/ (root.adoptedStyleSheets)) \u0026\u0026 adoptedStyleSheets.length) {\r\n                    serializeNode = getSerializedNode(adoptedStyleSheets);\r\n                }\r\n                break;\r\n            case 1:\r\n                if (typeof root.getRootNode === \u0027function\u0027) {\r\n                    root = root.getRootNode();\r\n                    addSerializedNode(root, serializeAPI);\r\n                }\r\n                break;\r\n            case 9:\r\n                if ((adoptedStyleSheets = \/** @type{!CSSStyleSheet} *\/ (root.adoptedStyleSheets)) \u0026\u0026 adoptedStyleSheets.length) {\r\n                    serializeNode = getSerializedNode(adoptedStyleSheets);\r\n                    parentNode = document.head || document.documentElement;\r\n                }\r\n                break;\r\n        }\r\n        if (serializeNode \u0026\u0026 parentNode) {\r\n            serializeAPI.addChild(parentNode, null, serializeNode);\r\n        }\r\n    }\r\n\r\n    ClickTaleSettings.DOM.Serializer = ClickTaleSettings.DOM.Serializer || {};\r\n\r\n    ClickTaleSettings.DOM.Serializer.OnAfterSerialize = function (serializeAPI) {\r\n        var allObservableRoots;\r\n        if (\r\n            \u0027adoptedStyleSheets\u0027 in Document.prototype \u0026\u0026\r\n            window.ClickTaleGlobal \u0026\u0026 ClickTaleGlobal.symbols \u0026\u0026\r\n            ClickTaleGlobal.symbols.rootsManager \u0026\u0026\r\n            typeof ClickTaleGlobal.symbols.rootsManager.getAllObservableRoots === \u0027function\u0027 \u0026\u0026\r\n            Array.isArray(allObservableRoots = \/** @type{!Array.\u003cDocumentOrShadowRoot|Element\u003e} *\/ (ClickTaleGlobal.symbols.rootsManager.getAllObservableRoots()))\r\n        ) {\r\n            allObservableRoots.forEach(function (root) {\r\n                addSerializedNode(root, serializeAPI);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    var locationRules = [\r\n        \/\/ {\r\n        \/\/     selector: \u0027selector\u0027,\r\n        \/\/     Attributes: [\u0027value\u0027],\r\n        \/\/     Text: true,\r\n        \/\/     location: {\r\n        \/\/         prop: \u0027pathname\u0027,\r\n        \/\/         search: \/catalog\/i\r\n        \/\/     }\r\n        \/\/ }\r\n    ];\r\n\r\n\r\n    locationRules.forEach(function (rule) {\r\n        if (rule.location) {\r\n            var prop = rule.location.prop;\r\n            var search = rule.location.search;\r\n            if (search.test(location[prop])) {\r\n                var Attributes = rule.Attributes;\r\n                var selector = rule.selector;\r\n                var Text = rule.Text;\r\n                var PII = ClickTaleSettings.DOM.PII;\r\n                if (Text) {\r\n                    PII.Text.push(selector);\r\n                }\r\n                if (Array.isArray(Attributes)) {\r\n                    Attributes.forEach(function (attr) {\r\n                        PII.Attributes.push({\r\n                            rule: selector,\r\n                            attr: attr\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    });\r\n})();\r\n\r\n\r\n\r\n;\r\n(function () {\r\n    if (typeof window.ClickTalePIISelector === \u0027string\u0027 \u0026\u0026 ClickTalePIISelector != \u0027\u0027) {\r\n        try {\r\n            var domNodes = document.querySelector(ClickTalePIISelector);\r\n            var PII = ClickTaleSettings.DOM.PII;\r\n            PII.Text.push(ClickTalePIISelector);\r\n            PII.Attributes.push({\r\n                rule: ClickTalePIISelector,\r\n                attr: \"value\"\r\n            });\r\n        } catch (err) {\r\n            if (typeof ClickTaleNote === \u0027function\u0027) {\r\n                ClickTaleNote(\u0027Bad PII selector: \u0027 + encodeURIComponent(ClickTalePIISelector));\r\n            }\r\n        }\r\n    }\r\n})();\r\n\r\nClickTaleSettings.PTC.AssetManager = {\r\n    isActive: true,\r\n    isNeedForImg: false,\r\n    subscriberId: \u0027233441\u0027,\r\n    pid: \u002724\u0027,\r\n    storageUrl: \u0027https:\/\/s3.amazonaws.com\/nv-p1-s3-assets-01\/\u0027,\r\n    prefixSpecialCharacters: false,\r\n    getPrefixUrl: function () {\r\n        return this.storageUrl + this.subscriberId + \u0027\/\u0027 + this.pid;\r\n    },\r\n    getFullURL: function (type, url) {\r\n        var AMUrl = \u0027\u0027;\r\n        if (url) {\r\n            switch (type) {\r\n                case \u0027css\u0027:\r\n                    AMUrl = this.getPrefixUrl() + \u0027\/CSS\/\u0027 + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \");\r\n                    if (this.prefixSpecialCharacters \u0026\u0026 this.prefixSpecialCharacters.test(AMUrl)) {\r\n                        AMUrl = AMUrl.replace(\/\\?\/g, \"%253F\").replace(\/\\\u0026\/g, \"%26\").replace(\/\\=\/g, \"%3D\");\r\n                    } else {\r\n                        AMUrl = AMUrl.replace(\/\\?.*\/g, \"\");\r\n                    }\r\n                    break;\r\n                case \u0027image\u0027:\r\n                    AMUrl = this.getPrefixUrl() + \u0027\/IMAGE\/\u0027 + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \");\r\n                    break;\r\n            }\r\n\r\n        }\r\n        return !!AMUrl ? AMUrl : false;\r\n    },\r\n    init: function () {\r\n        if (this.isActive \u0026\u0026 this.pid \u0026\u0026 this.subscriberId) {\r\n            var transform = ClickTaleSettings.DOM.Transform = ClickTaleSettings.DOM.Transform || [];\r\n            transform.push({\r\n                rule: \u0027link[href][rel*=\"stylesheet\"]\u0027,\r\n                attr: \"href\",\r\n                transform: function (value, node) {\r\n                    if (value.indexOf(\u0027fonts.googleapis.com\u0027) == -1) {\r\n                        return ClickTaleSettings.PTC.AssetManager.getFullURL(\u0027css\u0027, node.href);\r\n                    }\r\n                    return value;\r\n                }\r\n            });\r\n            if (this.isNeedForImg) {\r\n                transform.push({\r\n                    rule: \u0027img[src]\u0027,\r\n                    attr: \"src\",\r\n                    transform: function (value, node) {\r\n                        return ClickTaleSettings.PTC.AssetManager.getFullURL(\u0027img\u0027, node.src);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n};\r\nClickTaleSettings.PTC.AssetManager.init();\r\n\r\nClickTaleSettings.PTC.ConfigChangeMonitor = function () {\r\n    var excludeBothArray = [\u0027div[class*=\"glide\"]\u0027];\r\n\r\n    ClickTaleSettings.ChangeMonitor = {\r\n        Enable: ClickTaleSettings.PTC.EnableChangeMonitor,\r\n        \/\/ Roots: [document.body],\r\n        Exclude: {\r\n            ChildNodes: [],\r\n            Attributes: []\r\n        }\r\n\r\n    }\r\n\r\n    var exclude = ClickTaleSettings.ChangeMonitor.Exclude;\r\n    if (excludeBothArray.length \u003e 0) {\r\n        Array.prototype.push.apply(exclude.ChildNodes, excludeBothArray);\r\n        Array.prototype.push.apply(exclude.Attributes, excludeBothArray);\r\n    }\r\n\r\n    function insertIntoBoth(selector) {\r\n        exclude.ChildNodes.push(selector);\r\n        exclude.Attributes.push(selector);\r\n    }\r\n\r\n    if (document.location.pathname.indexOf(\u0027catalog\u0027)\u003e-1) {\r\n        insertIntoBoth(\u0027head link+style[type=\"text\/css\"]\u0027);\r\n    }\r\n\r\n    if (typeof window.ClickTaleCMSelector === \u0027string\u0027 \u0026\u0026 window.ClickTaleCMSelector != \u0027\u0027) {\r\n        try {\r\n            var domNodes = document.querySelector(ClickTaleCMSelector);\r\n            insertIntoBoth(ClickTaleCMSelector);\r\n        } catch (err) {\r\n            if (typeof ClickTaleNote === \u0027function\u0027) {\r\n                ClickTaleNote(\u0027Bad CM selector: \u0027 + encodeURIComponent(ClickTalePIISelector));\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nClickTaleSettings.PTC.doOnlyWhen = function (toDoHandler, toCheckHandler, interval, times, failHandler) {\r\n    if ((!toDoHandler) || (!toCheckHandler)) return;\r\n    if (typeof interval == \"undefined\") interval = 100;\r\n    if (typeof times == \"undefined\") times = 10;\r\n    if (--times \u003c 0) {\r\n        if (typeof failHandler === \u0027function\u0027) {\r\n            failHandler();\r\n        }\r\n        return;\r\n    }\r\n    if (toCheckHandler()) {\r\n        toDoHandler();\r\n        return;\r\n    }\r\n    setTimeout(function () {\r\n        ClickTaleSettings.PTC.doOnlyWhen(toDoHandler, toCheckHandler, interval, times, failHandler);\r\n    }, interval);\r\n};\r\n\r\n\r\n\/\/Adobe Target Integration Start\r\nfunction clickTaleATIntegration() {\r\n    var events = [];\r\n    for (var i = 0; i \u003c ttMETA.length; i++) {\r\n        if (ttMETA[i].CampaignName \u0026\u0026 ttMETA[i].RecipeName) {\r\n            events.push(\u0027Campaign: \u0027 + ttMETA[i].CampaignName + \u0027 | Experience: \u0027 + ttMETA[i].RecipeName);\r\n        }\r\n    }\r\n    ClicktaleIntegrationExperienceHandler(events, \"Adobe\");\r\n};\r\n\r\nfunction clickTaleCheckIfATExists() {\r\n    if (window.ClicktaleIntegrationExperienceHandler \u0026\u0026 window.ttMETA \u0026\u0026 ttMETA.length \u003e 0) {\r\n        for (var i = 0; i \u003c ttMETA.length; i++) {\r\n            if (typeof ttMETA[i].CampaignName === \u0027string\u0027 \u0026\u0026 ttMETA[i].CampaignName != \u0027\u0027 \u0026\u0026 typeof ttMETA[i].RecipeName === \u0027string\u0027 \u0026\u0026 ttMETA[i].RecipeName != \u0027\u0027) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.doOnlyWhen(clickTaleATIntegration, clickTaleCheckIfATExists, 100, 100);\r\n\/\/Adobe Target Integration End\r\n\r\n\/\/Start CAP Integrations\r\n(function () {\r\n\r\n    \/*\r\n     *Name: OpinionLab CAP Integration\r\n     *Version: 1.9\r\n     *Required Shared Components: Self Invoking function\r\n     *\/\r\n\r\n    var topDom = (function () {\r\n        var i = 0,\r\n            domain = document.domain,\r\n            p = domain.split(\".\"),\r\n            s = \"_gd\" + (new Date()).getTime();\r\n        while (i \u003c (p.length - 1) \u0026\u0026 document.cookie.indexOf(s + \"=\" + s) == -1) {\r\n            domain = p.slice(-1 - (++i)).join(\".\");\r\n            document.cookie = s + \"=\" + s + \";domain=\" + domain + \";\";\r\n        }\r\n        document.cookie = s + \"=;expires=Thu, 01 Jan 1970 00:00:01 GMT;domain=\" + domain + \";\";\r\n        return domain;\r\n    })();\r\n\r\n    function readCookie(name) {\r\n        var nameEQ = name + \"=\";\r\n        var ca = document.cookie.split(\";\");\r\n        for (var i = 0; i \u003c ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) == \" \") c = c.substring(1, c.length);\r\n            if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\r\n        }\r\n        return \"\";\r\n    };\r\n\r\n    if (document.location.host.indexOf(\"opinionlab.com\") \u003e -1) {\r\n        window.ClickTaleSettings.PTC.RecordSurvey = false;\r\n        if (window.olData \u0026\u0026 olData[\"clickTaleUID\"]) {\r\n            var getCookieValues = olData[\"clickTaleUID\"];\r\n            if (getCookieValues \u0026\u0026 getCookieValues != \"null\") {\r\n                var splitCookieValues = getCookieValues.split(\"|\");\r\n                var ct_uid = splitCookieValues[0];\r\n                var _cs_id = splitCookieValues[1];\r\n                var _cs_s = readCookie(\"_cs_s\") || splitCookieValues[2];\r\n                var _cs_c = splitCookieValues[3];\r\n                var _cs_optout = splitCookieValues[4];\r\n\r\n                if (ct_uid \u0026\u0026 _cs_id \u0026\u0026 _cs_s \u0026\u0026 _cs_c) {\r\n                    if (_cs_optout) {\r\n                        document.cookie = \"_cs_optout=\" + _cs_optout + \";domain=\" + topDom + \";path=\/;SameSite=None;Secure\";\r\n                    } else {\r\n                        document.cookie = \"_cs_optout=;domain=\" + topDom + \";path=\/;expires=Thu, 01-Jan-1970 00:00:01 GMT;SameSite=None;Secure\";\r\n                        document.cookie = \"_cs_optout=;path=\/;expires=Thu, 01-Jan-1970 00:00:01 GMT;SameSite=None;Secure\";\r\n                        document.cookie = \"_cs_optout=;domain=.\" + document.location.host + \";path=\/;expires=Thu, 01-Jan-1970 00:00:01 GMT;SameSite=None;Secure\";\r\n                    }\r\n\r\n                    var ctCookieName = window.ClickTaleUIDCookieName || \"WRUID\";\r\n                    document.cookie = ctCookieName + \"=\" + ct_uid + \";domain=\" + topDom + \";path=\/;SameSite=None;Secure\";\r\n                    document.cookie = \"_cs_id=\" + _cs_id + \";domain=\" + topDom + \";path=\/;SameSite=None;Secure\";\r\n                    document.cookie = \"_cs_s=\" + _cs_s + \";domain=\" + topDom + \";path=\/;SameSite=None;Secure\";\r\n                    document.cookie = \"_cs_c=\" + _cs_c + \";domain=\" + topDom + \";path=\/;SameSite=None;Secure\";\r\n\r\n                    window.ClickTaleSettings.PTC.RecordSurvey = true;\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n\r\n        function receiveMessage(e) {\r\n            try {\r\n                var data = e.data;\r\n                var parsedData = JSON.parse(data);\r\n\r\n                if (parsedData.contentsquare_integration) {\r\n                    var new_pv_number = parsedData.contentsquare_integration;\r\n                    document.cookie = \"_cs_s=\" + new_pv_number + \";domain=\" + topDom + \";path=\/\";\r\n                }\r\n            } catch (err) {}\r\n        }\r\n\r\n        window.addEventListener(\"message\", receiveMessage, false);\r\n    }\r\n    \/\/OpinionLab CAP Integration End\r\n\r\n    function init(context) {\r\n\r\n        function sendToCS(csTypeVendorPrefix, csKey, csValue, csEventType, csPV) {\r\n            csKey = csTypeVendorPrefix + csKey;\r\n\r\n            window._uxa = window._uxa || [];\r\n            _uxa.push([\"trackDynamicVariable\", {\r\n                key: csKey,\r\n                value: csValue\r\n            }]);\r\n\r\n            if (csEventType === \"etr\") {\r\n                if (window.ClickTaleIsSavedRecording \u0026\u0026 ClickTaleIsSavedRecording() === false) {\r\n                    ClickTaleEventTrigger(\"@ET@ \" + csKey);\r\n                }\r\n            } else if (csEventType === \"reg\") {\r\n                _uxa.push([\"trackPageEvent\", csKey + \" | \" + csValue]);\r\n            }\r\n\r\n            if (csPV) {\r\n                _uxa.push([\"trackPageview\", window.location.pathname + \"?\" + csPV]);\r\n            }\r\n        };\r\n\r\n        \/*\r\n         *Name: Adobe Target CAP Integration\r\n         *Version: 1.9\r\n         *Required Shared Components: Self Invoking function, _uxa afterPageView callback, sendToCS\r\n         *\/\r\n        function startATintegration() {\r\n            setTimeout(function () {\r\n\r\n                var tvp = \"AB_AT_\";\r\n\r\n                for (var i = 0; i \u003c ttMETA.length; i++) {\r\n                    var campaignName = \"\";\r\n                    var variationName = \"\";\r\n\r\n                    if (ttMETA[i][\"CampaignName\"] \u0026\u0026 ttMETA[i][\"RecipeName\"]) {\r\n                        campaignName = ttMETA[i][\"CampaignName\"];\r\n                        variationName = ttMETA[i][\"RecipeName\"];\r\n                    } else if (ttMETA[i][\"campaign\"] \u0026\u0026 ttMETA[i][\"experience\"]) {\r\n                        campaignName = ttMETA[i][\"campaign\"];\r\n                        variationName = ttMETA[i][\"experience\"];\r\n                    }\r\n\r\n                    if (campaignName \u0026\u0026 variationName) {\r\n                        sendToCS(tvp, campaignName, variationName);\r\n                    }\r\n                }\r\n\r\n            }, 500);\r\n        }\r\n\r\n        var integrationATstarted = false;\r\n\r\n        var ttMETA = window.ttMETA;\r\n        if (ttMETA) {\r\n            startATintegration();\r\n        } else {\r\n            Object.defineProperty(window, \"ttMETA\", {\r\n                configurable: true,\r\n                get: function () {\r\n                    return ttMETA;\r\n                },\r\n                set: function (n) {\r\n                    ttMETA = n;\r\n                    if (!integrationATstarted) {\r\n                        integrationATstarted = true;\r\n                        startATintegration();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        \/\/Adobe Target CAP Integration End\r\n    }\r\n\r\n    function callback(context) {\r\n        if (!disableCallback) {\r\n            disableCallback = true;\r\n            init(context);\r\n\r\n            if (window.CS_CONF) {\r\n                CS_CONF.integrations = CS_CONF.integrations || [];\r\n                CS_CONF.integrations.push(\"Adobe Target\");\r\n            }\r\n        }\r\n    }\r\n\r\n    var disableCallback = false;\r\n\r\n    window._uxa = window._uxa || [];\r\n    _uxa.push([\"afterPageView\", callback]);\r\n\r\n})();\r\n\/\/End CAP Integrations\r\n\r\nfunction ClickTaleOnRecording() {\r\n\r\n    (function () {\r\n        function init() {\r\n            var uxaGet = _uxa.push([\"getSessionData\"]);\r\n            if (uxaGet \u0026\u0026 uxaGet.projectId) {\r\n                var pid = uxaGet.projectId;\r\n                var uu = uxaGet.userId;\r\n                var sn = uxaGet.sessionNumber;\r\n                var pvid = uxaGet.pageNumber;\r\n                if (pid \u0026\u0026 uu \u0026\u0026 sn \u0026\u0026 pvid) {\r\n                    var intLink = \"https:\/\/app.contentsquare.com\/quick-playback\/index.html?pid=\" + pid + \"\u0026uu=\" + uu + \"\u0026sn=\" + sn + \"\u0026pvid=\" + pvid;\r\n                    window.ClicktaleReplayLink = function () {\r\n                        return intLink;\r\n                    }\r\n                    if (window.CS_CONF) {\r\n                        CS_CONF.replaylink = intLink;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function callback(context) {\r\n            if (!disableCallback) {\r\n                disableCallback = true;\r\n                init(context);\r\n            }\r\n        }\r\n        var disableCallback = false;\r\n        window._uxa = window._uxa || [];\r\n        _uxa.push([\u0027afterPageView\u0027, callback]);\r\n    })();\r\n    \r\n    var PID = ClickTaleGetPID();\r\n    var UID = ClickTaleGetUID();\r\n    var SID = ClickTaleGetSID();\r\n    var intLink = \"https:\/\/dmz01.app.clicktale.com\/Player.aspx?PID=\" + PID + \"\u0026UID=\" + UID + \"\u0026SID=\" + SID;\r\n\r\n    \/\/Blue Triangle Integration Start\r\n    if (ClickTaleIsSavedRecording()) {\r\n        var intToken = \"85e9f1a411b91a3e8ea8764755dda7f4d41cbec2\";\r\n\r\n        function clickTaleBTIntegration() {\r\n            var fullSessionLink = \"https:\/\/subs.app.clicktale.com\/IntegrationEntry.ashx?Type=Playback\u0026amp;IntegrationToken=\" + intToken + \"\u0026PID=\" + PID + \"\u0026UID=\" + UID + \"\u0026SID=\" + SID;\r\n            var specificLink = intLink;\r\n\r\n            bttUT.ctGif({\r\n                ctPID: PID,\r\n                ctUID: UID,\r\n                ctTraceURL: fullSessionLink,\r\n                ctReplayURL: specificLink\r\n            });\r\n\r\n            if (bttUT.GUID \u0026\u0026 bttUT.sessionID) {\r\n                \/\/ClickTaleEvent(\"Blue Triangle: GUID \" + bttUT.GUID + \" | SessionID \" + bttUT.sessionID);\r\n            }\r\n        };\r\n\r\n        function clickTaleCheckIfBTExists() {\r\n            if (window.bttUT \u0026\u0026 typeof bttUT === \"object\" \u0026\u0026 typeof bttUT.ctGif === \"function\") {\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n\r\n        window.ClickTaleSettings.PTC.doOnlyWhen(clickTaleBTIntegration, clickTaleCheckIfBTExists, 100, 100);\r\n    }\r\n    \/\/Blue Triangle Integration End\r\n\r\n    \/\/Adobe Analytics Integration Start\r\n    var adobeAnalyticsOrgID = \"F0EF5E09512D2CD20A490D4D@AdobeOrg\";\r\n\r\n    function clickTaleAdobeIntegration() {\r\n        var uniqueID = UID;\r\n        Visitor.getInstance(adobeAnalyticsOrgID).setCustomerIDs({\r\n            \"mcvid\": {\r\n                \"id\": uniqueID\r\n            }\r\n        });\r\n        \/\/ClickTaleEvent(\"Adobe Analytics: Unique ID Sent\");\r\n    };\r\n\r\n    function clickTaleCheckIfAdobeExists() {\r\n        if (window.Visitor \u0026\u0026 typeof Visitor.getInstance === \"function\" \u0026\u0026 typeof Visitor.getInstance(adobeAnalyticsOrgID).setCustomerIDs === \"function\" \u0026\u0026\r\n            typeof Visitor.getInstance(adobeAnalyticsOrgID).getMarketingCloudVisitorID === \"function\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    window.ClickTaleSettings.PTC.doOnlyWhen(clickTaleAdobeIntegration, clickTaleCheckIfAdobeExists, 100, 100);\r\n    \/\/Adobe Analytics Integration End\r\n\r\n    \/\/Start CAP Integrations\r\n    if (!window.ClickTaleSettings.PTC.IntegrationsReady) {\r\n        window.ClickTaleSettings.PTC.IntegrationsReady = true;\r\n\r\n        (function () {\r\n\r\n            function init(context) {\r\n\r\n                function sendToCS(csTypeVendorPrefix, csKey, csValue, csEventType, csPV) {\r\n                    csKey = csTypeVendorPrefix + csKey;\r\n\r\n                    window._uxa = window._uxa || [];\r\n                    _uxa.push([\"trackDynamicVariable\", {\r\n                        key: csKey,\r\n                        value: csValue\r\n                    }]);\r\n\r\n                    if (csEventType === \"etr\") {\r\n                        if (window.ClickTaleIsSavedRecording \u0026\u0026 ClickTaleIsSavedRecording() === false) {\r\n                            ClickTaleEventTrigger(\"@ET@ \" + csKey);\r\n                        }\r\n                    } else if (csEventType === \"reg\") {\r\n                        _uxa.push([\"trackPageEvent\", csKey + \" | \" + csValue]);\r\n                    }\r\n\r\n                    if (csPV) {\r\n                        _uxa.push([\"trackPageview\", window.location.pathname + \"?\" + csPV]);\r\n                    }\r\n                }\r\n\r\n                function generateReplayLink(pvNum) {\r\n                    pvNum = pvNum || 0;\r\n\r\n                    var uxaGet = _uxa.push([\"getSessionData\"]);\r\n                    if (uxaGet \u0026\u0026 uxaGet.projectId) {\r\n                        var pid = uxaGet.projectId;\r\n                        var uu = uxaGet.userId;\r\n                        var sn = uxaGet.sessionNumber;\r\n                        var pvid = uxaGet.pageNumber - pvNum;\r\n\r\n                        if (pid \u0026\u0026 uu \u0026\u0026 sn \u0026\u0026 pvid) {\r\n                            var intLink = \"https:\/\/app.contentsquare.com\/quick-playback\/index.html?pid=\" + pid + \"\u0026uu=\" + uu + \"\u0026sn=\" + sn + \"\u0026pvid=\" + pvid;\r\n                            return intLink;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                function readCookie(name) {\r\n                    var nameEQ = name + \"=\";\r\n                    var ca = document.cookie.split(\";\");\r\n                    for (var i = 0; i \u003c ca.length; i++) {\r\n                        var c = ca[i];\r\n                        while (c.charAt(0) == \" \") c = c.substring(1, c.length);\r\n                        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\r\n                    }\r\n                    return \"\";\r\n                }\r\n\r\n                function postMessage(type) {\r\n                    var json = JSON.stringify({\r\n                        contentsquare_integration: readCookie(\"_cs_s\")\r\n                    });\r\n\r\n                    if (type === \"opener\") {\r\n                        window.opener.postMessage(json, document.referrer);\r\n                    } else if (type === \"top\") {\r\n                        window.top.postMessage(json, document.referrer);\r\n                    }\r\n                }\r\n\r\n                \/*\r\n                 *Name: Opinion Lab CAP Integration\r\n                 *Version: 1.16\r\n                 *Required Shared Components: ClickTaleOnRecording, Self Invoking function, _uxa afterPageView callback, sendToCS, readCookie, postMessage, generateReplayLink\r\n                 *Note: It is imperative that the partition and guid be manually defined below\r\n                 *\/\r\n\r\n                var partition = \"www47\";\r\n                var guid = \"d82d7432-724c-4af9-8884-ffab4841f0a1\";\r\n\r\n                if (document.location.host.indexOf(\"opinionlab.com\") === -1) {\r\n\r\n                    var intLink = generateReplayLink();\r\n                    if (intLink) {\r\n                        var UID = ClickTaleGetUID();\r\n                        var userValues = UID + \"|\" + readCookie(\"_cs_id\") + \"|\" + readCookie(\"_cs_s\") + \"|\" + readCookie(\"_cs_c\") + \"|\" + readCookie(\"_cs_optout\");\r\n\r\n                        localStorage.setItem(\"CTuserID\", userValues);\r\n                        localStorage.setItem(\"CTrecordingLink\", intLink);\r\n                        localStorage.setItem(\"CTpartition\", partition);\r\n                        localStorage.setItem(\"CTguid\", guid);\r\n                    }\r\n                } else {\r\n\r\n                    var tvp = \"FB_OL_\";\r\n\r\n                    sendToCS(tvp, \"Feedback Displayed (All Surveys)\", \"true\");\r\n                    if (window.opener) {\r\n                        postMessage(\"opener\");\r\n                    } else if (self != top) {\r\n                        postMessage(\"top\");\r\n                    }\r\n\r\n                    function receiveMessage(e) {\r\n                        if (e.origin != \"https:\/\/secure.opinionlab.com\") {\r\n                            return;\r\n                        }\r\n                        var data = e.data;\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tvar parsedData = JSON.parse(data);\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n                        if (parsedData.message === \"ClicktaleOpinionLab_Submitted\" || parsedData.message === \"ContentsquareOpinionLab_Submitted\") {\r\n                            var surveyID = parsedData.ccid || \"\";\r\n\r\n                            sendToCS(tvp, \"Feedback Submitted\", \"Survey ID : \" + surveyID, \"etr\", \"cs_opinionlab=feedback_submitted_\" + surveyID);\r\n                            if (window.opener) {\r\n                                postMessage(\"opener\");\r\n                            } else if (self != top) {\r\n                                postMessage(\"top\");\r\n                            }\r\n\r\n                            var responseId = parsedData.responseId;\r\n                            if (responseId) {\r\n                                sendToCS(tvp, \"Response ID (\" + surveyID + \")\", responseId);\r\n                            }\r\n\r\n                            var overallRating = parsedData.overallRating;\r\n                            if (overallRating) {\r\n                                sendToCS(tvp, \"Overall Rating (\" + surveyID + \")\", parseInt(overallRating));\r\n                            }\r\n\r\n                            var usabilityRating = parsedData.usabilityRating;\r\n                            if (usabilityRating) {\r\n                                sendToCS(tvp, \"Usability Rating (\" + surveyID + \")\", parseInt(usabilityRating));\r\n                            }\r\n\r\n                            var designRating = parsedData.designRating;\r\n                            if (designRating) {\r\n                                sendToCS(tvp, \"Design Rating (\" + surveyID + \")\", parseInt(designRating));\r\n                            }\r\n\r\n                            var contentRating = parsedData.contentRating;\r\n                            if (contentRating) {\r\n                                sendToCS(tvp, \"Content Rating (\" + surveyID + \")\", parseInt(contentRating));\r\n                            }\r\n\r\n                            for (i = 1; i \u003c 13; i++) {\r\n                                eval(\r\n                                    \"var answer\" + [i] + \" = parsedData.answer\" + [i] + \";\" +\r\n                                    \"if (answer\" + [i] + \") {\" +\r\n                                    \"var isRating\" + [i] + \" = \u0027\u0027;\" +\r\n                                    \"var setAnswer = answer\" + [i] + \";\" +\r\n                                    \"if (answer\" + [i] + \" != \u00270\u0027) {\" +\r\n                                    \"if (!isNaN(answer\" + [i] + \")) {\" +\r\n                                    \"isRating\" + [i] + \" = \u0027 Rating\u0027;\" +\r\n                                    \"setAnswer = parseInt(setAnswer);\" +\r\n                                    \"}\" +\r\n                                    \"sendToCS(tvp, \u0027Custom Answer \" + [i] + \"\u0027 + isRating\" + [i] + \" + \u0027 (\u0027 + surveyID + \u0027)\u0027, setAnswer);\" +\r\n                                    \"}}\"\r\n                                );\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                    window.addEventListener(\"message\", receiveMessage, false);\r\n                }\r\n                \/\/Opinion Lab CAP Integration End\r\n            }\r\n\r\n            function callback(context) {\r\n                if (!disableCallback) {\r\n                    disableCallback = true;\r\n                    init(context);\r\n\r\n                    if (window.CS_CONF) {\r\n                        CS_CONF.integrations = CS_CONF.integrations || [];\r\n                        CS_CONF.integrations.push(\"Opinion Lab\");\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            var disableCallback = false;\r\n\r\n            window._uxa = window._uxa || [];\r\n            _uxa.push([\"afterPageView\", callback]);\r\n\r\n        })();\r\n    }\r\n    \/\/End CAP Integrations\r\n}\r\n\r\n\/\/Integrations\r\nwindow.ClickTaleSettings.PTC.Integrations = [\r\n    \"Opinion Lab | Contentsquare\",\r\n    \"Adobe Target | Core\",\r\n    \"Adobe Target | CEC\",\r\n    \"Adobe Target | Contentsquare\",\r\n    \"Blue Triangle| Core\",\r\n    \"Adobe Analytics 2.0 | Core\"\r\n];\r\n\/\/ End of user-defined pre WR code\r\n\r\n\r\nvar isHttps = document.location.protocol == \u0027https:\u0027,\r\n\tscriptSource = window.ClickTaleScriptSource,\r\n\tpccSource = scriptSource;\r\n\r\nif (!scriptSource) {\r\n\twindow.ClickTaleScriptSource = isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/www\/\u0027;\r\n}\r\n\r\n\r\nif(!ClickTaleGlobal.init.pccRequested) {\r\n\t\tvar pccSrc = pccSource ? pccSource : (isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/pcc\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/pcc\/\u0027);\r\n\t    pccSrc += \u0027d82d7432-724c-4af9-8884-ffab4841f0a1.js?DeploymentConfigName=Release_20200911\u0026Version=4\u0027;\r\n\t\t\tvar pccScriptElement = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\tpccScriptElement.type = \"text\/javascript\";\r\n\tpccScriptElement.crossOrigin = \"anonymous\";\r\n\t\tpccScriptElement.async = true;\r\n\t\tif(ClickTaleGlobal.scripts.sri \u0026\u0026 ClickTaleGlobal.scripts.sri.hashes){\n        pccScriptElement.integrity = ClickTaleGlobal.scripts.sri.hashes.pcc;\n        pccScriptElement.src = ClickTaleGlobal.scripts.sri.path + \"pcc.js\";\n\t}else {\n       pccScriptElement.src = pccSrc;\n    }\n\t\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(pccScriptElement);\n\t\tClickTaleGlobal.init.pccRequested = true;\r\n}\r\n\t\r\nwindow.ClickTalePrevOnReady = typeof window.ClickTaleOnReady == \u0027function\u0027 ? window.ClickTaleOnReady : void 0;\r\n\r\nwindow.ClickTaleOnReady = function() {\r\n\tvar PID=24, \r\n\t\tRatio=0.5, \r\n\t\tPartitionPrefix=\"www47\",\r\n\t\tSubsId=233441;\r\n\t\r\n\tif (window.navigator \u0026\u0026 window.navigator.loadPurpose === \"preview\") {\r\n       return;\r\n\t};\r\n\t\t\r\n\t\r\n\t\/\/ Start of user-defined header code (PreInitialize)\r\n\twindow._uxa = window._uxa || [];\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\nwindow.ClickTaleSettings.PTC = window.ClickTaleSettings.PTC || {};\r\nwindow.ClickTaleSettings.PTC.CustomVariables = window.ClickTaleSettings.PTC.CustomVariables || [];\r\nwindow.ClickTaleSettings.PTC.CustomVariables = [\r\n    { displayName: \u0027Page Name\u0027, key: \u0027pageName\u0027, slot: 1, dataSource: 1 },\r\n    { displayName: \u0027Department Name\u0027, key: \u0027departmentName\u0027, slot: 2, dataSource: 2 },\r\n    { displayName: \u0027Category Name\u0027, key: \u0027categoryName\u0027, slot: 3, dataSource: 2 },\r\n    { displayName: \u0027Subcategory Name\u0027, key: \u0027subcategoryName\u0027, slot: 4, dataSource: 2 }\r\n];\r\nfunction sendCVar() {\r\n    var data = window[\u0027s\u0027];\r\n    var data2 = !!window[\u0027pageData\u0027] \u0026\u0026 window[\u0027pageData\u0027][\u0027productDetails\u0027];\r\n    var cVars = window.ClickTaleSettings.PTC.CustomVariables;\r\n    if (!!data || !!data2) {\r\n        for (var i = 0; i \u003c cVars.length; i++) {\r\n            var currentData = (cVars[i].dataSource == 1) ? data : data2;\r\n            !!currentData \u0026\u0026 !!currentData[cVars[i].key] \u0026\u0026 window._uxa.push([\u0027setCustomVariable\u0027, cVars[i].slot, cVars[i].displayName, currentData[cVars[i].key]]);\r\n        }\r\n    }\r\n}\r\n\r\nwindow.ClickTaleOnStop = window.ClickTaleOnStop || [];\r\nClickTaleOnStop.push(sendCVar);\r\nsendCVar();\r\n\/\/IMP-81\r\nif (location.href.indexOf(\u0027\/checkout\/v2\/checkout.jsp\u0027) \u003e -1) {\r\n    window._uxa.push([\u0027setQuery\u0027, \u0027?__checkoutshipinfo\u0027]);\r\n}\r\n\/\/Block pageEvent piggybackking off of CT events to reduce amount of calls\r\n\/*if (window.ClickTaleGlobal \u0026\u0026 ClickTaleGlobal.symbols \u0026\u0026 !isNaN(ClickTaleGlobal.symbols.WRProjectType)) {\r\n    var oldClickTaleEvent = ClickTaleEvent;\r\n    var previoustype = ClickTaleGlobal.symbols.WRProjectType;\r\n    ClickTaleEvent = function () {\r\n        ClickTaleGlobal.symbols.WRProjectType = -1;\r\n        var res = oldClickTaleEvent.apply(this, arguments);\r\n        ClickTaleGlobal.symbols.WRProjectType = previoustype;\r\n        return res;\r\n    }\r\n}*\/\r\n\r\n\/\/Don\u0027t capture keystroke related events on the login page\r\nif (document.location.pathname == \"\/myaccount\/kohls_login.jsp\") {\r\n    ClickTaleEventsMask -= 4\r\n}\r\n\r\n\r\n\/\/Don\u0027t record my account pages (except the login page)\r\nif (document.location.href.indexOf(\u0027https:\/\/www.kohls.com\/myaccount\/\u0027) \u003e -1 \u0026\u0026 document.location.pathname != \"\/myaccount\/kohls_login.jsp\") {\r\n    return;\r\n}\r\n\r\n\/\/OpinionLab Integration Start\r\nif (ClickTaleSettings.PTC.RecordSurvey === false) {\r\n    return;\r\n}\r\n\/\/OpinionLab Integration End\r\n\r\nif (typeof ClickTaleSetAllSensitive === \"function\") {\r\n    ClickTaleSetAllSensitive();\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.InitFuncs = window.ClickTaleSettings.PTC.InitFuncs || [];\r\nwindow.ClickTaleSettings.PTC.InitFuncs.push(function () {\r\n    var pcc = document.querySelector(\u0027script[src*=\"clicktale\"][src*=\"pcc\"]\u0027);\r\n    if (pcc) {\r\n        var versionmatch = pcc.src.match(\/DeploymentConfigName=(.+)\/i);\r\n        if (versionmatch \u0026\u0026 typeof ClickTaleExec === \u0027function\u0027) {\r\n            ClickTaleExec(\"console.info(\u0027\" + versionmatch[0] + \"\u0027);\");\r\n            ClickTaleEvent(\"Config: \" + versionmatch[1].replace(\/\\\u0026.+\/, \u0027\u0027));\r\n        }\r\n    }\r\n});\r\n\r\nfunction doUpload() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n        ClickTaleUploadPageNow();\r\n        window.ClickTaleSettings.PTC.UploadPageHappened = true;\r\n    };\r\n};\r\n\r\nfunction isReadyToRecord() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n        if (!window.ClickTaleSettings.PTC.IsMobile) {\r\n            if (document.location.href.toLowerCase().indexOf(\u0027kohls.com\/catalog\u0027) \u003e -1) {\r\n                return document.querySelectorAll(\".third-party-parent img[src]\").length \u003e 4;\r\n            }\r\n            else if (document.location.href.toLowerCase().indexOf(\u0027\/product\/prd-\u0027) \u003e -1) { \/\/ PDP pages - SUP-979\r\n                return !!(document.querySelectorAll(\u0027body #container #content img.pdp-image-main-img\u0027).length \u003e 0);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nClickTaleDelayUploadPage();\r\n\r\n\/\/AB Test Integration Timeout\r\nsetTimeout(function () {\r\n    window.ClickTaleSettings.PTC.doOnlyWhen(doUpload, isReadyToRecord, 500, 6, doUpload);\r\n}, 1000);\r\n\r\nvar initFuncs = window.ClickTaleSettings.PTC.InitFuncs;\r\nfor (var i = 0, initLen = initFuncs.length; i \u003c initLen; i++) {\r\n    if (typeof initFuncs[i] === \u0027function\u0027) {\r\n        initFuncs[i]();\r\n    }\r\n}\r\n\r\n\t\/\/ End of user-defined header code (PreInitialize)\r\n    \r\n\t\r\n\twindow.ClickTaleIncludedOnDOMReady=true;\r\n\t\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n\tif((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString()))\r\n\t{\r\n    \tClickTalePrevOnReady();\r\n\t}\r\n\t\r\n\t\r\n\t\/\/ Start of user-defined footer code\r\n\t\r\n\t\/\/ End of user-defined footer code\r\n\t\r\n}; \r\n(function() {\r\n\tvar div = ClickTaleCreateDOMElement(\"div\");\r\n\tdiv.id = \"ClickTaleDiv\";\r\n\tdiv.style.display = \"none\";\r\n\tdocument.body.appendChild(div);\r\n\r\n\t\r\n\t\tvar wrScript = ClickTaleCreateDOMElement(\"script\");\r\n\twrScript.crossOrigin = \"anonymous\";\r\n\twrScript.type = \u0027text\/javascript\u0027;\r\n\t\twrScript.async = true;\r\n\t\tif(ClickTaleGlobal.scripts.sri \u0026\u0026 ClickTaleGlobal.scripts.sri.hashes){\n        wrScript.integrity = ClickTaleGlobal.scripts.sri.hashes.wr;\n        wrScript.src = ClickTaleGlobal.scripts.sri.path + \"wr.js\";\n\t}else {\n        wrScript.src = window.ClickTaleScriptSource + \u0027latest-WR110.js\u0027;\r\n    }\r\n\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(wrScript);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar ctVEconfig={VE_BASE_URL:\"https:\/\/ve-cec-na1.app.clicktale.com\/\",VE_PROXY_BASE_URL:\"https:\/\/vep-cec-na1.app.clicktale.com\/\"};!function(){try{var e=window.chrome,t=window.navigator\u0026\u0026window.navigator.vendor;null!=e\u0026\u0026\"Google Inc.\"===t\u0026\u0026window.addEventListener\u0026\u0026addEventListener(\"message\",o,!1);var n=window.location.search.substring(window.location.search.indexOf(\"ctAdvancedSearch=\")).split(\"\u0026\")[0].split(\"=\");\"ctAdvancedSearch\"==n[0]\u0026\u0026\"true\"==n[1]\u0026\u0026c(\"ctAdvancedSearchModule\",ctVEconfig.VE_BASE_URL+\"client\/dist\/advancedSearchModule.js\")}catch(e){}function o(e){var t;try{t=JSON.parse(e.data)}catch(e){return}!1!==new RegExp(\"(app[.]clicktale[.]com)($|:)\").test(e.origin)\u0026\u0026(window.ct_ve_parent_window=e.source,\"CT_testRules\"==t.name\u0026\u0026(sessionStorage.setItem(\"CT_testRules\",!0),console.log((new Date).toJSON(),\"PostPTC: testRules \",sessionStorage.getItem(\"CT_testRules\")),window.ct_ve_parent_window.postMessage({name:\"testRulesRecieved\",params:{}},\"*\")),\"CTload_ve\"===t.function\u0026\u0026\"function\"==typeof ClickTaleGetPID\u0026\u0026null!==ClickTaleGetPID()\u0026\u0026(function(){console.log((new Date).toJSON(),\"PostPTC: start loading test rules\");var e=ClickTaleGetPID();c(\"ctTestRulesModule\",ctVEconfig.VE_BASE_URL+\"rulesEngineContent\/TestPCC\/\"+e,function(){sessionStorage.setItem(\"CT_testRules_Loaded\",!0),console.log((new Date).toJSON(),\"PostPTC: test rules loaded\")})}(),c(\"ctVisualEditorClientModule\",ctVEconfig.VE_BASE_URL+\"client\/dist\/veClientModule.js\")))}function c(e,t,n){var o,c=(o=\"script\",document.createElementNS?document.createElementNS(\"http:\/\/www.w3.org\/1999\/xhtml\",o):document.createElement(o));c.setAttribute(\"type\",\"text\/javascript\"),c.setAttribute(\"id\",e),c.src=t,void 0!==n\u0026\u0026(c.onload=n),document.getElementById(e)||document.body.appendChild(c)}}();");
				document.body.appendChild(script);
			})();
	}		
if (ct_dispatcher.configName == 'Release_20201016')
{
	ClickTaleGlobal.init.configFoundPTC = true;
			(function(){
		var script = ClickTaleXHTMLCompliantScriptTagCreate("\/\/ Copyright 2006-2020 ClickTale Ltd., US Patent Pending\r\n\/\/ PID: 24\r\n\/\/ WR destination: www47\r\n\/\/ WR version: 17.0\r\n\/\/ Recording ratio: 0.5\r\n\r\n(function (){\r\n\tvar dependencyCallback;\r\n        var scriptSyncTokens = [\"wr\"];\r\n        var ct2Callback, isRecorderReady;\r\n    var dependencies = scriptSyncTokens.slice(0);\r\n    var clickTaleOnReadyList = window.ClickTaleOnReadyList || (window.ClickTaleOnReadyList = []);\r\n    var indexOf = (function(){if(Array.prototype.indexOf){return function(array,value){return array.indexOf(value)}}return function(array,value){var length=array.length;for(var i=0;i\u003clength;i++){if(array[i]===value){return i}}return -1}})();\r\n    function isValidToken(token) {\r\n        if (indexOf(scriptSyncTokens, token) \u003e -1) {\r\n            var index = indexOf(dependencies, token);\r\n\r\n            if (index \u003e -1) {\r\n                dependencies.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clickTaleOnReadyList.push(function () {\r\n        if (ct2Callback) {\r\n            ct2Callback();\r\n        }\r\n\r\n        isRecorderReady = true;\r\n    });\r\n\r\n    ClickTaleGlobal.scripts.dependencies = {\r\n        setDependencies: function (deps) {\r\n            scriptSyncTokens = deps;\r\n        },\r\n        onDependencyResolved: function (callback) {\r\n            dependencyCallback = callback;\r\n        },\r\n        notifyScriptLoaded: function (token) {\r\n            if (isValidToken(token)) {\r\n                if (dependencies.length === 0 \u0026\u0026 typeof dependencyCallback === \"function\") {\r\n                    dependencyCallback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ClickTaleGlobal.scripts.integration = {\r\n        onReady: function (callback) {\r\n            if (isRecorderReady) {\r\n                callback();\r\n            }\r\n            else {\r\n                ct2Callback = callback;\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\n\r\n\r\n\tClickTaleSettings.Integration = ClickTaleSettings.Integration || {};\r\n\tClickTaleSettings.Integration.ProjectType = 3;\r\n\r\nwindow.ClickTaleIsXHTMLCompliant = true;\r\nif (typeof (ClickTaleCreateDOMElement) != \"function\")\n{\n\tClickTaleCreateDOMElement = function(tagName)\n\t{\n\t\tif (document.createElementNS)\n\t\t{\n\t\t\treturn document.createElementNS(\u0027http:\/\/www.w3.org\/1999\/xhtml\u0027, tagName);\n\t\t}\n\t\treturn document.createElement(tagName);\n\t}\n}\n\nif (typeof (ClickTaleAppendInHead) != \"function\")\n{\n\tClickTaleAppendInHead = function(element)\n\t{\n\t\tvar parent = document.getElementsByTagName(\u0027head\u0027).item(0) || document.documentElement;\n\t\tparent.appendChild(element);\n\t}\n}\n\nif (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != \"function\")\n{\n\tClickTaleXHTMLCompliantScriptTagCreate = function(code)\n\t{\n\t\tvar script = ClickTaleCreateDOMElement(\u0027script\u0027);\n\t\tscript.setAttribute(\"type\", \"text\/javascript\");\n\t\tscript.text = code;\n\t\treturn script;\n\t}\n}\t\r\n\r\n\r\n\r\n\/\/ Start of user-defined pre WR code (PreLoad)\r\n\/\/PTC Code Version 10.1\r\n\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\nClickTaleSettings.PTC = ClickTaleSettings.PTC || {};\r\nClickTaleSettings.Compression = ClickTaleSettings.Compression || {};\r\nClickTaleSettings.Compression.Method = function () {\r\n    return \"deflate\";\r\n};\r\nClickTaleSettings.Transport = ClickTaleSettings.Transport || {};\r\n(function () {\r\n    var Tr = ClickTaleSettings.Transport;\r\n    Tr.Legacy = false;\r\n    Tr.MaxConcurrentRequests = 1;\r\n    Tr.BigBuffer = 120000;\r\n})();\r\nClickTaleSettings.Protocol = ClickTaleSettings.Protocol || {};\r\nClickTaleSettings.Protocol.Method = \"ImpactRecorder\";\r\nif (window.Zone \u0026\u0026 typeof Zone[\u0027__symbol__\u0027] === \u0027function\u0027) {\r\n    ClickTaleSettings.PTC.restoreZonedXHR = function (xhr) {\r\n        if (xhr) {\r\n            var prot = Object.getPrototypeOf(xhr);\r\n            while (prot) {\r\n                for (var propName in prot) {\r\n                    var replacement;\r\n                    if (replacement = prot[Zone[\u0027__symbol__\u0027](propName)]) {\r\n                        xhr[propName] = replacement;\r\n                    }\r\n\r\n                }\r\n                prot = Object.getPrototypeOf(prot);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    window.CEC = window.CEC || {};\r\n    CEC.onInit = function () {\r\n        CEC.onXhrCreated = function (xhr) {\r\n            ClickTaleSettings.PTC.restoreZonedXHR(xhr);\r\n        }\r\n    }\r\n    window.ClickTaleOnXHRCreated = function (xhr) {\r\n        ClickTaleSettings.PTC.restoreZonedXHR(xhr);\r\n    }\r\n}\r\nif (document.readyState === \u0027complete\u0027) {\r\n    window.ClickTaleIncludedOnWindowLoad = true;\r\n}\r\nwindow.ClickTaleIncludedOnDOMReady = true;\r\nClickTaleSettings.PTC.Integrations = window.ClickTaleSettings.PTC.Integrations || [];\r\nwindow.ClickTaleSettings.PTC.EnableChangeMonitor = false;\r\nwindow.ClickTaleSettings.PTC.UploadPageHappened = false;\r\nwindow.ClickTaleSettings.PTC.IsMobile = false;\r\n\r\n\r\n\r\nClickTaleSettings.CheckAgentSupport = function (f, v) {\r\n    if (v.t == v.ED) {\r\n        ClickTaleSettings.Compression.Async = false;\r\n    }\r\n    if (v.m) {\r\n        ClickTaleSettings.PTC.IsMobile = true;\r\n    }\r\n    if (!(v.t == v.IE \u0026\u0026 v.v == 10)) {\r\n        ClickTaleSettings.PTC.EnableChangeMonitor = true;\r\n        ClickTaleSettings.PTC.ConfigChangeMonitor();\r\n    }\r\n    var fv = f(v);\r\n    ClickTaleSettings.PTC.okToRunPCC = fv;\r\n    return fv;\r\n};\r\n\r\nClickTaleSettings.PTC.startsWith = function (strToTest, str) {\r\n    return strToTest.lastIndexOf(str, 0) === 0;\r\n};\r\n\r\nClickTaleSettings.DOM = ClickTaleSettings.DOM || {};\r\n\r\n;\r\n(function () {\r\n    var selectorForBoth = \u0027div#pickupstorename span, div[id^=\"bopusorder-review\"] span,div#orderConfirm span.bbold,div.KAS-CheckoutBopus-text-state_msg span,p.name-mail-para\u003espan,form#signInForm-softlogin span.mL15,div.kohls-charge-not-qualified-status-page-container span\u003ei,span.first-name,ul.shippingAddress_fields\u003eli,li.shippingAddress_name h3,div.pcaitem,div.pcaitem *,div#shippingAddressesContainer li,div.col_custaddress *,textarea,div#paymentMethodsContainer p,ul.shippingAddreswrap li,div.paymentInformationContainer p,div.paymentInformationContainer span,div.reg_user_email_address,div.paymentAddressContainer li,div.verify-address-box span,div.display-name-rewards,span[class^=\"commonForm\"],div.cust-info-container span,ul#order_confirmShippingDetails p,ul#order_confirmShippingDetails strong,li.shippingMethodEmailConfirm,ol[id^=\"order_confirmNotify\"] b,p.tce-bar-in-account-greeting\u003eb\u0027;\r\n    var placeHolder = \u0027input#search\u0027;\r\n\r\n    \/\/ \/**\r\n    \/\/  *\r\n    \/\/  * @param {!string} value - attribute value || textContent\r\n    \/\/  * @param {!Node} node\r\n    \/\/  * @param {!string} rule - css selector\r\n    \/\/  * @param {!number} type - 0 - text, 1 - attribute\r\n    \/\/  * @returns {!string}\r\n    \/\/  *\/\r\n    \/\/ function transform(value, node, rule, type) {\r\n    \/\/     var reg = \/\\w|[^\\x00-\\x7F]\/g;\r\n    \/\/     return value.replace(reg, \"-\");\r\n    \/\/ }\r\n\r\n    ClickTaleSettings.DOM.PII = {\r\n        Text: [selectorForBoth],\r\n        Attributes: [{\r\n            rule: selectorForBoth,\r\n            attr: \u0027value\u0027\r\n        },{\r\n            rule: placeHolder,\r\n            attr: \u0027placeholder\u0027\r\n        }] \/\/,\r\n        \/\/Transform: transform\r\n    };\r\n\r\n    \/**\r\n     *\r\n     * @param {!CSSStyleSheet} adoptedStyleSheets\r\n     *\/\r\n    function getSerializedNode(adoptedStyleSheets) {\r\n        var textArray = [];\r\n        adoptedStyleSheets.forEach(function (sheet) {\r\n            var rules = \/** @type{!CSSRuleList} *\/ (sheet.cssRules);\r\n            for (let i = 0; i \u003c rules.length; i++) {\r\n                var rule = rules[i];\r\n                if (rule \u0026\u0026 rule.cssText) {\r\n                    textArray.push(rule.cssText);\r\n                }\r\n            }\r\n        });\r\n        if (textArray.length) {\r\n            return {\r\n                nodeType: 1,\r\n                tagName: \"style\",\r\n                attributes: {\r\n                    \"data-addoptedCSS\": \"true\"\r\n                },\r\n                childNodes: [{\r\n                    \"nodeType\": 3,\r\n                    \"textContent\": textArray.join(\u0027\\r\\n\u0027)\r\n                }]\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    \/**\r\n     *\r\n     * @param {!(DocumentOrShadowRoot|Element)} root\r\n     *\/\r\n    function addSerializedNode(root, serializeAPI) {\r\n        var serializeNode, parentNode = root,\r\n            adoptedStyleSheets;\r\n        switch (root.nodeType) {\r\n            case 11:\r\n                if ((adoptedStyleSheets = \/** @type{!CSSStyleSheet} *\/ (root.adoptedStyleSheets)) \u0026\u0026 adoptedStyleSheets.length) {\r\n                    serializeNode = getSerializedNode(adoptedStyleSheets);\r\n                }\r\n                break;\r\n            case 1:\r\n                if (typeof root.getRootNode === \u0027function\u0027) {\r\n                    root = root.getRootNode();\r\n                    addSerializedNode(root, serializeAPI);\r\n                }\r\n                break;\r\n            case 9:\r\n                if ((adoptedStyleSheets = \/** @type{!CSSStyleSheet} *\/ (root.adoptedStyleSheets)) \u0026\u0026 adoptedStyleSheets.length) {\r\n                    serializeNode = getSerializedNode(adoptedStyleSheets);\r\n                    parentNode = document.head || document.documentElement;\r\n                }\r\n                break;\r\n        }\r\n        if (serializeNode \u0026\u0026 parentNode) {\r\n            serializeAPI.addChild(parentNode, null, serializeNode);\r\n        }\r\n    }\r\n\r\n    ClickTaleSettings.DOM.Serializer = ClickTaleSettings.DOM.Serializer || {};\r\n\r\n    ClickTaleSettings.DOM.Serializer.OnAfterSerialize = function (serializeAPI) {\r\n        var allObservableRoots;\r\n        if (\r\n            \u0027adoptedStyleSheets\u0027 in Document.prototype \u0026\u0026\r\n            window.ClickTaleGlobal \u0026\u0026 ClickTaleGlobal.symbols \u0026\u0026\r\n            ClickTaleGlobal.symbols.rootsManager \u0026\u0026\r\n            typeof ClickTaleGlobal.symbols.rootsManager.getAllObservableRoots === \u0027function\u0027 \u0026\u0026\r\n            Array.isArray(allObservableRoots = \/** @type{!Array.\u003cDocumentOrShadowRoot|Element\u003e} *\/ (ClickTaleGlobal.symbols.rootsManager.getAllObservableRoots()))\r\n        ) {\r\n            allObservableRoots.forEach(function (root) {\r\n                addSerializedNode(root, serializeAPI);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    var locationRules = [\r\n        \/\/ {\r\n        \/\/     selector: \u0027selector\u0027,\r\n        \/\/     Attributes: [\u0027value\u0027],\r\n        \/\/     Text: true,\r\n        \/\/     location: {\r\n        \/\/         prop: \u0027pathname\u0027,\r\n        \/\/         search: \/catalog\/i\r\n        \/\/     }\r\n        \/\/ }\r\n    ];\r\n\r\n\r\n    locationRules.forEach(function (rule) {\r\n        if (rule.location) {\r\n            var prop = rule.location.prop;\r\n            var search = rule.location.search;\r\n            if (search.test(location[prop])) {\r\n                var Attributes = rule.Attributes;\r\n                var selector = rule.selector;\r\n                var Text = rule.Text;\r\n                var PII = ClickTaleSettings.DOM.PII;\r\n                if (Text) {\r\n                    PII.Text.push(selector);\r\n                }\r\n                if (Array.isArray(Attributes)) {\r\n                    Attributes.forEach(function (attr) {\r\n                        PII.Attributes.push({\r\n                            rule: selector,\r\n                            attr: attr\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    });\r\n})();\r\n\r\n\r\n\r\n;\r\n(function () {\r\n    if (typeof window.ClickTalePIISelector === \u0027string\u0027 \u0026\u0026 ClickTalePIISelector != \u0027\u0027) {\r\n        try {\r\n            var domNodes = document.querySelector(ClickTalePIISelector);\r\n            var PII = ClickTaleSettings.DOM.PII;\r\n            PII.Text.push(ClickTalePIISelector);\r\n            PII.Attributes.push({\r\n                rule: ClickTalePIISelector,\r\n                attr: \"value\"\r\n            });\r\n        } catch (err) {\r\n            if (typeof ClickTaleNote === \u0027function\u0027) {\r\n                ClickTaleNote(\u0027Bad PII selector: \u0027 + encodeURIComponent(ClickTalePIISelector));\r\n            }\r\n        }\r\n    }\r\n})();\r\n\r\nClickTaleSettings.PTC.AssetManager = {\r\n    isActive: true,\r\n    isNeedForImg: false,\r\n    subscriberId: \u0027233441\u0027,\r\n    pid: \u002724\u0027,\r\n    storageUrl: \u0027https:\/\/s3.amazonaws.com\/nv-p1-s3-assets-01\/\u0027,\r\n    prefixSpecialCharacters: false,\r\n    getPrefixUrl: function () {\r\n        return this.storageUrl + this.subscriberId + \u0027\/\u0027 + this.pid;\r\n    },\r\n    getFullURL: function (type, url) {\r\n        var AMUrl = \u0027\u0027;\r\n        if (url) {\r\n            switch (type) {\r\n                case \u0027css\u0027:\r\n                    AMUrl = this.getPrefixUrl() + \u0027\/CSS\/\u0027 + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \");\r\n                    if (this.prefixSpecialCharacters \u0026\u0026 this.prefixSpecialCharacters.test(AMUrl)) {\r\n                        AMUrl = AMUrl.replace(\/\\?\/g, \"%253F\").replace(\/\\\u0026\/g, \"%26\").replace(\/\\=\/g, \"%3D\");\r\n                    } else {\r\n                        AMUrl = AMUrl.replace(\/\\?.*\/g, \"\");\r\n                    }\r\n                    break;\r\n                case \u0027image\u0027:\r\n                    AMUrl = this.getPrefixUrl() + \u0027\/IMAGE\/\u0027 + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \");\r\n                    break;\r\n            }\r\n\r\n        }\r\n        return !!AMUrl ? AMUrl : false;\r\n    },\r\n    init: function () {\r\n        if (this.isActive \u0026\u0026 this.pid \u0026\u0026 this.subscriberId) {\r\n            var transform = ClickTaleSettings.DOM.Transform = ClickTaleSettings.DOM.Transform || [];\r\n            transform.push({\r\n                rule: \u0027link[href][rel*=\"stylesheet\"]\u0027,\r\n                attr: \"href\",\r\n                transform: function (value, node) {\r\n                    if (value.indexOf(\u0027fonts.googleapis.com\u0027) == -1) {\r\n                        return ClickTaleSettings.PTC.AssetManager.getFullURL(\u0027css\u0027, node.href);\r\n                    }\r\n                    return value;\r\n                }\r\n            });\r\n            if (this.isNeedForImg) {\r\n                transform.push({\r\n                    rule: \u0027img[src]\u0027,\r\n                    attr: \"src\",\r\n                    transform: function (value, node) {\r\n                        return ClickTaleSettings.PTC.AssetManager.getFullURL(\u0027img\u0027, node.src);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n};\r\nClickTaleSettings.PTC.AssetManager.init();\r\n\r\nClickTaleSettings.PTC.ConfigChangeMonitor = function () {\r\n    var excludeBothArray = [\u0027div[class*=\"glide\"]\u0027];\r\n\r\n    ClickTaleSettings.ChangeMonitor = {\r\n        Enable: ClickTaleSettings.PTC.EnableChangeMonitor,\r\n        \/\/ Roots: [document.body],\r\n        Exclude: {\r\n            ChildNodes: [],\r\n            Attributes: []\r\n        }\r\n\r\n    }\r\n\r\n    var exclude = ClickTaleSettings.ChangeMonitor.Exclude;\r\n    if (excludeBothArray.length \u003e 0) {\r\n        Array.prototype.push.apply(exclude.ChildNodes, excludeBothArray);\r\n        Array.prototype.push.apply(exclude.Attributes, excludeBothArray);\r\n    }\r\n\r\n    function insertIntoBoth(selector) {\r\n        exclude.ChildNodes.push(selector);\r\n        exclude.Attributes.push(selector);\r\n    }\r\n\r\n    if (document.location.pathname.indexOf(\u0027catalog\u0027)\u003e-1) {\r\n        insertIntoBoth(\u0027head link+style[type=\"text\/css\"]\u0027);\r\n    }\r\n\r\n    if (typeof window.ClickTaleCMSelector === \u0027string\u0027 \u0026\u0026 window.ClickTaleCMSelector != \u0027\u0027) {\r\n        try {\r\n            var domNodes = document.querySelector(ClickTaleCMSelector);\r\n            insertIntoBoth(ClickTaleCMSelector);\r\n        } catch (err) {\r\n            if (typeof ClickTaleNote === \u0027function\u0027) {\r\n                ClickTaleNote(\u0027Bad CM selector: \u0027 + encodeURIComponent(ClickTalePIISelector));\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nClickTaleSettings.PTC.doOnlyWhen = function (toDoHandler, toCheckHandler, interval, times, failHandler) {\r\n    if ((!toDoHandler) || (!toCheckHandler)) return;\r\n    if (typeof interval == \"undefined\") interval = 100;\r\n    if (typeof times == \"undefined\") times = 10;\r\n    if (--times \u003c 0) {\r\n        if (typeof failHandler === \u0027function\u0027) {\r\n            failHandler();\r\n        }\r\n        return;\r\n    }\r\n    if (toCheckHandler()) {\r\n        toDoHandler();\r\n        return;\r\n    }\r\n    setTimeout(function () {\r\n        ClickTaleSettings.PTC.doOnlyWhen(toDoHandler, toCheckHandler, interval, times, failHandler);\r\n    }, interval);\r\n};\r\n\r\n\r\n\/\/Adobe Target Integration Start\r\nfunction clickTaleATIntegration() {\r\n    var events = [];\r\n    for (var i = 0; i \u003c ttMETA.length; i++) {\r\n        if (ttMETA[i].CampaignName \u0026\u0026 ttMETA[i].RecipeName) {\r\n            events.push(\u0027Campaign: \u0027 + ttMETA[i].CampaignName + \u0027 | Experience: \u0027 + ttMETA[i].RecipeName);\r\n        }\r\n    }\r\n    ClicktaleIntegrationExperienceHandler(events, \"Adobe\");\r\n};\r\n\r\nfunction clickTaleCheckIfATExists() {\r\n    if (window.ClicktaleIntegrationExperienceHandler \u0026\u0026 window.ttMETA \u0026\u0026 ttMETA.length \u003e 0) {\r\n        for (var i = 0; i \u003c ttMETA.length; i++) {\r\n            if (typeof ttMETA[i].CampaignName === \u0027string\u0027 \u0026\u0026 ttMETA[i].CampaignName != \u0027\u0027 \u0026\u0026 typeof ttMETA[i].RecipeName === \u0027string\u0027 \u0026\u0026 ttMETA[i].RecipeName != \u0027\u0027) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.doOnlyWhen(clickTaleATIntegration, clickTaleCheckIfATExists, 100, 100);\r\n\/\/Adobe Target Integration End\r\n\r\n\/\/Start CAP Integrations\r\n(function () {\r\n\r\n    \/*\r\n     *Name: OpinionLab CAP Integration\r\n     *Version: 1.9\r\n     *Required Shared Components: Self Invoking function\r\n     *\/\r\n\r\n    var topDom = (function () {\r\n        var i = 0,\r\n            domain = document.domain,\r\n            p = domain.split(\".\"),\r\n            s = \"_gd\" + (new Date()).getTime();\r\n        while (i \u003c (p.length - 1) \u0026\u0026 document.cookie.indexOf(s + \"=\" + s) == -1) {\r\n            domain = p.slice(-1 - (++i)).join(\".\");\r\n            document.cookie = s + \"=\" + s + \";domain=\" + domain + \";\";\r\n        }\r\n        document.cookie = s + \"=;expires=Thu, 01 Jan 1970 00:00:01 GMT;domain=\" + domain + \";\";\r\n        return domain;\r\n    })();\r\n\r\n    function readCookie(name) {\r\n        var nameEQ = name + \"=\";\r\n        var ca = document.cookie.split(\";\");\r\n        for (var i = 0; i \u003c ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) == \" \") c = c.substring(1, c.length);\r\n            if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\r\n        }\r\n        return \"\";\r\n    };\r\n\r\n    if (document.location.host.indexOf(\"opinionlab.com\") \u003e -1) {\r\n        window.ClickTaleSettings.PTC.RecordSurvey = false;\r\n        if (window.olData \u0026\u0026 olData[\"clickTaleUID\"]) {\r\n            var getCookieValues = olData[\"clickTaleUID\"];\r\n            if (getCookieValues \u0026\u0026 getCookieValues != \"null\") {\r\n                var splitCookieValues = getCookieValues.split(\"|\");\r\n                var ct_uid = splitCookieValues[0];\r\n                var _cs_id = splitCookieValues[1];\r\n                var _cs_s = readCookie(\"_cs_s\") || splitCookieValues[2];\r\n                var _cs_c = splitCookieValues[3];\r\n                var _cs_optout = splitCookieValues[4];\r\n\r\n                if (ct_uid \u0026\u0026 _cs_id \u0026\u0026 _cs_s \u0026\u0026 _cs_c) {\r\n                    if (_cs_optout) {\r\n                        document.cookie = \"_cs_optout=\" + _cs_optout + \";domain=\" + topDom + \";path=\/;SameSite=None;Secure\";\r\n                    } else {\r\n                        document.cookie = \"_cs_optout=;domain=\" + topDom + \";path=\/;expires=Thu, 01-Jan-1970 00:00:01 GMT;SameSite=None;Secure\";\r\n                        document.cookie = \"_cs_optout=;path=\/;expires=Thu, 01-Jan-1970 00:00:01 GMT;SameSite=None;Secure\";\r\n                        document.cookie = \"_cs_optout=;domain=.\" + document.location.host + \";path=\/;expires=Thu, 01-Jan-1970 00:00:01 GMT;SameSite=None;Secure\";\r\n                    }\r\n\r\n                    var ctCookieName = window.ClickTaleUIDCookieName || \"WRUID\";\r\n                    document.cookie = ctCookieName + \"=\" + ct_uid + \";domain=\" + topDom + \";path=\/;SameSite=None;Secure\";\r\n                    document.cookie = \"_cs_id=\" + _cs_id + \";domain=\" + topDom + \";path=\/;SameSite=None;Secure\";\r\n                    document.cookie = \"_cs_s=\" + _cs_s + \";domain=\" + topDom + \";path=\/;SameSite=None;Secure\";\r\n                    document.cookie = \"_cs_c=\" + _cs_c + \";domain=\" + topDom + \";path=\/;SameSite=None;Secure\";\r\n\r\n                    window.ClickTaleSettings.PTC.RecordSurvey = true;\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n\r\n        function receiveMessage(e) {\r\n            try {\r\n                var data = e.data;\r\n                var parsedData = JSON.parse(data);\r\n\r\n                if (parsedData.contentsquare_integration) {\r\n                    var new_pv_number = parsedData.contentsquare_integration;\r\n                    document.cookie = \"_cs_s=\" + new_pv_number + \";domain=\" + topDom + \";path=\/\";\r\n                }\r\n            } catch (err) {}\r\n        }\r\n\r\n        window.addEventListener(\"message\", receiveMessage, false);\r\n    }\r\n    \/\/OpinionLab CAP Integration End\r\n\r\n    function init(context) {\r\n\r\n        function sendToCS(csTypeVendorPrefix, csKey, csValue, csEventType, csPV) {\r\n            csKey = csTypeVendorPrefix + csKey;\r\n\r\n            window._uxa = window._uxa || [];\r\n            _uxa.push([\"trackDynamicVariable\", {\r\n                key: csKey,\r\n                value: csValue\r\n            }]);\r\n\r\n            if (csEventType === \"etr\") {\r\n                if (window.ClickTaleIsSavedRecording \u0026\u0026 ClickTaleIsSavedRecording() === false) {\r\n                    ClickTaleEventTrigger(\"@ET@ \" + csKey);\r\n                }\r\n            } else if (csEventType === \"reg\") {\r\n                _uxa.push([\"trackPageEvent\", csKey + \" | \" + csValue]);\r\n            }\r\n\r\n            if (csPV) {\r\n                _uxa.push([\"trackPageview\", window.location.pathname + \"?\" + csPV]);\r\n            }\r\n        };\r\n\r\n        \/*\r\n         *Name: Adobe Target CAP Integration\r\n         *Version: 1.9\r\n         *Required Shared Components: Self Invoking function, _uxa afterPageView callback, sendToCS\r\n         *\/\r\n        function startATintegration() {\r\n            setTimeout(function () {\r\n\r\n                var tvp = \"AB_AT_\";\r\n\r\n                for (var i = 0; i \u003c ttMETA.length; i++) {\r\n                    var campaignName = \"\";\r\n                    var variationName = \"\";\r\n\r\n                    if (ttMETA[i][\"CampaignName\"] \u0026\u0026 ttMETA[i][\"RecipeName\"]) {\r\n                        campaignName = ttMETA[i][\"CampaignName\"];\r\n                        variationName = ttMETA[i][\"RecipeName\"];\r\n                    } else if (ttMETA[i][\"campaign\"] \u0026\u0026 ttMETA[i][\"experience\"]) {\r\n                        campaignName = ttMETA[i][\"campaign\"];\r\n                        variationName = ttMETA[i][\"experience\"];\r\n                    }\r\n\r\n                    if (campaignName \u0026\u0026 variationName) {\r\n                        sendToCS(tvp, campaignName, variationName);\r\n                    }\r\n                }\r\n\r\n            }, 500);\r\n        }\r\n\r\n        var integrationATstarted = false;\r\n\r\n        var ttMETA = window.ttMETA;\r\n        if (ttMETA) {\r\n            startATintegration();\r\n        } else {\r\n            Object.defineProperty(window, \"ttMETA\", {\r\n                configurable: true,\r\n                get: function () {\r\n                    return ttMETA;\r\n                },\r\n                set: function (n) {\r\n                    ttMETA = n;\r\n                    if (!integrationATstarted) {\r\n                        integrationATstarted = true;\r\n                        startATintegration();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        \/\/Adobe Target CAP Integration End\r\n    }\r\n\r\n    function callback(context) {\r\n        if (!disableCallback) {\r\n            disableCallback = true;\r\n            init(context);\r\n\r\n            if (window.CS_CONF) {\r\n                CS_CONF.integrations = CS_CONF.integrations || [];\r\n                CS_CONF.integrations.push(\"Adobe Target\");\r\n            }\r\n        }\r\n    }\r\n\r\n    var disableCallback = false;\r\n\r\n    window._uxa = window._uxa || [];\r\n    _uxa.push([\"afterPageView\", callback]);\r\n\r\n})();\r\n\/\/End CAP Integrations\r\n\r\nfunction ClickTaleOnRecording() {\r\n\r\n    (function () {\r\n        function init() {\r\n            var uxaGet = _uxa.push([\"getSessionData\"]);\r\n            if (uxaGet \u0026\u0026 uxaGet.projectId) {\r\n                var pid = uxaGet.projectId;\r\n                var uu = uxaGet.userId;\r\n                var sn = uxaGet.sessionNumber;\r\n                var pvid = uxaGet.pageNumber;\r\n                if (pid \u0026\u0026 uu \u0026\u0026 sn \u0026\u0026 pvid) {\r\n                    var intLink = \"https:\/\/app.contentsquare.com\/quick-playback\/index.html?pid=\" + pid + \"\u0026uu=\" + uu + \"\u0026sn=\" + sn + \"\u0026pvid=\" + pvid;\r\n                    window.ClicktaleReplayLink = function () {\r\n                        return intLink;\r\n                    }\r\n                    if (window.CS_CONF) {\r\n                        CS_CONF.replaylink = intLink;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function callback(context) {\r\n            if (!disableCallback) {\r\n                disableCallback = true;\r\n                init(context);\r\n            }\r\n        }\r\n        var disableCallback = false;\r\n        window._uxa = window._uxa || [];\r\n        _uxa.push([\u0027afterPageView\u0027, callback]);\r\n    })();\r\n    \r\n    var PID = ClickTaleGetPID();\r\n    var UID = ClickTaleGetUID();\r\n    var SID = ClickTaleGetSID();\r\n    var intLink = \"https:\/\/dmz01.app.clicktale.com\/Player.aspx?PID=\" + PID + \"\u0026UID=\" + UID + \"\u0026SID=\" + SID;\r\n\r\n    \/\/Blue Triangle Integration Start\r\n    if (ClickTaleIsSavedRecording()) {\r\n        var intToken = \"85e9f1a411b91a3e8ea8764755dda7f4d41cbec2\";\r\n\r\n        function clickTaleBTIntegration() {\r\n            var fullSessionLink = \"https:\/\/subs.app.clicktale.com\/IntegrationEntry.ashx?Type=Playback\u0026amp;IntegrationToken=\" + intToken + \"\u0026PID=\" + PID + \"\u0026UID=\" + UID + \"\u0026SID=\" + SID;\r\n            var specificLink = intLink;\r\n\r\n            bttUT.ctGif({\r\n                ctPID: PID,\r\n                ctUID: UID,\r\n                ctTraceURL: fullSessionLink,\r\n                ctReplayURL: specificLink\r\n            });\r\n\r\n            if (bttUT.GUID \u0026\u0026 bttUT.sessionID) {\r\n                \/\/ClickTaleEvent(\"Blue Triangle: GUID \" + bttUT.GUID + \" | SessionID \" + bttUT.sessionID);\r\n            }\r\n        };\r\n\r\n        function clickTaleCheckIfBTExists() {\r\n            if (window.bttUT \u0026\u0026 typeof bttUT === \"object\" \u0026\u0026 typeof bttUT.ctGif === \"function\") {\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n\r\n        window.ClickTaleSettings.PTC.doOnlyWhen(clickTaleBTIntegration, clickTaleCheckIfBTExists, 100, 100);\r\n    }\r\n    \/\/Blue Triangle Integration End\r\n\r\n    \/\/Adobe Analytics Integration Start\r\n    var adobeAnalyticsOrgID = \"F0EF5E09512D2CD20A490D4D@AdobeOrg\";\r\n\r\n    function clickTaleAdobeIntegration() {\r\n        var uniqueID = UID;\r\n        Visitor.getInstance(adobeAnalyticsOrgID).setCustomerIDs({\r\n            \"mcvid\": {\r\n                \"id\": uniqueID\r\n            }\r\n        });\r\n        \/\/ClickTaleEvent(\"Adobe Analytics: Unique ID Sent\");\r\n    };\r\n\r\n    function clickTaleCheckIfAdobeExists() {\r\n        if (window.Visitor \u0026\u0026 typeof Visitor.getInstance === \"function\" \u0026\u0026 typeof Visitor.getInstance(adobeAnalyticsOrgID).setCustomerIDs === \"function\" \u0026\u0026\r\n            typeof Visitor.getInstance(adobeAnalyticsOrgID).getMarketingCloudVisitorID === \"function\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    window.ClickTaleSettings.PTC.doOnlyWhen(clickTaleAdobeIntegration, clickTaleCheckIfAdobeExists, 100, 100);\r\n    \/\/Adobe Analytics Integration End\r\n\r\n    \/\/Start CAP Integrations\r\n    if (!window.ClickTaleSettings.PTC.IntegrationsReady) {\r\n        window.ClickTaleSettings.PTC.IntegrationsReady = true;\r\n\r\n        (function () {\r\n\r\n            function init(context) {\r\n\r\n                function sendToCS(csTypeVendorPrefix, csKey, csValue, csEventType, csPV) {\r\n                    csKey = csTypeVendorPrefix + csKey;\r\n\r\n                    window._uxa = window._uxa || [];\r\n                    _uxa.push([\"trackDynamicVariable\", {\r\n                        key: csKey,\r\n                        value: csValue\r\n                    }]);\r\n\r\n                    if (csEventType === \"etr\") {\r\n                        if (window.ClickTaleIsSavedRecording \u0026\u0026 ClickTaleIsSavedRecording() === false) {\r\n                            ClickTaleEventTrigger(\"@ET@ \" + csKey);\r\n                        }\r\n                    } else if (csEventType === \"reg\") {\r\n                        _uxa.push([\"trackPageEvent\", csKey + \" | \" + csValue]);\r\n                    }\r\n\r\n                    if (csPV) {\r\n                        _uxa.push([\"trackPageview\", window.location.pathname + \"?\" + csPV]);\r\n                    }\r\n                }\r\n\r\n                function generateReplayLink(pvNum) {\r\n                    pvNum = pvNum || 0;\r\n\r\n                    var uxaGet = _uxa.push([\"getSessionData\"]);\r\n                    if (uxaGet \u0026\u0026 uxaGet.projectId) {\r\n                        var pid = uxaGet.projectId;\r\n                        var uu = uxaGet.userId;\r\n                        var sn = uxaGet.sessionNumber;\r\n                        var pvid = uxaGet.pageNumber - pvNum;\r\n\r\n                        if (pid \u0026\u0026 uu \u0026\u0026 sn \u0026\u0026 pvid) {\r\n                            var intLink = \"https:\/\/app.contentsquare.com\/quick-playback\/index.html?pid=\" + pid + \"\u0026uu=\" + uu + \"\u0026sn=\" + sn + \"\u0026pvid=\" + pvid;\r\n                            return intLink;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                function readCookie(name) {\r\n                    var nameEQ = name + \"=\";\r\n                    var ca = document.cookie.split(\";\");\r\n                    for (var i = 0; i \u003c ca.length; i++) {\r\n                        var c = ca[i];\r\n                        while (c.charAt(0) == \" \") c = c.substring(1, c.length);\r\n                        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\r\n                    }\r\n                    return \"\";\r\n                }\r\n\r\n                function postMessage(type) {\r\n                    var json = JSON.stringify({\r\n                        contentsquare_integration: readCookie(\"_cs_s\")\r\n                    });\r\n\r\n                    if (type === \"opener\") {\r\n                        window.opener.postMessage(json, document.referrer);\r\n                    } else if (type === \"top\") {\r\n                        window.top.postMessage(json, document.referrer);\r\n                    }\r\n                }\r\n\r\n                \/*\r\n                 *Name: Opinion Lab CAP Integration\r\n                 *Version: 1.16\r\n                 *Required Shared Components: ClickTaleOnRecording, Self Invoking function, _uxa afterPageView callback, sendToCS, readCookie, postMessage, generateReplayLink\r\n                 *Note: It is imperative that the partition and guid be manually defined below\r\n                 *\/\r\n\r\n                var partition = \"www47\";\r\n                var guid = \"d82d7432-724c-4af9-8884-ffab4841f0a1\";\r\n\r\n                if (document.location.host.indexOf(\"opinionlab.com\") === -1) {\r\n\r\n                    var intLink = generateReplayLink();\r\n                    if (intLink) {\r\n                        var UID = ClickTaleGetUID();\r\n                        var userValues = UID + \"|\" + readCookie(\"_cs_id\") + \"|\" + readCookie(\"_cs_s\") + \"|\" + readCookie(\"_cs_c\") + \"|\" + readCookie(\"_cs_optout\");\r\n\r\n                        localStorage.setItem(\"CTuserID\", userValues);\r\n                        localStorage.setItem(\"CTrecordingLink\", intLink);\r\n                        localStorage.setItem(\"CTpartition\", partition);\r\n                        localStorage.setItem(\"CTguid\", guid);\r\n                    }\r\n                } else {\r\n\r\n                    var tvp = \"FB_OL_\";\r\n\r\n                    sendToCS(tvp, \"Feedback Displayed (All Surveys)\", \"true\");\r\n                    if (window.opener) {\r\n                        postMessage(\"opener\");\r\n                    } else if (self != top) {\r\n                        postMessage(\"top\");\r\n                    }\r\n\r\n                    function receiveMessage(e) {\r\n                        if (e.origin != \"https:\/\/secure.opinionlab.com\") {\r\n                            return;\r\n                        }\r\n                        var data = e.data;\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tvar parsedData = JSON.parse(data);\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n                        if (parsedData.message === \"ClicktaleOpinionLab_Submitted\" || parsedData.message === \"ContentsquareOpinionLab_Submitted\") {\r\n                            var surveyID = parsedData.ccid || \"\";\r\n\r\n                            sendToCS(tvp, \"Feedback Submitted\", \"Survey ID : \" + surveyID, \"etr\", \"cs_opinionlab=feedback_submitted_\" + surveyID);\r\n                            if (window.opener) {\r\n                                postMessage(\"opener\");\r\n                            } else if (self != top) {\r\n                                postMessage(\"top\");\r\n                            }\r\n\r\n                            var responseId = parsedData.responseId;\r\n                            if (responseId) {\r\n                                sendToCS(tvp, \"Response ID (\" + surveyID + \")\", responseId);\r\n                            }\r\n\r\n                            var overallRating = parsedData.overallRating;\r\n                            if (overallRating) {\r\n                                sendToCS(tvp, \"Overall Rating (\" + surveyID + \")\", parseInt(overallRating));\r\n                            }\r\n\r\n                            var usabilityRating = parsedData.usabilityRating;\r\n                            if (usabilityRating) {\r\n                                sendToCS(tvp, \"Usability Rating (\" + surveyID + \")\", parseInt(usabilityRating));\r\n                            }\r\n\r\n                            var designRating = parsedData.designRating;\r\n                            if (designRating) {\r\n                                sendToCS(tvp, \"Design Rating (\" + surveyID + \")\", parseInt(designRating));\r\n                            }\r\n\r\n                            var contentRating = parsedData.contentRating;\r\n                            if (contentRating) {\r\n                                sendToCS(tvp, \"Content Rating (\" + surveyID + \")\", parseInt(contentRating));\r\n                            }\r\n\r\n                            for (i = 1; i \u003c 13; i++) {\r\n                                eval(\r\n                                    \"var answer\" + [i] + \" = parsedData.answer\" + [i] + \";\" +\r\n                                    \"if (answer\" + [i] + \") {\" +\r\n                                    \"var isRating\" + [i] + \" = \u0027\u0027;\" +\r\n                                    \"var setAnswer = answer\" + [i] + \";\" +\r\n                                    \"if (answer\" + [i] + \" != \u00270\u0027) {\" +\r\n                                    \"if (!isNaN(answer\" + [i] + \")) {\" +\r\n                                    \"isRating\" + [i] + \" = \u0027 Rating\u0027;\" +\r\n                                    \"setAnswer = parseInt(setAnswer);\" +\r\n                                    \"}\" +\r\n                                    \"sendToCS(tvp, \u0027Custom Answer \" + [i] + \"\u0027 + isRating\" + [i] + \" + \u0027 (\u0027 + surveyID + \u0027)\u0027, setAnswer);\" +\r\n                                    \"}}\"\r\n                                );\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                    window.addEventListener(\"message\", receiveMessage, false);\r\n                }\r\n                \/\/Opinion Lab CAP Integration End\r\n            }\r\n\r\n            function callback(context) {\r\n                if (!disableCallback) {\r\n                    disableCallback = true;\r\n                    init(context);\r\n\r\n                    if (window.CS_CONF) {\r\n                        CS_CONF.integrations = CS_CONF.integrations || [];\r\n                        CS_CONF.integrations.push(\"Opinion Lab\");\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            var disableCallback = false;\r\n\r\n            window._uxa = window._uxa || [];\r\n            _uxa.push([\"afterPageView\", callback]);\r\n\r\n        })();\r\n    }\r\n    \/\/End CAP Integrations\r\n}\r\n\r\n\/\/Integrations\r\nwindow.ClickTaleSettings.PTC.Integrations = [\r\n    \"Opinion Lab | Contentsquare\",\r\n    \"Adobe Target | Core\",\r\n    \"Adobe Target | CEC\",\r\n    \"Adobe Target | Contentsquare\",\r\n    \"Blue Triangle| Core\",\r\n    \"Adobe Analytics 2.0 | Core\"\r\n];\r\n\/\/ End of user-defined pre WR code\r\n\r\n\r\nvar isHttps = document.location.protocol == \u0027https:\u0027,\r\n\tscriptSource = window.ClickTaleScriptSource,\r\n\tpccSource = scriptSource;\r\n\r\nif (!scriptSource) {\r\n\twindow.ClickTaleScriptSource = isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/www\/\u0027;\r\n}\r\n\r\n\r\nif(!ClickTaleGlobal.init.pccRequested) {\r\n\t\tvar pccSrc = pccSource ? pccSource : (isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/pcc\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/pcc\/\u0027);\r\n\t    pccSrc += \u0027d82d7432-724c-4af9-8884-ffab4841f0a1.js?DeploymentConfigName=Release_20201016\u0026Version=1\u0027;\r\n\t\t\tvar pccScriptElement = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\tpccScriptElement.type = \"text\/javascript\";\r\n\tpccScriptElement.crossOrigin = \"anonymous\";\r\n\t\tpccScriptElement.async = true;\r\n\t\tif(ClickTaleGlobal.scripts.sri \u0026\u0026 ClickTaleGlobal.scripts.sri.hashes){\n        pccScriptElement.integrity = ClickTaleGlobal.scripts.sri.hashes.pcc;\n        pccScriptElement.src = ClickTaleGlobal.scripts.sri.path + \"pcc.js\";\n\t}else {\n       pccScriptElement.src = pccSrc;\n    }\n\t\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(pccScriptElement);\n\t\tClickTaleGlobal.init.pccRequested = true;\r\n}\r\n\t\r\nwindow.ClickTalePrevOnReady = typeof window.ClickTaleOnReady == \u0027function\u0027 ? window.ClickTaleOnReady : void 0;\r\n\r\nwindow.ClickTaleOnReady = function() {\r\n\tvar PID=24, \r\n\t\tRatio=0.5, \r\n\t\tPartitionPrefix=\"www47\",\r\n\t\tSubsId=233441;\r\n\t\r\n\tif (window.navigator \u0026\u0026 window.navigator.loadPurpose === \"preview\") {\r\n       return;\r\n\t};\r\n\t\t\r\n\t\r\n\t\/\/ Start of user-defined header code (PreInitialize)\r\n\twindow._uxa = window._uxa || [];\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\nwindow.ClickTaleSettings.PTC = window.ClickTaleSettings.PTC || {};\r\nwindow.ClickTaleSettings.PTC.CustomVariables = window.ClickTaleSettings.PTC.CustomVariables || [];\r\nwindow.ClickTaleSettings.PTC.CustomVariables = [\r\n    { displayName: \u0027Page Name\u0027, key: \u0027pageName\u0027, slot: 1, dataSource: 1 },\r\n    { displayName: \u0027Department Name\u0027, key: \u0027departmentName\u0027, slot: 2, dataSource: 2 },\r\n    { displayName: \u0027Category Name\u0027, key: \u0027categoryName\u0027, slot: 3, dataSource: 2 },\r\n    { displayName: \u0027Subcategory Name\u0027, key: \u0027subcategoryName\u0027, slot: 4, dataSource: 2 }\r\n];\r\nfunction sendCVar() {\r\n    var data = window[\u0027s\u0027];\r\n    var data2 = !!window[\u0027pageData\u0027] \u0026\u0026 window[\u0027pageData\u0027][\u0027productDetails\u0027];\r\n    var cVars = window.ClickTaleSettings.PTC.CustomVariables;\r\n    if (!!data || !!data2) {\r\n        for (var i = 0; i \u003c cVars.length; i++) {\r\n            var currentData = (cVars[i].dataSource == 1) ? data : data2;\r\n            !!currentData \u0026\u0026 !!currentData[cVars[i].key] \u0026\u0026 window._uxa.push([\u0027setCustomVariable\u0027, cVars[i].slot, cVars[i].displayName, currentData[cVars[i].key]]);\r\n        }\r\n    }\r\n}\r\n\r\nwindow.ClickTaleOnStop = window.ClickTaleOnStop || [];\r\nClickTaleOnStop.push(sendCVar);\r\nsendCVar();\r\n\/\/IMP-81\r\nif (location.href.indexOf(\u0027\/checkout\/v2\/checkout.jsp\u0027) \u003e -1) {\r\n    window._uxa.push([\u0027setQuery\u0027, \u0027?__checkoutshipinfo\u0027]);\r\n}\r\n\/\/Block pageEvent piggybackking off of CT events to reduce amount of calls\r\n\/*if (window.ClickTaleGlobal \u0026\u0026 ClickTaleGlobal.symbols \u0026\u0026 !isNaN(ClickTaleGlobal.symbols.WRProjectType)) {\r\n    var oldClickTaleEvent = ClickTaleEvent;\r\n    var previoustype = ClickTaleGlobal.symbols.WRProjectType;\r\n    ClickTaleEvent = function () {\r\n        ClickTaleGlobal.symbols.WRProjectType = -1;\r\n        var res = oldClickTaleEvent.apply(this, arguments);\r\n        ClickTaleGlobal.symbols.WRProjectType = previoustype;\r\n        return res;\r\n    }\r\n}*\/\r\n\r\n\/\/Don\u0027t capture keystroke related events on the login page\r\nif (document.location.pathname == \"\/myaccount\/kohls_login.jsp\") {\r\n    ClickTaleEventsMask -= 4\r\n}\r\n\r\n\r\n\/\/Don\u0027t record my account pages (except the login page)\r\nif (document.location.href.indexOf(\u0027https:\/\/www.kohls.com\/myaccount\/\u0027) \u003e -1 \u0026\u0026 document.location.pathname != \"\/myaccount\/kohls_login.jsp\") {\r\n    return;\r\n}\r\n\r\n\/\/OpinionLab Integration Start\r\nif (ClickTaleSettings.PTC.RecordSurvey === false) {\r\n    return;\r\n}\r\n\/\/OpinionLab Integration End\r\n\r\nif (typeof ClickTaleSetAllSensitive === \"function\") {\r\n    ClickTaleSetAllSensitive();\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.InitFuncs = window.ClickTaleSettings.PTC.InitFuncs || [];\r\nwindow.ClickTaleSettings.PTC.InitFuncs.push(function () {\r\n    var pcc = document.querySelector(\u0027script[src*=\"clicktale\"][src*=\"pcc\"]\u0027);\r\n    if (pcc) {\r\n        var versionmatch = pcc.src.match(\/DeploymentConfigName=(.+)\/i);\r\n        if (versionmatch \u0026\u0026 typeof ClickTaleExec === \u0027function\u0027) {\r\n            ClickTaleExec(\"console.info(\u0027\" + versionmatch[0] + \"\u0027);\");\r\n            ClickTaleEvent(\"Config: \" + versionmatch[1].replace(\/\\\u0026.+\/, \u0027\u0027));\r\n        }\r\n    }\r\n});\r\n\r\nfunction doUpload() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n        ClickTaleUploadPageNow();\r\n        window.ClickTaleSettings.PTC.UploadPageHappened = true;\r\n    };\r\n};\r\n\r\nfunction isReadyToRecord() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n        if (!window.ClickTaleSettings.PTC.IsMobile) {\r\n            if (document.location.href.toLowerCase().indexOf(\u0027kohls.com\/catalog\u0027) \u003e -1) {\r\n                return document.querySelectorAll(\".third-party-parent img[src]\").length \u003e 4;\r\n            }\r\n            else if (document.location.href.toLowerCase().indexOf(\u0027\/product\/prd-\u0027) \u003e -1) { \/\/ PDP pages - SUP-979\r\n                return !!(document.querySelectorAll(\u0027body #container #content img.pdp-image-main-img\u0027).length \u003e 0);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nClickTaleDelayUploadPage();\r\n\r\n\/\/AB Test Integration Timeout\r\nsetTimeout(function () {\r\n    window.ClickTaleSettings.PTC.doOnlyWhen(doUpload, isReadyToRecord, 500, 6, doUpload);\r\n}, 1000);\r\n\r\nvar initFuncs = window.ClickTaleSettings.PTC.InitFuncs;\r\nfor (var i = 0, initLen = initFuncs.length; i \u003c initLen; i++) {\r\n    if (typeof initFuncs[i] === \u0027function\u0027) {\r\n        initFuncs[i]();\r\n    }\r\n}\r\n\r\n\t\/\/ End of user-defined header code (PreInitialize)\r\n    \r\n\t\r\n\twindow.ClickTaleIncludedOnDOMReady=true;\r\n\t\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n\tif((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString()))\r\n\t{\r\n    \tClickTalePrevOnReady();\r\n\t}\r\n\t\r\n\t\r\n\t\/\/ Start of user-defined footer code\r\n\t\r\n\t\/\/ End of user-defined footer code\r\n\t\r\n}; \r\n(function() {\r\n\tvar div = ClickTaleCreateDOMElement(\"div\");\r\n\tdiv.id = \"ClickTaleDiv\";\r\n\tdiv.style.display = \"none\";\r\n\tdocument.body.appendChild(div);\r\n\r\n\t\r\n\t\tvar wrScript = ClickTaleCreateDOMElement(\"script\");\r\n\twrScript.crossOrigin = \"anonymous\";\r\n\twrScript.type = \u0027text\/javascript\u0027;\r\n\t\twrScript.async = true;\r\n\t\tif(ClickTaleGlobal.scripts.sri \u0026\u0026 ClickTaleGlobal.scripts.sri.hashes){\n        wrScript.integrity = ClickTaleGlobal.scripts.sri.hashes.wr;\n        wrScript.src = ClickTaleGlobal.scripts.sri.path + \"wr.js\";\n\t}else {\n        wrScript.src = window.ClickTaleScriptSource + \u0027latest-WR110.js\u0027;\r\n    }\r\n\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(wrScript);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar ctVEconfig={VE_BASE_URL:\"https:\/\/ve-cec-na1.app.clicktale.com\/\",VE_PROXY_BASE_URL:\"https:\/\/vep-cec-na1.app.clicktale.com\/\"};!function(){try{var e=window.chrome,t=window.navigator\u0026\u0026window.navigator.vendor;null!=e\u0026\u0026\"Google Inc.\"===t\u0026\u0026window.addEventListener\u0026\u0026addEventListener(\"message\",o,!1);var n=window.location.search.substring(window.location.search.indexOf(\"ctAdvancedSearch=\")).split(\"\u0026\")[0].split(\"=\");\"ctAdvancedSearch\"==n[0]\u0026\u0026\"true\"==n[1]\u0026\u0026c(\"ctAdvancedSearchModule\",ctVEconfig.VE_BASE_URL+\"client\/dist\/advancedSearchModule.js\")}catch(e){}function o(e){var t;try{t=JSON.parse(e.data)}catch(e){return}!1!==new RegExp(\"(app[.]clicktale[.]com)($|:)\").test(e.origin)\u0026\u0026(window.ct_ve_parent_window=e.source,\"CT_testRules\"==t.name\u0026\u0026(sessionStorage.setItem(\"CT_testRules\",!0),console.log((new Date).toJSON(),\"PostPTC: testRules \",sessionStorage.getItem(\"CT_testRules\")),window.ct_ve_parent_window.postMessage({name:\"testRulesRecieved\",params:{}},\"*\")),\"CTload_ve\"===t.function\u0026\u0026\"function\"==typeof ClickTaleGetPID\u0026\u0026null!==ClickTaleGetPID()\u0026\u0026(function(){console.log((new Date).toJSON(),\"PostPTC: start loading test rules\");var e=ClickTaleGetPID();c(\"ctTestRulesModule\",ctVEconfig.VE_BASE_URL+\"rulesEngineContent\/TestPCC\/\"+e,function(){sessionStorage.setItem(\"CT_testRules_Loaded\",!0),console.log((new Date).toJSON(),\"PostPTC: test rules loaded\")})}(),c(\"ctVisualEditorClientModule\",ctVEconfig.VE_BASE_URL+\"client\/dist\/veClientModule.js\")))}function c(e,t,n){var o,c=(o=\"script\",document.createElementNS?document.createElementNS(\"http:\/\/www.w3.org\/1999\/xhtml\",o):document.createElement(o));c.setAttribute(\"type\",\"text\/javascript\"),c.setAttribute(\"id\",e),c.src=t,void 0!==n\u0026\u0026(c.onload=n),document.getElementById(e)||document.body.appendChild(c)}}();");
				document.body.appendChild(script);
			})();
	}		

if (!ClickTaleGlobal.init.configFoundPTC)
{
			(function(){
		var script = ClickTaleXHTMLCompliantScriptTagCreate("\/\/ Copyright 2006-2020 ClickTale Ltd., US Patent Pending\r\n\/\/ PID: 24\r\n\/\/ WR destination: www47\r\n\/\/ WR version: 17.0\r\n\/\/ Recording ratio: 0.5\r\n\r\n(function (){\r\n\tvar dependencyCallback;\r\n        var scriptSyncTokens = [\"wr\"];\r\n        var ct2Callback, isRecorderReady;\r\n    var dependencies = scriptSyncTokens.slice(0);\r\n    var clickTaleOnReadyList = window.ClickTaleOnReadyList || (window.ClickTaleOnReadyList = []);\r\n    var indexOf = (function(){if(Array.prototype.indexOf){return function(array,value){return array.indexOf(value)}}return function(array,value){var length=array.length;for(var i=0;i\u003clength;i++){if(array[i]===value){return i}}return -1}})();\r\n    function isValidToken(token) {\r\n        if (indexOf(scriptSyncTokens, token) \u003e -1) {\r\n            var index = indexOf(dependencies, token);\r\n\r\n            if (index \u003e -1) {\r\n                dependencies.splice(index, 1);\r\n                return true;\r\n            }\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    clickTaleOnReadyList.push(function () {\r\n        if (ct2Callback) {\r\n            ct2Callback();\r\n        }\r\n\r\n        isRecorderReady = true;\r\n    });\r\n\r\n    ClickTaleGlobal.scripts.dependencies = {\r\n        setDependencies: function (deps) {\r\n            scriptSyncTokens = deps;\r\n        },\r\n        onDependencyResolved: function (callback) {\r\n            dependencyCallback = callback;\r\n        },\r\n        notifyScriptLoaded: function (token) {\r\n            if (isValidToken(token)) {\r\n                if (dependencies.length === 0 \u0026\u0026 typeof dependencyCallback === \"function\") {\r\n                    dependencyCallback();\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    ClickTaleGlobal.scripts.integration = {\r\n        onReady: function (callback) {\r\n            if (isRecorderReady) {\r\n                callback();\r\n            }\r\n            else {\r\n                ct2Callback = callback;\r\n            }\r\n        }\r\n    };\r\n})();\r\n\r\n\r\n\r\n\tClickTaleSettings.Integration = ClickTaleSettings.Integration || {};\r\n\tClickTaleSettings.Integration.ProjectType = 3;\r\n\r\nwindow.ClickTaleIsXHTMLCompliant = true;\r\nif (typeof (ClickTaleCreateDOMElement) != \"function\")\n{\n\tClickTaleCreateDOMElement = function(tagName)\n\t{\n\t\tif (document.createElementNS)\n\t\t{\n\t\t\treturn document.createElementNS(\u0027http:\/\/www.w3.org\/1999\/xhtml\u0027, tagName);\n\t\t}\n\t\treturn document.createElement(tagName);\n\t}\n}\n\nif (typeof (ClickTaleAppendInHead) != \"function\")\n{\n\tClickTaleAppendInHead = function(element)\n\t{\n\t\tvar parent = document.getElementsByTagName(\u0027head\u0027).item(0) || document.documentElement;\n\t\tparent.appendChild(element);\n\t}\n}\n\nif (typeof (ClickTaleXHTMLCompliantScriptTagCreate) != \"function\")\n{\n\tClickTaleXHTMLCompliantScriptTagCreate = function(code)\n\t{\n\t\tvar script = ClickTaleCreateDOMElement(\u0027script\u0027);\n\t\tscript.setAttribute(\"type\", \"text\/javascript\");\n\t\tscript.text = code;\n\t\treturn script;\n\t}\n}\t\r\n\r\n\r\n\r\n\/\/ Start of user-defined pre WR code (PreLoad)\r\n\/\/PTC Code Version 10.1\r\n\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\nClickTaleSettings.PTC = ClickTaleSettings.PTC || {};\r\nClickTaleSettings.Compression = ClickTaleSettings.Compression || {};\r\nClickTaleSettings.Compression.Method = function () {\r\n    return \"deflate\";\r\n};\r\nClickTaleSettings.Transport = ClickTaleSettings.Transport || {};\r\n(function () {\r\n    var Tr = ClickTaleSettings.Transport;\r\n    Tr.Legacy = false;\r\n    Tr.MaxConcurrentRequests = 1;\r\n    Tr.BigBuffer = 120000;\r\n})();\r\nClickTaleSettings.Protocol = ClickTaleSettings.Protocol || {};\r\nClickTaleSettings.Protocol.Method = \"ImpactRecorder\";\r\nif (window.Zone \u0026\u0026 typeof Zone[\u0027__symbol__\u0027] === \u0027function\u0027) {\r\n    ClickTaleSettings.PTC.restoreZonedXHR = function (xhr) {\r\n        if (xhr) {\r\n            var prot = Object.getPrototypeOf(xhr);\r\n            while (prot) {\r\n                for (var propName in prot) {\r\n                    var replacement;\r\n                    if (replacement = prot[Zone[\u0027__symbol__\u0027](propName)]) {\r\n                        xhr[propName] = replacement;\r\n                    }\r\n\r\n                }\r\n                prot = Object.getPrototypeOf(prot);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    window.CEC = window.CEC || {};\r\n    CEC.onInit = function () {\r\n        CEC.onXhrCreated = function (xhr) {\r\n            ClickTaleSettings.PTC.restoreZonedXHR(xhr);\r\n        }\r\n    }\r\n    window.ClickTaleOnXHRCreated = function (xhr) {\r\n        ClickTaleSettings.PTC.restoreZonedXHR(xhr);\r\n    }\r\n}\r\nif (document.readyState === \u0027complete\u0027) {\r\n    window.ClickTaleIncludedOnWindowLoad = true;\r\n}\r\nwindow.ClickTaleIncludedOnDOMReady = true;\r\nClickTaleSettings.PTC.Integrations = window.ClickTaleSettings.PTC.Integrations || [];\r\nwindow.ClickTaleSettings.PTC.EnableChangeMonitor = false;\r\nwindow.ClickTaleSettings.PTC.UploadPageHappened = false;\r\nwindow.ClickTaleSettings.PTC.IsMobile = false;\r\n\r\n\r\n\r\nClickTaleSettings.CheckAgentSupport = function (f, v) {\r\n    if (v.t == v.ED) {\r\n        ClickTaleSettings.Compression.Async = false;\r\n    }\r\n    if (v.m) {\r\n        ClickTaleSettings.PTC.IsMobile = true;\r\n    }\r\n    if (!(v.t == v.IE \u0026\u0026 v.v == 10)) {\r\n        ClickTaleSettings.PTC.EnableChangeMonitor = true;\r\n        ClickTaleSettings.PTC.ConfigChangeMonitor();\r\n    }\r\n    var fv = f(v);\r\n    ClickTaleSettings.PTC.okToRunPCC = fv;\r\n    return fv;\r\n};\r\n\r\nClickTaleSettings.PTC.startsWith = function (strToTest, str) {\r\n    return strToTest.lastIndexOf(str, 0) === 0;\r\n};\r\n\r\nClickTaleSettings.DOM = ClickTaleSettings.DOM || {};\r\n\r\n;\r\n(function () {\r\n    var selectorForBoth = \u0027div#pickupstorename span, div[id^=\"bopusorder-review\"] span,div#orderConfirm span.bbold,div.KAS-CheckoutBopus-text-state_msg span,p.name-mail-para\u003espan,form#signInForm-softlogin span.mL15,div.kohls-charge-not-qualified-status-page-container span\u003ei,span.first-name,ul.shippingAddress_fields\u003eli,li.shippingAddress_name h3,div.pcaitem,div.pcaitem *,div#shippingAddressesContainer li,div.col_custaddress *,textarea,div#paymentMethodsContainer p,ul.shippingAddreswrap li,div.paymentInformationContainer p,div.paymentInformationContainer span,div.reg_user_email_address,div.paymentAddressContainer li,div.verify-address-box span,div.display-name-rewards,span[class^=\"commonForm\"],div.cust-info-container span,ul#order_confirmShippingDetails p,ul#order_confirmShippingDetails strong,li.shippingMethodEmailConfirm,ol[id^=\"order_confirmNotify\"] b,p.tce-bar-in-account-greeting\u003eb\u0027;\r\n    var placeHolder = \u0027input#search\u0027;\r\n\r\n    \/\/ \/**\r\n    \/\/  *\r\n    \/\/  * @param {!string} value - attribute value || textContent\r\n    \/\/  * @param {!Node} node\r\n    \/\/  * @param {!string} rule - css selector\r\n    \/\/  * @param {!number} type - 0 - text, 1 - attribute\r\n    \/\/  * @returns {!string}\r\n    \/\/  *\/\r\n    \/\/ function transform(value, node, rule, type) {\r\n    \/\/     var reg = \/\\w|[^\\x00-\\x7F]\/g;\r\n    \/\/     return value.replace(reg, \"-\");\r\n    \/\/ }\r\n\r\n    ClickTaleSettings.DOM.PII = {\r\n        Text: [selectorForBoth],\r\n        Attributes: [{\r\n            rule: selectorForBoth,\r\n            attr: \u0027value\u0027\r\n        },{\r\n            rule: placeHolder,\r\n            attr: \u0027placeholder\u0027\r\n        }] \/\/,\r\n        \/\/Transform: transform\r\n    };\r\n\r\n    \/**\r\n     *\r\n     * @param {!CSSStyleSheet} adoptedStyleSheets\r\n     *\/\r\n    function getSerializedNode(adoptedStyleSheets) {\r\n        var textArray = [];\r\n        adoptedStyleSheets.forEach(function (sheet) {\r\n            var rules = \/** @type{!CSSRuleList} *\/ (sheet.cssRules);\r\n            for (let i = 0; i \u003c rules.length; i++) {\r\n                var rule = rules[i];\r\n                if (rule \u0026\u0026 rule.cssText) {\r\n                    textArray.push(rule.cssText);\r\n                }\r\n            }\r\n        });\r\n        if (textArray.length) {\r\n            return {\r\n                nodeType: 1,\r\n                tagName: \"style\",\r\n                attributes: {\r\n                    \"data-addoptedCSS\": \"true\"\r\n                },\r\n                childNodes: [{\r\n                    \"nodeType\": 3,\r\n                    \"textContent\": textArray.join(\u0027\\r\\n\u0027)\r\n                }]\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    \/**\r\n     *\r\n     * @param {!(DocumentOrShadowRoot|Element)} root\r\n     *\/\r\n    function addSerializedNode(root, serializeAPI) {\r\n        var serializeNode, parentNode = root,\r\n            adoptedStyleSheets;\r\n        switch (root.nodeType) {\r\n            case 11:\r\n                if ((adoptedStyleSheets = \/** @type{!CSSStyleSheet} *\/ (root.adoptedStyleSheets)) \u0026\u0026 adoptedStyleSheets.length) {\r\n                    serializeNode = getSerializedNode(adoptedStyleSheets);\r\n                }\r\n                break;\r\n            case 1:\r\n                if (typeof root.getRootNode === \u0027function\u0027) {\r\n                    root = root.getRootNode();\r\n                    addSerializedNode(root, serializeAPI);\r\n                }\r\n                break;\r\n            case 9:\r\n                if ((adoptedStyleSheets = \/** @type{!CSSStyleSheet} *\/ (root.adoptedStyleSheets)) \u0026\u0026 adoptedStyleSheets.length) {\r\n                    serializeNode = getSerializedNode(adoptedStyleSheets);\r\n                    parentNode = document.head || document.documentElement;\r\n                }\r\n                break;\r\n        }\r\n        if (serializeNode \u0026\u0026 parentNode) {\r\n            serializeAPI.addChild(parentNode, null, serializeNode);\r\n        }\r\n    }\r\n\r\n    ClickTaleSettings.DOM.Serializer = ClickTaleSettings.DOM.Serializer || {};\r\n\r\n    ClickTaleSettings.DOM.Serializer.OnAfterSerialize = function (serializeAPI) {\r\n        var allObservableRoots;\r\n        if (\r\n            \u0027adoptedStyleSheets\u0027 in Document.prototype \u0026\u0026\r\n            window.ClickTaleGlobal \u0026\u0026 ClickTaleGlobal.symbols \u0026\u0026\r\n            ClickTaleGlobal.symbols.rootsManager \u0026\u0026\r\n            typeof ClickTaleGlobal.symbols.rootsManager.getAllObservableRoots === \u0027function\u0027 \u0026\u0026\r\n            Array.isArray(allObservableRoots = \/** @type{!Array.\u003cDocumentOrShadowRoot|Element\u003e} *\/ (ClickTaleGlobal.symbols.rootsManager.getAllObservableRoots()))\r\n        ) {\r\n            allObservableRoots.forEach(function (root) {\r\n                addSerializedNode(root, serializeAPI);\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    var locationRules = [\r\n        \/\/ {\r\n        \/\/     selector: \u0027selector\u0027,\r\n        \/\/     Attributes: [\u0027value\u0027],\r\n        \/\/     Text: true,\r\n        \/\/     location: {\r\n        \/\/         prop: \u0027pathname\u0027,\r\n        \/\/         search: \/catalog\/i\r\n        \/\/     }\r\n        \/\/ }\r\n    ];\r\n\r\n\r\n    locationRules.forEach(function (rule) {\r\n        if (rule.location) {\r\n            var prop = rule.location.prop;\r\n            var search = rule.location.search;\r\n            if (search.test(location[prop])) {\r\n                var Attributes = rule.Attributes;\r\n                var selector = rule.selector;\r\n                var Text = rule.Text;\r\n                var PII = ClickTaleSettings.DOM.PII;\r\n                if (Text) {\r\n                    PII.Text.push(selector);\r\n                }\r\n                if (Array.isArray(Attributes)) {\r\n                    Attributes.forEach(function (attr) {\r\n                        PII.Attributes.push({\r\n                            rule: selector,\r\n                            attr: attr\r\n                        });\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    });\r\n})();\r\n\r\n\r\n\r\n;\r\n(function () {\r\n    if (typeof window.ClickTalePIISelector === \u0027string\u0027 \u0026\u0026 ClickTalePIISelector != \u0027\u0027) {\r\n        try {\r\n            var domNodes = document.querySelector(ClickTalePIISelector);\r\n            var PII = ClickTaleSettings.DOM.PII;\r\n            PII.Text.push(ClickTalePIISelector);\r\n            PII.Attributes.push({\r\n                rule: ClickTalePIISelector,\r\n                attr: \"value\"\r\n            });\r\n        } catch (err) {\r\n            if (typeof ClickTaleNote === \u0027function\u0027) {\r\n                ClickTaleNote(\u0027Bad PII selector: \u0027 + encodeURIComponent(ClickTalePIISelector));\r\n            }\r\n        }\r\n    }\r\n})();\r\n\r\nClickTaleSettings.PTC.AssetManager = {\r\n    isActive: true,\r\n    isNeedForImg: false,\r\n    subscriberId: \u0027233441\u0027,\r\n    pid: \u002724\u0027,\r\n    storageUrl: \u0027https:\/\/s3.amazonaws.com\/nv-p1-s3-assets-01\/\u0027,\r\n    prefixSpecialCharacters: false,\r\n    getPrefixUrl: function () {\r\n        return this.storageUrl + this.subscriberId + \u0027\/\u0027 + this.pid;\r\n    },\r\n    getFullURL: function (type, url) {\r\n        var AMUrl = \u0027\u0027;\r\n        if (url) {\r\n            switch (type) {\r\n                case \u0027css\u0027:\r\n                    AMUrl = this.getPrefixUrl() + \u0027\/CSS\/\u0027 + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \");\r\n                    if (this.prefixSpecialCharacters \u0026\u0026 this.prefixSpecialCharacters.test(AMUrl)) {\r\n                        AMUrl = AMUrl.replace(\/\\?\/g, \"%253F\").replace(\/\\\u0026\/g, \"%26\").replace(\/\\=\/g, \"%3D\");\r\n                    } else {\r\n                        AMUrl = AMUrl.replace(\/\\?.*\/g, \"\");\r\n                    }\r\n                    break;\r\n                case \u0027image\u0027:\r\n                    AMUrl = this.getPrefixUrl() + \u0027\/IMAGE\/\u0027 + url.replace(\/:\\\/\\\/\/g, \"\/\").replace(\/%20\/g, \" \");\r\n                    break;\r\n            }\r\n\r\n        }\r\n        return !!AMUrl ? AMUrl : false;\r\n    },\r\n    init: function () {\r\n        if (this.isActive \u0026\u0026 this.pid \u0026\u0026 this.subscriberId) {\r\n            var transform = ClickTaleSettings.DOM.Transform = ClickTaleSettings.DOM.Transform || [];\r\n            transform.push({\r\n                rule: \u0027link[href][rel*=\"stylesheet\"]\u0027,\r\n                attr: \"href\",\r\n                transform: function (value, node) {\r\n                    if (value.indexOf(\u0027fonts.googleapis.com\u0027) == -1) {\r\n                        return ClickTaleSettings.PTC.AssetManager.getFullURL(\u0027css\u0027, node.href);\r\n                    }\r\n                    return value;\r\n                }\r\n            });\r\n            if (this.isNeedForImg) {\r\n                transform.push({\r\n                    rule: \u0027img[src]\u0027,\r\n                    attr: \"src\",\r\n                    transform: function (value, node) {\r\n                        return ClickTaleSettings.PTC.AssetManager.getFullURL(\u0027img\u0027, node.src);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n};\r\nClickTaleSettings.PTC.AssetManager.init();\r\n\r\nClickTaleSettings.PTC.ConfigChangeMonitor = function () {\r\n    var excludeBothArray = [\u0027div[class*=\"glide\"]\u0027];\r\n\r\n    ClickTaleSettings.ChangeMonitor = {\r\n        Enable: ClickTaleSettings.PTC.EnableChangeMonitor,\r\n        \/\/ Roots: [document.body],\r\n        Exclude: {\r\n            ChildNodes: [],\r\n            Attributes: []\r\n        }\r\n\r\n    }\r\n\r\n    var exclude = ClickTaleSettings.ChangeMonitor.Exclude;\r\n    if (excludeBothArray.length \u003e 0) {\r\n        Array.prototype.push.apply(exclude.ChildNodes, excludeBothArray);\r\n        Array.prototype.push.apply(exclude.Attributes, excludeBothArray);\r\n    }\r\n\r\n    function insertIntoBoth(selector) {\r\n        exclude.ChildNodes.push(selector);\r\n        exclude.Attributes.push(selector);\r\n    }\r\n\r\n    if (document.location.pathname.indexOf(\u0027catalog\u0027)\u003e-1) {\r\n        insertIntoBoth(\u0027head link+style[type=\"text\/css\"]\u0027);\r\n    }\r\n\r\n    if (typeof window.ClickTaleCMSelector === \u0027string\u0027 \u0026\u0026 window.ClickTaleCMSelector != \u0027\u0027) {\r\n        try {\r\n            var domNodes = document.querySelector(ClickTaleCMSelector);\r\n            insertIntoBoth(ClickTaleCMSelector);\r\n        } catch (err) {\r\n            if (typeof ClickTaleNote === \u0027function\u0027) {\r\n                ClickTaleNote(\u0027Bad CM selector: \u0027 + encodeURIComponent(ClickTalePIISelector));\r\n            }\r\n        }\r\n    }\r\n};\r\n\r\nClickTaleSettings.PTC.doOnlyWhen = function (toDoHandler, toCheckHandler, interval, times, failHandler) {\r\n    if ((!toDoHandler) || (!toCheckHandler)) return;\r\n    if (typeof interval == \"undefined\") interval = 100;\r\n    if (typeof times == \"undefined\") times = 10;\r\n    if (--times \u003c 0) {\r\n        if (typeof failHandler === \u0027function\u0027) {\r\n            failHandler();\r\n        }\r\n        return;\r\n    }\r\n    if (toCheckHandler()) {\r\n        toDoHandler();\r\n        return;\r\n    }\r\n    setTimeout(function () {\r\n        ClickTaleSettings.PTC.doOnlyWhen(toDoHandler, toCheckHandler, interval, times, failHandler);\r\n    }, interval);\r\n};\r\n\r\n\r\n\/\/Adobe Target Integration Start\r\nfunction clickTaleATIntegration() {\r\n    var events = [];\r\n    for (var i = 0; i \u003c ttMETA.length; i++) {\r\n        if (ttMETA[i].CampaignName \u0026\u0026 ttMETA[i].RecipeName) {\r\n            events.push(\u0027Campaign: \u0027 + ttMETA[i].CampaignName + \u0027 | Experience: \u0027 + ttMETA[i].RecipeName);\r\n        }\r\n    }\r\n    ClicktaleIntegrationExperienceHandler(events, \"Adobe\");\r\n};\r\n\r\nfunction clickTaleCheckIfATExists() {\r\n    if (window.ClicktaleIntegrationExperienceHandler \u0026\u0026 window.ttMETA \u0026\u0026 ttMETA.length \u003e 0) {\r\n        for (var i = 0; i \u003c ttMETA.length; i++) {\r\n            if (typeof ttMETA[i].CampaignName === \u0027string\u0027 \u0026\u0026 ttMETA[i].CampaignName != \u0027\u0027 \u0026\u0026 typeof ttMETA[i].RecipeName === \u0027string\u0027 \u0026\u0026 ttMETA[i].RecipeName != \u0027\u0027) {\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.doOnlyWhen(clickTaleATIntegration, clickTaleCheckIfATExists, 100, 100);\r\n\/\/Adobe Target Integration End\r\n\r\n\/\/Start CAP Integrations\r\n(function () {\r\n\r\n    \/*\r\n     *Name: OpinionLab CAP Integration\r\n     *Version: 1.10\r\n     *Required Shared Components: Self Invoking function\r\n     *\/\r\n\r\n    var topDom = (function () {\r\n        var i = 0,\r\n            domain = document.domain,\r\n            p = domain.split(\".\"),\r\n            s = \"_gd\" + (new Date()).getTime();\r\n        while (i \u003c (p.length - 1) \u0026\u0026 document.cookie.indexOf(s + \"=\" + s) == -1) {\r\n            domain = p.slice(-1 - (++i)).join(\".\");\r\n            document.cookie = s + \"=\" + s + \";domain=\" + domain + \";SameSite=None;Secure\";\r\n        }\r\n        document.cookie = s + \"=;expires=Thu, 01 Jan 1970 00:00:01 GMT;domain=\" + domain + \";\";\r\n        return domain;\r\n    })();\r\n\r\n    function readCookie(name) {\r\n        var nameEQ = name + \"=\";\r\n        var ca = document.cookie.split(\";\");\r\n        for (var i = 0; i \u003c ca.length; i++) {\r\n            var c = ca[i];\r\n            while (c.charAt(0) == \" \") c = c.substring(1, c.length);\r\n            if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\r\n        }\r\n        return \"\";\r\n    };\r\n\r\n    if (document.location.host.indexOf(\"opinionlab.com\") \u003e -1) {\r\n        window.ClickTaleSettings.PTC.RecordSurvey = false;\r\n        if (window.olData \u0026\u0026 olData[\"clickTaleUID\"]) {\r\n            var getCookieValues = olData[\"clickTaleUID\"];\r\n            if (getCookieValues \u0026\u0026 getCookieValues != \"null\") {\r\n                var splitCookieValues = getCookieValues.split(\"|\");\r\n                var ct_uid = splitCookieValues[0];\r\n                var _cs_id = splitCookieValues[1];\r\n                var _cs_s = readCookie(\"_cs_s\") || splitCookieValues[2];\r\n                var _cs_c = splitCookieValues[3];\r\n                var _cs_optout = splitCookieValues[4];\r\n\r\n                if (ct_uid \u0026\u0026 _cs_id \u0026\u0026 _cs_s \u0026\u0026 _cs_c) {\r\n                    if (_cs_optout) {\r\n                        document.cookie = \"_cs_optout=\" + _cs_optout + \";domain=\" + topDom + \";path=\/;SameSite=None;Secure\";\r\n                    } else {\r\n                        document.cookie = \"_cs_optout=;domain=\" + topDom + \";path=\/;expires=Thu, 01-Jan-1970 00:00:01 GMT;SameSite=None;Secure\";\r\n                        document.cookie = \"_cs_optout=;path=\/;expires=Thu, 01-Jan-1970 00:00:01 GMT;SameSite=None;Secure\";\r\n                        document.cookie = \"_cs_optout=;domain=.\" + document.location.host + \";path=\/;expires=Thu, 01-Jan-1970 00:00:01 GMT;SameSite=None;Secure\";\r\n                    }\r\n\r\n                    var ctCookieName = window.ClickTaleUIDCookieName || \"WRUID\";\r\n                    document.cookie = ctCookieName + \"=\" + ct_uid + \";domain=\" + topDom + \";path=\/;SameSite=None;Secure\";\r\n                    document.cookie = \"_cs_id=\" + _cs_id + \";domain=\" + topDom + \";path=\/;SameSite=None;Secure\";\r\n                    document.cookie = \"_cs_s=\" + _cs_s + \";domain=\" + topDom + \";path=\/;SameSite=None;Secure\";\r\n                    document.cookie = \"_cs_c=\" + _cs_c + \";domain=\" + topDom + \";path=\/;SameSite=None;Secure\";\r\n\r\n                    window.ClickTaleSettings.PTC.RecordSurvey = true;\r\n                }\r\n            }\r\n        }\r\n    } else {\r\n\r\n        function receiveMessage(e) {\r\n            try {\r\n                var data = e.data;\r\n                var parsedData = JSON.parse(data);\r\n\r\n                if (parsedData.contentsquare_integration) {\r\n                    var new_pv_number = parsedData.contentsquare_integration;\r\n                    document.cookie = \"_cs_s=\" + new_pv_number + \";domain=\" + topDom + \";path=\/\";\r\n                }\r\n            } catch (err) {}\r\n        }\r\n\r\n        window.addEventListener(\"message\", receiveMessage, false);\r\n    }\r\n    \/\/OpinionLab CAP Integration End\r\n\r\n    function init(context) {\r\n\r\n        function sendToCS(csTypeVendorPrefix, csKey, csValue, csEventType, csPV) {\r\n            csKey = csTypeVendorPrefix + csKey;\r\n\r\n            window._uxa = window._uxa || [];\r\n            _uxa.push([\"trackDynamicVariable\", {\r\n                key: csKey,\r\n                value: csValue\r\n            }]);\r\n\r\n            if (csEventType === \"etr\") {\r\n                if (window.ClickTaleIsSavedRecording \u0026\u0026 ClickTaleIsSavedRecording() === false) {\r\n                    ClickTaleEventTrigger(\"@ET@ \" + csKey);\r\n                }\r\n            } else if (csEventType === \"reg\") {\r\n                _uxa.push([\"trackPageEvent\", csKey + \" | \" + csValue]);\r\n            }\r\n\r\n            if (csPV) {\r\n                _uxa.push([\"trackPageview\", window.location.pathname + \"?\" + csPV]);\r\n            }\r\n        };\r\n\r\n        \/*\r\n         *Name: Adobe Target CAP Integration\r\n         *Version: 1.9\r\n         *Required Shared Components: Self Invoking function, _uxa afterPageView callback, sendToCS\r\n         *\/\r\n        function startATintegration() {\r\n            setTimeout(function () {\r\n\r\n                var tvp = \"AB_AT_\";\r\n\r\n                for (var i = 0; i \u003c ttMETA.length; i++) {\r\n                    var campaignName = \"\";\r\n                    var variationName = \"\";\r\n\r\n                    if (ttMETA[i][\"CampaignName\"] \u0026\u0026 ttMETA[i][\"RecipeName\"]) {\r\n                        campaignName = ttMETA[i][\"CampaignName\"];\r\n                        variationName = ttMETA[i][\"RecipeName\"];\r\n                    } else if (ttMETA[i][\"campaign\"] \u0026\u0026 ttMETA[i][\"experience\"]) {\r\n                        campaignName = ttMETA[i][\"campaign\"];\r\n                        variationName = ttMETA[i][\"experience\"];\r\n                    }\r\n\r\n                    if (campaignName \u0026\u0026 variationName) {\r\n                        sendToCS(tvp, campaignName, variationName);\r\n                    }\r\n                }\r\n\r\n            }, 500);\r\n        }\r\n\r\n        var integrationATstarted = false;\r\n\r\n        var ttMETA = window.ttMETA;\r\n        if (ttMETA) {\r\n            startATintegration();\r\n        } else {\r\n            Object.defineProperty(window, \"ttMETA\", {\r\n                configurable: true,\r\n                get: function () {\r\n                    return ttMETA;\r\n                },\r\n                set: function (n) {\r\n                    ttMETA = n;\r\n                    if (!integrationATstarted) {\r\n                        integrationATstarted = true;\r\n                        startATintegration();\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        \/\/Adobe Target CAP Integration End\r\n    }\r\n\r\n    function callback(context) {\r\n        if (!disableCallback) {\r\n            disableCallback = true;\r\n            init(context);\r\n\r\n            if (window.CS_CONF) {\r\n                CS_CONF.integrations = CS_CONF.integrations || [];\r\n                CS_CONF.integrations.push(\"Adobe Target\");\r\n            }\r\n        }\r\n    }\r\n\r\n    var disableCallback = false;\r\n\r\n    window._uxa = window._uxa || [];\r\n    _uxa.push([\"afterPageView\", callback]);\r\n\r\n})();\r\n\/\/End CAP Integrations\r\n\r\nfunction ClickTaleOnRecording() {\r\n\r\n    (function () {\r\n        function init() {\r\n            var uxaGet = _uxa.push([\"getSessionData\"]);\r\n            if (uxaGet \u0026\u0026 uxaGet.projectId) {\r\n                var pid = uxaGet.projectId;\r\n                var uu = uxaGet.userId;\r\n                var sn = uxaGet.sessionNumber;\r\n                var pvid = uxaGet.pageNumber;\r\n                if (pid \u0026\u0026 uu \u0026\u0026 sn \u0026\u0026 pvid) {\r\n                    var intLink = \"https:\/\/app.contentsquare.com\/quick-playback\/index.html?pid=\" + pid + \"\u0026uu=\" + uu + \"\u0026sn=\" + sn + \"\u0026pvid=\" + pvid;\r\n                    window.ClicktaleReplayLink = function () {\r\n                        return intLink;\r\n                    }\r\n                    if (window.CS_CONF) {\r\n                        CS_CONF.replaylink = intLink;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        function callback(context) {\r\n            if (!disableCallback) {\r\n                disableCallback = true;\r\n                init(context);\r\n            }\r\n        }\r\n        var disableCallback = false;\r\n        window._uxa = window._uxa || [];\r\n        _uxa.push([\u0027afterPageView\u0027, callback]);\r\n    })();\r\n    \r\n    var PID = ClickTaleGetPID();\r\n    var UID = ClickTaleGetUID();\r\n    var SID = ClickTaleGetSID();\r\n    var intLink = \"https:\/\/dmz01.app.clicktale.com\/Player.aspx?PID=\" + PID + \"\u0026UID=\" + UID + \"\u0026SID=\" + SID;\r\n\r\n    \/\/Blue Triangle Integration Start\r\n    if (ClickTaleIsSavedRecording()) {\r\n        var intToken = \"85e9f1a411b91a3e8ea8764755dda7f4d41cbec2\";\r\n\r\n        function clickTaleBTIntegration() {\r\n            var fullSessionLink = \"https:\/\/subs.app.clicktale.com\/IntegrationEntry.ashx?Type=Playback\u0026amp;IntegrationToken=\" + intToken + \"\u0026PID=\" + PID + \"\u0026UID=\" + UID + \"\u0026SID=\" + SID;\r\n            var specificLink = intLink;\r\n\r\n            bttUT.ctGif({\r\n                ctPID: PID,\r\n                ctUID: UID,\r\n                ctTraceURL: fullSessionLink,\r\n                ctReplayURL: specificLink\r\n            });\r\n\r\n            if (bttUT.GUID \u0026\u0026 bttUT.sessionID) {\r\n                \/\/ClickTaleEvent(\"Blue Triangle: GUID \" + bttUT.GUID + \" | SessionID \" + bttUT.sessionID);\r\n            }\r\n        };\r\n\r\n        function clickTaleCheckIfBTExists() {\r\n            if (window.bttUT \u0026\u0026 typeof bttUT === \"object\" \u0026\u0026 typeof bttUT.ctGif === \"function\") {\r\n                return true;\r\n            }\r\n            return false;\r\n        };\r\n\r\n        window.ClickTaleSettings.PTC.doOnlyWhen(clickTaleBTIntegration, clickTaleCheckIfBTExists, 100, 100);\r\n    }\r\n    \/\/Blue Triangle Integration End\r\n\r\n    \/\/Adobe Analytics Integration Start\r\n    var adobeAnalyticsOrgID = \"F0EF5E09512D2CD20A490D4D@AdobeOrg\";\r\n\r\n    function clickTaleAdobeIntegration() {\r\n        var uniqueID = UID;\r\n        Visitor.getInstance(adobeAnalyticsOrgID).setCustomerIDs({\r\n            \"mcvid\": {\r\n                \"id\": uniqueID\r\n            }\r\n        });\r\n        \/\/ClickTaleEvent(\"Adobe Analytics: Unique ID Sent\");\r\n    };\r\n\r\n    function clickTaleCheckIfAdobeExists() {\r\n        if (window.Visitor \u0026\u0026 typeof Visitor.getInstance === \"function\" \u0026\u0026 typeof Visitor.getInstance(adobeAnalyticsOrgID).setCustomerIDs === \"function\" \u0026\u0026\r\n            typeof Visitor.getInstance(adobeAnalyticsOrgID).getMarketingCloudVisitorID === \"function\") {\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n\r\n    window.ClickTaleSettings.PTC.doOnlyWhen(clickTaleAdobeIntegration, clickTaleCheckIfAdobeExists, 100, 100);\r\n    \/\/Adobe Analytics Integration End\r\n\r\n    \/\/Start CAP Integrations\r\n    if (!window.ClickTaleSettings.PTC.IntegrationsReady) {\r\n        window.ClickTaleSettings.PTC.IntegrationsReady = true;\r\n\r\n        (function () {\r\n\r\n            function init(context) {\r\n\r\n                function sendToCS(csTypeVendorPrefix, csKey, csValue, csEventType, csPV) {\r\n                    csKey = csTypeVendorPrefix + csKey;\r\n\r\n                    window._uxa = window._uxa || [];\r\n                    _uxa.push([\"trackDynamicVariable\", {\r\n                        key: csKey,\r\n                        value: csValue\r\n                    }]);\r\n\r\n                    if (csEventType === \"etr\") {\r\n                        if (window.ClickTaleIsSavedRecording \u0026\u0026 ClickTaleIsSavedRecording() === false) {\r\n                            ClickTaleEventTrigger(\"@ET@ \" + csKey);\r\n                        }\r\n                    } else if (csEventType === \"reg\") {\r\n                        _uxa.push([\"trackPageEvent\", csKey + \" | \" + csValue]);\r\n                    }\r\n\r\n                    if (csPV) {\r\n                        _uxa.push([\"trackPageview\", window.location.pathname + \"?\" + csPV]);\r\n                    }\r\n                }\r\n\r\n                function generateReplayLink(pvNum) {\r\n                    pvNum = pvNum || 0;\r\n\r\n                    var uxaGet = _uxa.push([\"getSessionData\"]);\r\n                    if (uxaGet \u0026\u0026 uxaGet.projectId) {\r\n                        var pid = uxaGet.projectId;\r\n                        var uu = uxaGet.userId;\r\n                        var sn = uxaGet.sessionNumber;\r\n                        var pvid = uxaGet.pageNumber - pvNum;\r\n\r\n                        if (pid \u0026\u0026 uu \u0026\u0026 sn \u0026\u0026 pvid) {\r\n                            var intLink = \"https:\/\/app.contentsquare.com\/quick-playback\/index.html?pid=\" + pid + \"\u0026uu=\" + uu + \"\u0026sn=\" + sn + \"\u0026pvid=\" + pvid;\r\n                            return intLink;\r\n                        }\r\n                    }\r\n                }\r\n\r\n                function readCookie(name) {\r\n                    var nameEQ = name + \"=\";\r\n                    var ca = document.cookie.split(\";\");\r\n                    for (var i = 0; i \u003c ca.length; i++) {\r\n                        var c = ca[i];\r\n                        while (c.charAt(0) == \" \") c = c.substring(1, c.length);\r\n                        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\r\n                    }\r\n                    return \"\";\r\n                }\r\n\r\n                function postMessage(type) {\r\n                    var json = JSON.stringify({\r\n                        contentsquare_integration: readCookie(\"_cs_s\")\r\n                    });\r\n\r\n                    if (type === \"opener\") {\r\n                        window.opener.postMessage(json, document.referrer);\r\n                    } else if (type === \"top\") {\r\n                        window.top.postMessage(json, document.referrer);\r\n                    }\r\n                }\r\n\r\n                \/*\r\n                 *Name: Opinion Lab CAP Integration\r\n                 *Version: 1.16.1 custom (added settimouet to delete localStorage item to solve timing issue)\r\n                 *Required Shared Components: ClickTaleOnRecording, Self Invoking function, _uxa afterPageView callback, sendToCS, readCookie, postMessage, generateReplayLink\r\n                 *Note: It is imperative that the partition and guid be manually defined below\r\n                 *\/\r\n\r\n                var partition = \"www47\";\r\n                var guid = \"d82d7432-724c-4af9-8884-ffab4841f0a1\";\r\n\r\n                if (document.location.host.indexOf(\"opinionlab.com\") === -1) {\r\n\r\n                    var intLink = generateReplayLink();\r\n                    if (intLink) {\r\n                        var UID = ClickTaleGetUID();\r\n                        var userValues = UID + \"|\" + readCookie(\"_cs_id\") + \"|\" + readCookie(\"_cs_s\") + \"|\" + readCookie(\"_cs_c\") + \"|\" + readCookie(\"_cs_optout\");\r\n\r\n                        localStorage.setItem(\"CTuserID\", userValues);\r\n                        localStorage.setItem(\"CTrecordingLink\", intLink);\r\n                        localStorage.setItem(\"CTpartition\", partition);\r\n                        localStorage.setItem(\"CTguid\", guid);\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\tsetTimeout(function () {\r\n                            localStorage.removeItem(\"CTuserID\");\r\n                        }, 6000);\r\n                    }\r\n                } else {\r\n\r\n                    var tvp = \"FB_OL_\";\r\n\r\n                    sendToCS(tvp, \"Feedback Displayed (All Surveys)\", \"true\");\r\n                    if (window.opener) {\r\n                        postMessage(\"opener\");\r\n                    } else if (self != top) {\r\n                        postMessage(\"top\");\r\n                    }\r\n\r\n                    function receiveMessage(e) {\r\n                        if (e.origin != \"https:\/\/secure.opinionlab.com\") {\r\n                            return;\r\n                        }\r\n                        var data = e.data;\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tvar parsedData = JSON.parse(data);\r\n\t\t\t\t\t\t} catch (e) {\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t}\r\n\r\n                        if (parsedData.message === \"ClicktaleOpinionLab_Submitted\" || parsedData.message === \"ContentsquareOpinionLab_Submitted\") {\r\n                            var surveyID = parsedData.ccid || \"\";\r\n\r\n                            sendToCS(tvp, \"Feedback Submitted\", \"Survey ID : \" + surveyID, \"etr\", \"cs_opinionlab=feedback_submitted_\" + surveyID);\r\n                            if (window.opener) {\r\n                                postMessage(\"opener\");\r\n                            } else if (self != top) {\r\n                                postMessage(\"top\");\r\n                            }\r\n\r\n                            var responseId = parsedData.responseId;\r\n                            if (responseId) {\r\n                                sendToCS(tvp, \"Response ID (\" + surveyID + \")\", responseId);\r\n                            }\r\n\r\n                            var overallRating = parsedData.overallRating;\r\n                            if (overallRating) {\r\n                                sendToCS(tvp, \"Overall Rating (\" + surveyID + \")\", parseInt(overallRating));\r\n                            }\r\n\r\n                            var usabilityRating = parsedData.usabilityRating;\r\n                            if (usabilityRating) {\r\n                                sendToCS(tvp, \"Usability Rating (\" + surveyID + \")\", parseInt(usabilityRating));\r\n                            }\r\n\r\n                            var designRating = parsedData.designRating;\r\n                            if (designRating) {\r\n                                sendToCS(tvp, \"Design Rating (\" + surveyID + \")\", parseInt(designRating));\r\n                            }\r\n\r\n                            var contentRating = parsedData.contentRating;\r\n                            if (contentRating) {\r\n                                sendToCS(tvp, \"Content Rating (\" + surveyID + \")\", parseInt(contentRating));\r\n                            }\r\n\r\n                            for (i = 1; i \u003c 13; i++) {\r\n                                eval(\r\n                                    \"var answer\" + [i] + \" = parsedData.answer\" + [i] + \";\" +\r\n                                    \"if (answer\" + [i] + \") {\" +\r\n                                    \"var isRating\" + [i] + \" = \u0027\u0027;\" +\r\n                                    \"var setAnswer = answer\" + [i] + \";\" +\r\n                                    \"if (answer\" + [i] + \" != \u00270\u0027) {\" +\r\n                                    \"if (!isNaN(answer\" + [i] + \")) {\" +\r\n                                    \"isRating\" + [i] + \" = \u0027 Rating\u0027;\" +\r\n                                    \"setAnswer = parseInt(setAnswer);\" +\r\n                                    \"}\" +\r\n                                    \"sendToCS(tvp, \u0027Custom Answer \" + [i] + \"\u0027 + isRating\" + [i] + \" + \u0027 (\u0027 + surveyID + \u0027)\u0027, setAnswer);\" +\r\n                                    \"}}\"\r\n                                );\r\n                            }\r\n\r\n                        }\r\n                    }\r\n                    window.addEventListener(\"message\", receiveMessage, false);\r\n                }\r\n                \/\/Opinion Lab CAP Integration End\r\n            }\r\n\r\n            function callback(context) {\r\n                if (!disableCallback) {\r\n                    disableCallback = true;\r\n                    init(context);\r\n\r\n                    if (window.CS_CONF) {\r\n                        CS_CONF.integrations = CS_CONF.integrations || [];\r\n                        CS_CONF.integrations.push(\"Opinion Lab\");\r\n                    }\r\n\r\n                }\r\n            }\r\n\r\n            var disableCallback = false;\r\n\r\n            window._uxa = window._uxa || [];\r\n            _uxa.push([\"afterPageView\", callback]);\r\n\r\n        })();\r\n    }\r\n    \/\/End CAP Integrations\r\n}\r\n\r\n\r\n\r\n\/\/ End of user-defined pre WR code\r\n\r\n\r\nvar isHttps = document.location.protocol == \u0027https:\u0027,\r\n\tscriptSource = window.ClickTaleScriptSource,\r\n\tpccSource = scriptSource;\r\n\r\nif (!scriptSource) {\r\n\twindow.ClickTaleScriptSource = isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/www\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/www\/\u0027;\r\n}\r\n\r\n\r\nif(!ClickTaleGlobal.init.pccRequested) {\r\n\t\tvar pccSrc = pccSource ? pccSource : (isHttps ? \u0027https:\/\/cdnssl.clicktale.net\/pcc\/\u0027 : \u0027http:\/\/cdn.clicktale.net\/pcc\/\u0027);\r\n\t    pccSrc += \u0027d82d7432-724c-4af9-8884-ffab4841f0a1.js?DeploymentConfigName=Release_20201019\u0026Version=1\u0027;\r\n\t\t\tvar pccScriptElement = ClickTaleCreateDOMElement(\u0027script\u0027);\r\n\tpccScriptElement.type = \"text\/javascript\";\r\n\tpccScriptElement.crossOrigin = \"anonymous\";\r\n\t\tpccScriptElement.async = true;\r\n\t\tif(ClickTaleGlobal.scripts.sri \u0026\u0026 ClickTaleGlobal.scripts.sri.hashes){\n        pccScriptElement.integrity = ClickTaleGlobal.scripts.sri.hashes.pcc;\n        pccScriptElement.src = ClickTaleGlobal.scripts.sri.path + \"pcc.js\";\n\t}else {\n       pccScriptElement.src = pccSrc;\n    }\n\t\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(pccScriptElement);\n\t\tClickTaleGlobal.init.pccRequested = true;\r\n}\r\n\t\r\nwindow.ClickTalePrevOnReady = typeof window.ClickTaleOnReady == \u0027function\u0027 ? window.ClickTaleOnReady : void 0;\r\n\r\nwindow.ClickTaleOnReady = function() {\r\n\tvar PID=24, \r\n\t\tRatio=0.5, \r\n\t\tPartitionPrefix=\"www47\",\r\n\t\tSubsId=233441;\r\n\t\r\n\tif (window.navigator \u0026\u0026 window.navigator.loadPurpose === \"preview\") {\r\n       return;\r\n\t};\r\n\t\t\r\n\t\r\n\t\/\/ Start of user-defined header code (PreInitialize)\r\n\twindow._uxa = window._uxa || [];\r\nwindow.ClickTaleSettings = window.ClickTaleSettings || {};\r\nwindow.ClickTaleSettings.PTC = window.ClickTaleSettings.PTC || {};\r\nwindow.ClickTaleSettings.PTC.CustomVariables = window.ClickTaleSettings.PTC.CustomVariables || [];\r\nwindow.ClickTaleSettings.PTC.CustomVariables = [\r\n    { displayName: \u0027Page Name\u0027, key: \u0027pageName\u0027, slot: 1, dataSource: 1 },\r\n    { displayName: \u0027Department Name\u0027, key: \u0027departmentName\u0027, slot: 2, dataSource: 2 },\r\n    { displayName: \u0027Category Name\u0027, key: \u0027categoryName\u0027, slot: 3, dataSource: 2 },\r\n    { displayName: \u0027Subcategory Name\u0027, key: \u0027subcategoryName\u0027, slot: 4, dataSource: 2 }\r\n];\r\nfunction sendCVar() {\r\n    var data = window[\u0027s\u0027];\r\n    var data2 = !!window[\u0027pageData\u0027] \u0026\u0026 window[\u0027pageData\u0027][\u0027productDetails\u0027];\r\n    var cVars = window.ClickTaleSettings.PTC.CustomVariables;\r\n    if (!!data || !!data2) {\r\n        for (var i = 0; i \u003c cVars.length; i++) {\r\n            var currentData = (cVars[i].dataSource == 1) ? data : data2;\r\n            !!currentData \u0026\u0026 !!currentData[cVars[i].key] \u0026\u0026 window._uxa.push([\u0027setCustomVariable\u0027, cVars[i].slot, cVars[i].displayName, currentData[cVars[i].key]]);\r\n        }\r\n    }\r\n}\r\n\r\nwindow.ClickTaleOnStop = window.ClickTaleOnStop || [];\r\nClickTaleOnStop.push(sendCVar);\r\nsendCVar();\r\n\/\/IMP-81\r\nif (location.href.indexOf(\u0027\/checkout\/v2\/checkout.jsp\u0027) \u003e -1) {\r\n    window._uxa.push([\u0027setQuery\u0027, \u0027?__checkoutshipinfo\u0027]);\r\n}\r\n\/\/Block pageEvent piggybackking off of CT events to reduce amount of calls\r\n\/*if (window.ClickTaleGlobal \u0026\u0026 ClickTaleGlobal.symbols \u0026\u0026 !isNaN(ClickTaleGlobal.symbols.WRProjectType)) {\r\n    var oldClickTaleEvent = ClickTaleEvent;\r\n    var previoustype = ClickTaleGlobal.symbols.WRProjectType;\r\n    ClickTaleEvent = function () {\r\n        ClickTaleGlobal.symbols.WRProjectType = -1;\r\n        var res = oldClickTaleEvent.apply(this, arguments);\r\n        ClickTaleGlobal.symbols.WRProjectType = previoustype;\r\n        return res;\r\n    }\r\n}*\/\r\n\r\n\/\/Don\u0027t capture keystroke related events on the login page\r\nif (document.location.pathname == \"\/myaccount\/kohls_login.jsp\") {\r\n    ClickTaleEventsMask -= 4\r\n}\r\n\r\n\r\n\/\/Don\u0027t record my account pages (except the login page)\r\nif (document.location.href.indexOf(\u0027https:\/\/www.kohls.com\/myaccount\/\u0027) \u003e -1 \u0026\u0026 document.location.pathname != \"\/myaccount\/kohls_login.jsp\") {\r\n    return;\r\n}\r\n\r\n\/\/OpinionLab Integration Start\r\nif (ClickTaleSettings.PTC.RecordSurvey === false) {\r\n    return;\r\n}\r\n\/\/OpinionLab Integration End\r\n\r\nif (typeof ClickTaleSetAllSensitive === \"function\") {\r\n    ClickTaleSetAllSensitive();\r\n};\r\n\r\nwindow.ClickTaleSettings.PTC.InitFuncs = window.ClickTaleSettings.PTC.InitFuncs || [];\r\nwindow.ClickTaleSettings.PTC.InitFuncs.push(function () {\r\n    var pcc = document.querySelector(\u0027script[src*=\"clicktale\"][src*=\"pcc\"]\u0027);\r\n    if (pcc) {\r\n        var versionmatch = pcc.src.match(\/DeploymentConfigName=(.+)\/i);\r\n        if (versionmatch \u0026\u0026 typeof ClickTaleExec === \u0027function\u0027) {\r\n            ClickTaleExec(\"console.info(\u0027\" + versionmatch[0] + \"\u0027);\");\r\n            ClickTaleEvent(\"Config: \" + versionmatch[1].replace(\/\\\u0026.+\/, \u0027\u0027));\r\n        }\r\n    }\r\n});\r\n\r\nfunction doUpload() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n        ClickTaleUploadPageNow();\r\n        window.ClickTaleSettings.PTC.UploadPageHappened = true;\r\n    };\r\n};\r\n\r\nfunction isReadyToRecord() {\r\n    if (typeof ClickTaleUploadPageNow === \u0027function\u0027 \u0026\u0026 ClickTaleIsRecording()) {\r\n        if (!window.ClickTaleSettings.PTC.IsMobile) {\r\n            if (document.location.href.toLowerCase().indexOf(\u0027kohls.com\/catalog\u0027) \u003e -1) {\r\n                return document.querySelectorAll(\".third-party-parent img[src]\").length \u003e 4;\r\n            }\r\n            else if (document.location.href.toLowerCase().indexOf(\u0027\/product\/prd-\u0027) \u003e -1) { \/\/ PDP pages - SUP-979\r\n                return !!(document.querySelectorAll(\u0027body #container #content img.pdp-image-main-img\u0027).length \u003e 0);\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n    return false;\r\n};\r\n\r\nClickTaleDelayUploadPage();\r\n\r\n\/\/AB Test Integration Timeout\r\nsetTimeout(function () {\r\n    window.ClickTaleSettings.PTC.doOnlyWhen(doUpload, isReadyToRecord, 500, 6, doUpload);\r\n}, 1000);\r\n\r\nvar initFuncs = window.ClickTaleSettings.PTC.InitFuncs;\r\nfor (var i = 0, initLen = initFuncs.length; i \u003c initLen; i++) {\r\n    if (typeof initFuncs[i] === \u0027function\u0027) {\r\n        initFuncs[i]();\r\n    }\r\n}\r\n\r\n\t\/\/ End of user-defined header code (PreInitialize)\r\n    \r\n\t\r\n\twindow.ClickTaleIncludedOnDOMReady=true;\r\n\t\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 ClickTale(PID, Ratio, PartitionPrefix, SubsId);\r\n\t\r\n\tif((typeof ClickTalePrevOnReady == \u0027function\u0027) \u0026\u0026 (ClickTaleOnReady.toString() != ClickTalePrevOnReady.toString()))\r\n\t{\r\n    \tClickTalePrevOnReady();\r\n\t}\r\n\t\r\n\t\r\n\t\/\/ Start of user-defined footer code\r\n\t\r\n\t\/\/ End of user-defined footer code\r\n\t\r\n}; \r\n(function() {\r\n\tvar div = ClickTaleCreateDOMElement(\"div\");\r\n\tdiv.id = \"ClickTaleDiv\";\r\n\tdiv.style.display = \"none\";\r\n\tdocument.body.appendChild(div);\r\n\r\n\t\r\n\t\tvar wrScript = ClickTaleCreateDOMElement(\"script\");\r\n\twrScript.crossOrigin = \"anonymous\";\r\n\twrScript.type = \u0027text\/javascript\u0027;\r\n\t\twrScript.async = true;\r\n\t\tif(ClickTaleGlobal.scripts.sri \u0026\u0026 ClickTaleGlobal.scripts.sri.hashes){\n        wrScript.integrity = ClickTaleGlobal.scripts.sri.hashes.wr;\n        wrScript.src = ClickTaleGlobal.scripts.sri.path + \"wr.js\";\n\t}else {\n        wrScript.src = window.ClickTaleScriptSource + \u0027latest-WR110.js\u0027;\r\n    }\r\n\r\n\tClickTaleGlobal.init.isAllowed \u0026\u0026 document.body.appendChild(wrScript);\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nvar ctVEconfig={VE_BASE_URL:\"https:\/\/ve-cec-na1.app.clicktale.com\/\",VE_PROXY_BASE_URL:\"https:\/\/vep-cec-na1.app.clicktale.com\/\"};!function(){try{var e=window.chrome,t=window.navigator\u0026\u0026window.navigator.vendor;null!=e\u0026\u0026\"Google Inc.\"===t\u0026\u0026window.addEventListener\u0026\u0026addEventListener(\"message\",o,!1);var n=window.location.search.substring(window.location.search.indexOf(\"ctAdvancedSearch=\")).split(\"\u0026\")[0].split(\"=\");\"ctAdvancedSearch\"==n[0]\u0026\u0026\"true\"==n[1]\u0026\u0026c(\"ctAdvancedSearchModule\",ctVEconfig.VE_BASE_URL+\"client\/dist\/advancedSearchModule.js\")}catch(e){}function o(e){var t;try{t=JSON.parse(e.data)}catch(e){return}!1!==new RegExp(\"(app[.]clicktale[.]com)($|:)\").test(e.origin)\u0026\u0026(window.ct_ve_parent_window=e.source,\"CT_testRules\"==t.name\u0026\u0026(sessionStorage.setItem(\"CT_testRules\",!0),console.log((new Date).toJSON(),\"PostPTC: testRules \",sessionStorage.getItem(\"CT_testRules\")),window.ct_ve_parent_window.postMessage({name:\"testRulesRecieved\",params:{}},\"*\")),\"CTload_ve\"===t.function\u0026\u0026\"function\"==typeof ClickTaleGetPID\u0026\u0026null!==ClickTaleGetPID()\u0026\u0026(function(){console.log((new Date).toJSON(),\"PostPTC: start loading test rules\");var e=ClickTaleGetPID();c(\"ctTestRulesModule\",ctVEconfig.VE_BASE_URL+\"rulesEngineContent\/TestPCC\/\"+e,function(){sessionStorage.setItem(\"CT_testRules_Loaded\",!0),console.log((new Date).toJSON(),\"PostPTC: test rules loaded\")})}(),c(\"ctVisualEditorClientModule\",ctVEconfig.VE_BASE_URL+\"client\/dist\/veClientModule.js\")))}function c(e,t,n){var o,c=(o=\"script\",document.createElementNS?document.createElementNS(\"http:\/\/www.w3.org\/1999\/xhtml\",o):document.createElement(o));c.setAttribute(\"type\",\"text\/javascript\"),c.setAttribute(\"id\",e),c.src=t,void 0!==n\u0026\u0026(c.onload=n),document.getElementById(e)||document.body.appendChild(c)}}();");
		document.body.appendChild(script);	})();
	}

//Signature:oqn3K8a0ZxBT1GyvBOshCY64ePrwK1BP5FxsN9uzqlLySHC52ETq+NrfkSCwC0hZ6RXIYIjO8G5r+wh8z/hwkceuYOiTaf7dWsfDvamhRSxeyjbBa+YrB+YuaL229P2d7bAVxoc+9QwnWW4VxcgFwY+cHwGsQvZ+ZGeI7JPJ2Cs=