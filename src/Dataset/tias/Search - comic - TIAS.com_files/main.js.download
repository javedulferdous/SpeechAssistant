/* vim: set ts=2 sw=2 sts=2 et: */
;(function($){

  window.BcsePinterest = function(elm, pins, hide_sold, disable_reload) {
    this.initialize(elm, pins, hide_sold, disable_reload);
  };

  window.BcsePinterest.prototype = {

    initialize: function(elm, pins, hide_sold, disable_reload) {
      this.elm = $(elm);
      this.elm.addClass('pinterest-box loading');
      this.is_mobile = isMobile.any;
      this.selected_board = '';
      if (typeof(pins) == 'string') {
        this._setBoard(pins);
        pins = '';
      }
      this.pins_hide_sold = hide_sold ? true : false;
      this.disable_reload_button = disable_reload ? true : false;
      if (pins) {
        this.loadPins(pins);
      } else {
        this.requestPins();
      }
    },

    requestPins: function(refresh) {
      this.elm.html('');
      if (refresh === true) {
        this.selected_board = '';
      }
      (function(o){
        $.ajax({
          type: 'post',
          url: xcart_web_dir + '/cart.php',
          data: {
            mode: 'bcse_get_pins',
            select_board_key: o.selected_board,
            pins_hide_sold: o.pins_hide_sold ? 1 : 0,
            refresh_board: refresh === true ? 1 : 0
          },
          success: function(data) {
            try {
              if (data.num_pins < 1) {
                return o.reloadPins();
              }
              o.loadPins(data);
              o.initReloadHeader();
            } catch(e) {
              o.reloadPins();
            }
          },
          error: function() {
            o.reloadPins();
          }
        });
      })(this);
    },

    _setBoard: function(board) {
      if (!board) {
        board = '';
      }
      this.selected_board = board;
    },

    loadPins: function(data) {
      this.num_pins = data.num_pins;
      this.loaded_pins = 0;
      if (data.board) {
        var header = $('<h2/>').addClass('pinterest-header').html(data.board.name || 'Featured Pins');
        this.elm.before(header);
        this.header = header;
      }
      var pins = $('<div/>');
      this.elm.append(pins);
      this.grid = $('<ul/>').addClass('pin-grid');
      pins.append(this.grid);
      this.pins = [];

      this._image_load_queue = [];
      for (var x in data.pins) {
        this._image_load_queue.push(data.pins[x]);
      }
      if (!this.is_mobile) {
        (function(self){
          self.elm.scroll(function() {
            if ($(this).outerHeight() + $(this).scrollTop() > self.grid.outerHeight() - 25) {
              self._loadPage(true);
            }
          });
        })(this);
        this._loadPage();
      } else {
        this._processImageLoadQueue();
      }
    },

    _loadPage: function(show_icon) {
      if (this._loading_page || this._image_load_queue.length < 1) {
        return false;
      }
      if (show_icon) {
        this.grid.addClass('loading');
      }
      this._loading_page = true;
      this._num_page_images = Math.min(this.per_page, this._image_load_queue.length);
      this._processed_page_images = 0;
      this.pins = [];
      for (var x = 0; x < this._num_page_images; x++) {
        var pin = this._image_load_queue.shift();
        var li = this._getPinBox(pin);
        (function(self){
          var i = new Image();
          i.box = li;
          i.onload = function() {
            self.incrementPagePinLoad(i);
          };
          i.onerror = function() {
            self.incrementPagePinLoad(i);
          };
          i.src = pin.tmbn_url;
          self.pins.push(i.box);
        })(this);
      }
    },

    incrementPagePinLoad: function(i) {
      this.loaded_pins++;
      this._processed_page_images++;
      if (this._processed_page_images == this._num_page_images) {
        var st = this.elm.scrollTop();
        this.displayPins();
        this.grid.removeClass('loading');
        this.elm.scrollTop(st);
        this._loading_page = false;
      }
    },

    _processImageLoadQueue: function() {
      if (this._image_load_queue.length < 1) {
        return this;
      }
      var pin = this._image_load_queue.shift();
      var li = this._getPinBox(pin);
      (function(self){
        var i = new Image();
        i.box = li;
        i.onload = function() {
          self.incrementPinLoad(i);
          self._processImageLoadQueue();
        };
        i.onerror = function() {
          self.incrementPinLoad(i);
          self._processImageLoadQueue();
        };
        i.src = pin.tmbn_url;
      })(this);
    },

    _getPinBox: function(pin) {
      var li = $('<li/>').css({width: (100 / this.num_columns) + '%'});
      var box = $('<div/>').addClass('pin-item');
      li.append(box);
      var a = $('<a/>').attr('href', pin.product_url).css({display: 'block'});
      var img = $('<img/>')
      .attr('src', pin.tmbn_url);
      if (pin.descr) {
        img.attr('title', pin.descr.replace(/<br[^>]*>/ig, "\n").replace(/(<([^>]+)>)/ig,""));
      }
      a.append(img);
      a.append('<h4>' + pin.product + '</h4>');
      box.append(a);
      box.append(
        '<div class="clear" style="font-size: 13px;">' +
        '<div class="right" style="color: #800315;">' + pin.taxed_price + '</div>' +
        (pin.store ? ('<a href="' + (pin.store_url || '') + '" style="display: block; margin-right: 55px; text-align: left; color: #888888;">' + pin.store + '</div>') : '') +
        '</div>'
      );
      return li;
    },

    incrementPinLoad: function(i) {
      this.loaded_pins++;
      if (this.loaded_pins <= this.min_pins) {
        this.pins.push(i.box);
      }
      if (this.loaded_pins == this.min_pins) {
        this.displayPins();
      } else if (this.loaded_pins > this.min_pins) {
        this.addPinDisplay(i.box);
      }
    },

    addPinDisplay: function(pin) {
      this.pins_queue.push(pin);
      this._processPinQueue();
    },

    displayPin: function(pin) {
      var min_height = false;
      for (y = 1; y <= this.num_columns; y++) {
        if (min_height === false) {
          min_height = this.columns[y].height;
        } else {
          min_height = Math.min(min_height, this.columns[y].height);
        }
      }
      var column = 1;
      for (y = 1; y <= this.num_columns; y++) {
        if (this.columns[y].height == min_height) {
          column = y;
          break;
        }
      }
      pin.css({
        position: 'absolute',
        top: min_height + 'px',
        left: (100 / this.num_columns * (column - 1)) + '%'
      });
      this.grid.append(pin);
      this.columns[column].height += pin.outerHeight();
      this.columns[column].pins.push(pin);
      return this;
    },

    displayPins: function() {
      if (!this.initial_load) {
        this.elm.removeClass('loading');
        this.grid.html('');
        this.columns = {};
        for (var y = 1; y <= this.num_columns; y++) {
          this.columns[y] = {
            height: 0,
            pins: []
          };
        }
        this.grid.css({position: 'relative'});
      }
      for (var x = 0; x < this.pins.length; x++) {
        var pin = this.pins[x];
        this.displayPin(pin);
      }
      var max_height = 0;
      for (var z = 1; z <= this.num_columns; z++) {
        max_height = Math.max(max_height, this.columns[z].height);
      }
      this.grid.css({height: max_height + 'px'});
      this.elm.scrollTop(0);

      this.initial_load = true;
      this._processPinQueue();
    },

    _processPinQueue: function() {
      if (!this.initial_load || this.pins_queue.length < 1) {
        return;
      }
      if (!this._display_in_progress) {
        this._display_in_progress = true;

        var pin = this.pins_queue.shift();

        this.displayPin(pin);

        var max_height = 0;
        for (y = 1; y <= this.num_columns; y++) {
          max_height = Math.max(max_height, this.columns[y].height);
        }
        this.grid.css({height: max_height + 'px'});

        this._display_in_progress = false;
        if (this.pins_queue.length > 0) {
          this._processPinQueue();
        }
      }
    },

    initReloadHeader: function() {
      if (this.disable_reload_button) {
        return false;
      }
      (function(self){
        self.header.bind('click', function(e) {
          if (self.overHeaderLoadButton(e)) {
            self.reloadPins();
          }
        });
        self.header.bind('mousemove', function(e) {
          if (self.overHeaderLoadButton(e)) {
            $(this).css('cursor', 'pointer');
          } else {
            $(this).css('cursor', 'default');
          }
        });
      })(this);
    },

    overHeaderLoadButton: function(e) {
      var offset = this.header.offset();
      var min_y = offset.top + parseInt(this.header.css('paddingTop'));
      var max_y = offset.top + parseInt(this.header.outerHeight()) - parseInt(this.header.css('paddingBottom'));
      var min_x = offset.left + parseInt(this.header.outerWidth()) - parseInt(this.header.css('paddingRight')) - 165;
      var max_x = min_x + 165;
      return e.pageY >= min_y && e.pageY <= max_y && e.pageX >= min_x && e.pageX <= max_x;
    },

    reloadPins: function() {
      if (this.header) {
        this.header.remove();
      }
      this.elm.html('').addClass('pinterest-box loading');
      this.initial_load = false;
      this.requestPins(true);
    },

    num_columns: 3,

    min_pins: 9,

    initial_load: false,

    per_page: 12,

    pins_queue: []

  };

  $(document).ready(function() {
    if (isMobile.any) {
      $('body').addClass('bcse-homepage-mobile');
    }
  });

  $(window).load(function(){
    if ($('.homepage-welcome').length > 0) {
      var is_mobile = isMobile.any;
      $('div[data-type="pins"]').each(function() {
        var pins = false;
        var section = $(this).attr('data-section');
        if (is_mobile && section != 'newest_products') {
          return;
        }
        if (window.homepage_pins && window.homepage_pins[section]) {
          pins = window.homepage_pins[section];
        }
        if (is_mobile) {
          $(this).addClass('visible').prev().addClass('visible');
        }
        this.bcse_pinterest = new BcsePinterest(this, pins);
      });
      if (!is_mobile) {
        var div = $('<div/>');
        $('.homepage-welcome:first').before(div);
        var elm = div.get(0);
        var selected_board = $('.homepage-welcome:first').attr('data-pin-board');
        if (!selected_board) {
          selected_board = '';
        }
        var pins_hide_sold = $('.homepage-welcome:first').attr('data-hide-sold');
        if (!pins_hide_sold || pins_hide_sold != 'true') {
          pins_hide_sold = false;
        } else {
          pins_hide_sold = true;
        }
        var disable_reload = $('.homepage-welcome:first').attr('data-disable-reload');
        if (!disable_reload || disable_reload != 'true') {
          disable_reload = false;
        } else {
          disable_reload = true;
        }
//BCSE remove pinterest section 3/2016
//        elm.bcse_pinterest = new BcsePinterest(elm, selected_board, pins_hide_sold, disable_reload);
      } else {
        $('.section-tabs a').bind('click', function(){
          var section = $(this).attr('data-section');
          var div = $('div[data-section="' + section + '"]');
          var h2 = div.prev();
          if (!div.hasClass('visible')) {
            $('.homepage-welcome .visible').removeClass('visible');
            if (!div.get(0).bcse_pinterest) {
              var pins = false;
              if (window.homepage_pins && window.homepage_pins[section]) {
                pins = window.homepage_pins[section];
              }
              div.get(0).bcse_pinterest = new BcsePinterest(div.get(0), pins);
            }
            div.addClass('visible');
            h2.addClass('visible');
            $('.section-tabs .active').removeClass('active');
            $(this).parent().addClass('active');
          }
          return false;
        });
      }
    }
  });

})(jQuery);

!function(a){var b=/iPhone/i,c=/iPod/i,d=/iPad/i,e=/(?=.*\bAndroid\b)(?=.*\bMobile\b)/i,f=/Android/i,g=/IEMobile/i,h=/(?=.*\bWindows\b)(?=.*\bARM\b)/i,i=/BlackBerry/i,j=/Opera Mini/i,k=/(?=.*\bFirefox\b)(?=.*\bMobile\b)/i,l=new RegExp("(?:Nexus 7|BNTV250|Kindle Fire|Silk|GT-P1000)","i"),m=function(a,b){return a.test(b)},n=function(a){var n=a||navigator.userAgent;this.apple={phone:m(b,n),ipod:m(c,n),tablet:m(d,n),device:m(b,n)||m(c,n)||m(d,n)},this.android={phone:m(e,n),tablet:!m(e,n)&&m(f,n),device:m(e,n)||m(f,n)},this.windows={phone:m(g,n),tablet:m(h,n),device:m(g,n)||m(h,n)},this.other={blackberry:m(i,n),opera:m(j,n),firefox:m(k,n),device:m(i,n)||m(j,n)||m(k,n)},this.seven_inch=m(l,n),this.any=this.apple.device||this.android.device||this.windows.device||this.other.device||this.seven_inch,this.phone=this.apple.phone||this.android.phone||this.windows.phone,this.tablet=this.apple.tablet||this.android.tablet||this.windows.tablet},o=new n;o.Class=n,"undefined"!=typeof module&&module.exports?module.exports=o:"function"==typeof define&&define.amd?define(o):a.isMobile=o}(this);
